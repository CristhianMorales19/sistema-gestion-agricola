diff --git a/.babelrc b/.babelrc
deleted file mode 100644
index ae52d83..0000000
--- a/.babelrc
+++ /dev/null
@@ -1,3 +0,0 @@
-{
-  "presets": ["@babel/preset-env", "@babel/preset-react", "@babel/preset-typescript"]
-}
\ No newline at end of file
diff --git a/.gitignore b/.gitignore
index b9ca66c..b45bfcd 100644
--- a/.gitignore
+++ b/.gitignore
@@ -61,3 +61,32 @@ frontend/.eslintcache
 # Backend específico
 backend/dist/
 backend/uploads/
+
+
+# ==============================================
+# NUEVAS REGLAS PARA ARCHIVOS JavaScript
+# ==============================================
+
+# Excluir archivos JavaScript compilados
+*.js
+**/*.js
+
+# Pero permitir archivos de configuración JavaScript
+!*.config.js
+!**/*.config.js
+!/**/*.config.js
+
+# Permitir archivos de configuración específicos
+!webpack.config.js
+!rollup.config.js
+!jest.config.js
+!babel.config.js
+!ecosystem.config.js
+
+# Excluir archivos .map
+*.map
+**/*.map
+
+# TypeScript build outputs
+lib/
+types/
\ No newline at end of file
diff --git a/azure-pipelines.yml b/azure-pipelines.yml
deleted file mode 100644
index 898c199..0000000
--- a/azure-pipelines.yml
+++ /dev/null
@@ -1,23 +0,0 @@
-trigger:
-- main
-
-pool:
-  name: Default
-  demands:
-    - Agent.Name -equals DESKTOP-NUK01OF
-
-steps:
-- task: NodeTool@0
-  inputs:
-    versionSpec: '16.x'
-  displayName: 'Instalar Node.js'
-
-- script: |
-    echo "Listando contenido del directorio raíz:"
-    dir /s
-    echo "Cambiando al directorio backend y listando contenido:"
-    cd backend
-    dir
-    npm install
-    npm run test
-  displayName: 'Listar contenido y ejecutar pruebas'
\ No newline at end of file
diff --git a/backend/auth0-scripts/create-script.js b/backend/auth0-scripts/create-script.js
deleted file mode 100644
index e69de29..0000000
diff --git a/backend/auth0-scripts/get-user-script.js b/backend/auth0-scripts/get-user-script.js
deleted file mode 100644
index e69de29..0000000
diff --git a/backend/auth0-scripts/login-script.js b/backend/auth0-scripts/login-script.js
deleted file mode 100644
index e69de29..0000000
diff --git a/backend/crear-usuario-auth0.sql b/backend/crear-usuario-auth0.sql
index ce0d25d..92b07c4 100644
--- a/backend/crear-usuario-auth0.sql
+++ b/backend/crear-usuario-auth0.sql
@@ -6,25 +6,26 @@ INSERT INTO agromano.moh_trabajador_historial (
     fecha_accion_at, created_at
 ) VALUES (
     1, 'CREACION_USUARIO_AUTH0', 
-    '{"auth0_id": "auth0|68b8a6d1bf1669b349577af6", "email": "usuario@agromano.com"}',
+    '{"auth0_user_id": "auth0|68b8a6d1bf1669b349577af6", "email": "usuario@agromano.com"}',
     1, NOW(), NOW()
 );
 
 -- 2. Crear el usuario vinculado a Auth0
 INSERT INTO agromano.mot_usuario (
-    trabajador_id, username, password_hash, rol_id, estado,
+    trabajador_id, auth0_user_id, username, password_hash, rol_id, estado,
     created_at, created_by
 ) VALUES (
     1, 
-    'auth0|68b8a6d1bf1669b349577af6', 
+    'auth0|68b8a6d1bf1669b349577af6',
+    "usuario@agromano.com",
     'auth0_managed', 
     1, -- Rol de administrador
-    'ACTIVO',
+    'activo',
     NOW(),
     1
 ) ON DUPLICATE KEY UPDATE
     username = 'auth0|68b8a6d1bf1669b349577af6',
-    estado = 'ACTIVO';
+    estado = 'activo';
 
 -- 3. Verificar que se creó correctamente
 SELECT 
diff --git a/backend/debug-auth0.js b/backend/debug-auth0.js
deleted file mode 100644
index f6464de..0000000
--- a/backend/debug-auth0.js
+++ /dev/null
@@ -1,69 +0,0 @@
-const axios = require('axios');
-require('dotenv').config();
-
-async function debugAuth0() {
-    console.log('🔍 Diagnóstico Auth0\n');
-
-    const config = {
-        domain: process.env.AUTH0_DOMAIN,
-        clientId: process.env.AUTH0_CLIENT_ID,
-        clientSecret: process.env.AUTH0_CLIENT_SECRET,
-        audience: process.env.AUTH0_AUDIENCE
-    };
-
-    console.log('Configuración actual:');
-    console.log(`Domain: ${config.domain}`);
-    console.log(`Client ID: ${config.clientId}`);
-    console.log(`Audience: ${config.audience}`);
-    console.log(`Client Secret: ${config.clientSecret ? config.clientSecret.substring(0, 10) + '...' : 'NO CONFIGURADO'}\n`);
-
-    // Prueba 1: Token sin audience
-    console.log('🧪 Prueba 1: Obteniendo token sin audience específico...');
-    try {
-        const tokenResponse1 = await axios.post(`https://${config.domain}/oauth/token`, {
-            client_id: config.clientId,
-            client_secret: config.clientSecret,
-            grant_type: 'client_credentials'
-        });
-
-        console.log('✅ Token obtenido sin audience!');
-        console.log(`Scopes: ${tokenResponse1.data.scope || 'Ninguno'}`);
-        console.log(`Token: ${tokenResponse1.data.access_token.substring(0, 50)}...\n`);
-
-    } catch (error1) {
-        console.log('❌ Error sin audience:');
-        if (error1.response) {
-            console.log(`Status: ${error1.response.status}`);
-            console.log(`Error: ${JSON.stringify(error1.response.data)}`);
-        }
-        console.log('');
-    }
-
-    // Prueba 2: Token con audience
-    console.log('🧪 Prueba 2: Obteniendo token con audience...');
-    try {
-        const tokenResponse2 = await axios.post(`https://${config.domain}/oauth/token`, {
-            client_id: config.clientId,
-            client_secret: config.clientSecret,
-            audience: config.audience,
-            grant_type: 'client_credentials'
-        });
-
-        console.log('✅ Token obtenido con audience!');
-        console.log(`Scopes: ${tokenResponse2.data.scope || 'Ninguno'}`);
-        console.log(`Token: ${tokenResponse2.data.access_token.substring(0, 50)}...\n`);
-
-        return tokenResponse2.data.access_token;
-
-    } catch (error2) {
-        console.log('❌ Error con audience:');
-        if (error2.response) {
-            console.log(`Status: ${error2.response.status}`);
-            console.log(`Error: ${JSON.stringify(error2.response.data)}`);
-        }
-        console.log('');
-        return null;
-    }
-}
-
-debugAuth0().catch(console.error);
diff --git a/backend/package-lock.json b/backend/package-lock.json
index ecaedfa..c0aeb35 100644
--- a/backend/package-lock.json
+++ b/backend/package-lock.json
@@ -9,7 +9,7 @@
       "version": "1.0.0",
       "license": "MIT",
       "dependencies": {
-        "@prisma/client": "^5.2.0",
+        "@prisma/client": "^5.22.0",
         "auth0": "^4.29.0",
         "axios": "^1.11.0",
         "bcryptjs": "^2.4.3",
@@ -17,8 +17,9 @@
         "dayjs": "^1.11.0",
         "dotenv": "^16.0.0",
         "exceljs": "^4.3.0",
-        "express": "^4.18.0",
+        "express": "^4.21.2",
         "express-jwt": "^8.5.1",
+        "express-oauth-server": "^2.0.0",
         "express-rate-limit": "^6.7.0",
         "helmet": "^6.0.0",
         "joi": "^17.7.0",
@@ -26,13 +27,12 @@
         "jwks-rsa": "^3.2.0",
         "lodash": "^4.17.0",
         "multer": "^1.4.5-lts.1",
-        "mysql2": "^3.2.0",
+        "mysql2": "^3.15.0",
         "node-cron": "^3.0.0",
         "nodemailer": "^6.9.0",
         "passport": "^0.6.0",
         "passport-jwt": "^4.0.0",
         "passport-local": "^1.0.0",
-        "prisma": "^5.2.0",
         "puppeteer": "^21.0.0",
         "socket.io": "^4.7.0",
         "winston": "^3.8.0",
@@ -41,7 +41,7 @@
       "devDependencies": {
         "@types/bcryptjs": "^2.4.0",
         "@types/cors": "^2.8.0",
-        "@types/express": "^4.17.0",
+        "@types/express": "^4.17.23",
         "@types/jsonwebtoken": "^9.0.0",
         "@types/lodash": "^4.14.0",
         "@types/multer": "^1.4.0",
@@ -55,11 +55,11 @@
         "eslint": "^8.33.0",
         "jest": "^29.4.0",
         "nodemon": "^2.0.0",
-        "prisma": "^5.2.0",
+        "prisma": "^5.22.0",
         "ts-jest": "^29.0.0",
-        "ts-node": "^10.9.0",
+        "ts-node": "^10.9.2",
         "tsx": "^3.12.0",
-        "typescript": "^4.9.0"
+        "typescript": "^4.9.5"
       }
     },
     "node_modules/@ampproject/remapping": {
@@ -4164,6 +4164,15 @@
         "node": "^4.5.0 || >= 5.9"
       }
     },
+    "node_modules/basic-auth": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/basic-auth/-/basic-auth-1.1.0.tgz",
+      "integrity": "sha512-CtGuTyWf3ig+sgRyC7uP6DM3N+5ur/p8L+FPfsd+BbIfIs74TFfCajZTHnCw6K5dqM0bZEbRIqRy1fAdiUJhTA==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
     "node_modules/basic-ftp": {
       "version": "5.0.5",
       "resolved": "https://registry.npmjs.org/basic-ftp/-/basic-ftp-5.0.5.tgz",
@@ -4645,6 +4654,32 @@
         "node": ">= 0.12.0"
       }
     },
+    "node_modules/co-bluebird": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/co-bluebird/-/co-bluebird-1.1.0.tgz",
+      "integrity": "sha512-JuoemMXxQjYAxbfRrNpOsLyiwDiY8mXvGqJyYLM7jMySDJtnMklW3V2o8uyubpc1eN2YoRsAdfZ1lfKCd3lsrA==",
+      "dependencies": {
+        "bluebird": "^2.10.0",
+        "co-use": "^1.1.0"
+      },
+      "engines": {
+        "node": ">=0.12.0"
+      }
+    },
+    "node_modules/co-bluebird/node_modules/bluebird": {
+      "version": "2.11.0",
+      "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-2.11.0.tgz",
+      "integrity": "sha512-UfFSr22dmHPQqPP9XWHRhq+gWnHCYguQGkXQlbyPtW5qTnhFWA8/iXg765tH0cAjy7l/zPJ1aBTO0g5XgA7kvQ==",
+      "license": "MIT"
+    },
+    "node_modules/co-use": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/co-use/-/co-use-1.1.0.tgz",
+      "integrity": "sha512-1lVRtdywv41zQO/xvI2wU8w6oFcUYT6T84YKSxN25KN4N4Kld3scLovt8FjDmD63Cm7HtyRWHjezt+IanXmkyA==",
+      "engines": {
+        "node": ">=0.12.0"
+      }
+    },
     "node_modules/collect-v8-coverage": {
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/collect-v8-coverage/-/collect-v8-coverage-1.0.2.tgz",
@@ -5856,6 +5891,20 @@
         "node": ">= 8.0.0"
       }
     },
+    "node_modules/express-oauth-server": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/express-oauth-server/-/express-oauth-server-2.0.0.tgz",
+      "integrity": "sha512-+UrTbvU7u3LVnoUavzO7QJgSqiEZREKprCZYrDEVoSszrO4t8f/BBPbY3hQOuuatoS0PgDFLaDKQsGNtAgPm5w==",
+      "license": "SEE LICENSE IN LICENSE",
+      "dependencies": {
+        "bluebird": "^3.0.5",
+        "express": "^4.13.3",
+        "oauth2-server": "3.0.0"
+      },
+      "engines": {
+        "node": ">=0.11"
+      }
+    },
     "node_modules/express-rate-limit": {
       "version": "6.11.2",
       "resolved": "https://registry.npmjs.org/express-rate-limit/-/express-rate-limit-6.11.2.tgz",
@@ -6811,6 +6860,12 @@
         "node": ">=8"
       }
     },
+    "node_modules/is-generator": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/is-generator/-/is-generator-1.0.3.tgz",
+      "integrity": "sha512-G56jBpbJeg7ds83HW1LuShNs8J73Fv3CPz/bmROHOHlnKkN8sWb9ujiagjmxxMUywftgq48HlBZELKKqFLk0oA==",
+      "license": "MIT"
+    },
     "node_modules/is-generator-fn": {
       "version": "2.1.0",
       "resolved": "https://registry.npmjs.org/is-generator-fn/-/is-generator-fn-2.1.0.tgz",
@@ -8293,9 +8348,9 @@
       }
     },
     "node_modules/mysql2": {
-      "version": "3.14.4",
-      "resolved": "https://registry.npmjs.org/mysql2/-/mysql2-3.14.4.tgz",
-      "integrity": "sha512-Cs/jx3WZPNrYHVz+Iunp9ziahaG5uFMvD2R8Zlmc194AqXNxt9HBNu7ZsPYrUtmJsF0egETCWIdMIYAwOGjL1w==",
+      "version": "3.15.0",
+      "resolved": "https://registry.npmjs.org/mysql2/-/mysql2-3.15.0.tgz",
+      "integrity": "sha512-tT6pomf5Z/I7Jzxu8sScgrYBMK9bUFWd7Kbo6Fs1L0M13OOIJ/ZobGKS3Z7tQ8Re4lj+LnLXIQVZZxa3fhYKzA==",
       "license": "MIT",
       "dependencies": {
         "aws-ssl-profiles": "^1.1.1",
@@ -8546,6 +8601,57 @@
         "node": ">=8"
       }
     },
+    "node_modules/oauth2-server": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/oauth2-server/-/oauth2-server-3.0.0.tgz",
+      "integrity": "sha512-TlDDkKECOTjQQ9pQobw/EESLbd7YVY1i0Ebos996Au88FqiLUbQ+X/cRBCq6gvpkoA0ByrDsF8c97SyRygfE6Q==",
+      "license": "MIT",
+      "dependencies": {
+        "basic-auth": "1.1.0",
+        "bluebird": "3.5.0",
+        "lodash": "4.17.4",
+        "promisify-any": "2.0.1",
+        "statuses": "1.3.1",
+        "type-is": "1.6.15"
+      },
+      "engines": {
+        "node": ">=4.0"
+      }
+    },
+    "node_modules/oauth2-server/node_modules/bluebird": {
+      "version": "3.5.0",
+      "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-3.5.0.tgz",
+      "integrity": "sha512-3LE8m8bqjGdoxfvf71yhFNrUcwy3NLy00SAo+b6MfJ8l+Bc2DzQ7mUHwX6pjK2AxfgV+YfsjCeVW3T5HLQTBsQ==",
+      "license": "MIT"
+    },
+    "node_modules/oauth2-server/node_modules/lodash": {
+      "version": "4.17.4",
+      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.4.tgz",
+      "integrity": "sha512-6X37Sq9KCpLSXEh8uM12AKYlviHPNNk4RxiGBn4cmKGJinbXBneWIV7iE/nXkM928O7ytHcHb6+X6Svl0f4hXg==",
+      "license": "MIT"
+    },
+    "node_modules/oauth2-server/node_modules/statuses": {
+      "version": "1.3.1",
+      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.3.1.tgz",
+      "integrity": "sha512-wuTCPGlJONk/a1kqZ4fQM2+908lC7fa7nPYpTC1EhnvqLX/IICbeP1OZGDtA374trpSq68YubKUMo8oRhN46yg==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
+    "node_modules/oauth2-server/node_modules/type-is": {
+      "version": "1.6.15",
+      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.15.tgz",
+      "integrity": "sha512-0uqZYZDiBICTVXEsNcDLueZLPgZ8FgGe8lmVDQ0FcVFUeaxsPbFWiz60ZChVw8VELIt7iGuCehOrZSYjYteWKQ==",
+      "license": "MIT",
+      "dependencies": {
+        "media-typer": "0.3.0",
+        "mime-types": "~2.1.15"
+      },
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
     "node_modules/object-assign": {
       "version": "4.1.1",
       "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
@@ -9031,6 +9137,25 @@
         "node": ">=0.4.0"
       }
     },
+    "node_modules/promisify-any": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/promisify-any/-/promisify-any-2.0.1.tgz",
+      "integrity": "sha512-pVaGouFbTVxqpVJ+T5A15olNJDASAZHYq5cXz6mWdr6/X34mVWiG9MSdzHTcVBCv4aqBP7wGspi7BUSRbEmhsw==",
+      "dependencies": {
+        "bluebird": "^2.10.0",
+        "co-bluebird": "^1.1.0",
+        "is-generator": "^1.0.2"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/promisify-any/node_modules/bluebird": {
+      "version": "2.11.0",
+      "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-2.11.0.tgz",
+      "integrity": "sha512-UfFSr22dmHPQqPP9XWHRhq+gWnHCYguQGkXQlbyPtW5qTnhFWA8/iXg765tH0cAjy7l/zPJ1aBTO0g5XgA7kvQ==",
+      "license": "MIT"
+    },
     "node_modules/prompts": {
       "version": "2.4.2",
       "resolved": "https://registry.npmjs.org/prompts/-/prompts-2.4.2.tgz",
diff --git a/backend/package.json b/backend/package.json
index 71a848f..617f9d8 100644
--- a/backend/package.json
+++ b/backend/package.json
@@ -27,7 +27,7 @@
   "author": "Tu Nombre",
   "license": "MIT",
   "dependencies": {
-    "@prisma/client": "^5.2.0",
+    "@prisma/client": "^5.22.0",
     "auth0": "^4.29.0",
     "axios": "^1.11.0",
     "bcryptjs": "^2.4.3",
@@ -35,22 +35,22 @@
     "dayjs": "^1.11.0",
     "dotenv": "^16.0.0",
     "exceljs": "^4.3.0",
-    "express": "^4.18.0",
+    "express": "^4.21.2",
     "express-jwt": "^8.5.1",
+    "express-oauth-server": "^2.0.0",
     "express-rate-limit": "^6.7.0",
     "helmet": "^6.0.0",
     "joi": "^17.7.0",
     "jsonwebtoken": "^9.0.0",
     "jwks-rsa": "^3.2.0",
     "lodash": "^4.17.0",
-    "multer": "^2.0.2",
-    "mysql2": "^3.2.0",
+    "multer": "^1.4.5-lts.1",
+    "mysql2": "^3.15.0",
     "node-cron": "^3.0.0",
     "nodemailer": "^6.9.0",
     "passport": "^0.6.0",
     "passport-jwt": "^4.0.0",
     "passport-local": "^1.0.0",
-    "prisma": "^5.2.0",
     "puppeteer": "^21.0.0",
     "socket.io": "^4.7.0",
     "winston": "^3.8.0",
@@ -59,7 +59,7 @@
   "devDependencies": {
     "@types/bcryptjs": "^2.4.0",
     "@types/cors": "^2.8.0",
-    "@types/express": "^4.17.0",
+    "@types/express": "^4.17.23",
     "@types/jsonwebtoken": "^9.0.0",
     "@types/lodash": "^4.14.0",
     "@types/multer": "^1.4.0",
@@ -73,11 +73,11 @@
     "eslint": "^8.33.0",
     "jest": "^29.4.0",
     "nodemon": "^2.0.0",
-    "prisma": "^5.2.0",
+    "prisma": "^5.22.0",
     "ts-jest": "^29.0.0",
-    "ts-node": "^10.9.0",
+    "ts-node": "^10.9.2",
     "tsx": "^3.12.0",
-    "typescript": "^4.9.0"
+    "typescript": "^4.9.5"
   },
   "prisma": {
     "seed": "tsx prisma/seed.ts"
diff --git a/backend/prisma/schema.prisma b/backend/prisma/schema.prisma
index c918ff7..88323e1 100644
--- a/backend/prisma/schema.prisma
+++ b/backend/prisma/schema.prisma
@@ -568,6 +568,7 @@ model mot_tarea_programada {
 /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 model mot_usuario {
   usuario_id                 Int             @id @default(autoincrement())
+  auth0_user_id              String?         @unique
   trabajador_id              Int?
   username                   String          @unique(map: "username") @db.VarChar(100)
   password_hash              String          @db.VarChar(255)
diff --git a/backend/prisma/seed.ts b/backend/prisma/seed.ts
index cdf7cca..b116c76 100644
--- a/backend/prisma/seed.ts
+++ b/backend/prisma/seed.ts
@@ -6,244 +6,408 @@ const prisma = new PrismaClient();
 async function main() {
   console.log('🌱 Iniciando seeds de la base de datos...');
 
-  // Crear departamentos
-  console.log('📁 Creando departamentos...');
-  const departamentos = await Promise.all([
-    prisma.departamento.create({
-      data: {
-        nombre: 'Administración',
-        descripcion: 'Departamento administrativo y gerencial'
-      }
-    }),
-    prisma.departamento.create({
-      data: {
-        nombre: 'Producción',
-        descripcion: 'Departamento de producción agrícola'
-      }
-    }),
-    prisma.departamento.create({
-      data: {
-        nombre: 'Mantenimiento',
-        descripcion: 'Departamento de mantenimiento y equipos'
-      }
-    }),
-    prisma.departamento.create({
-      data: {
-        nombre: 'Recursos Humanos',
-        descripcion: 'Departamento de gestión humana'
-      }
-    })
-  ]);
+  // Limpiar datos existentes (opcional - ten cuidado en producción)
+  console.log('🧹 Limpiando datos existentes...');
+  const modelNames = [
+    'rel_mom_tarea__mom_esquema_pago',
+    'rel_mom_rol__mom_permiso',
+    'rel_mom_parcela__mom_cultivo',
+    'rel_mom_cuadrilla__mom_trabajador',
+    'mot_usuario',
+    'mot_tarea_programada',
+    'mot_registro_productividad',
+    'mot_recibo',
+    'mot_liquidacion',
+    'mot_info_laboral',
+    'mot_deduccion_especial',
+    'mot_condiciones_trabajo',
+    'mot_concepto_liquidacion',
+    'mot_ausencia_justificada',
+    'mot_asistencia',
+    'mot_asignacion_tarea',
+    'mot_asignacion_cultivo_parcela',
+    'mot_asignacion_cuadrilla',
+    'moh_trabajador_historial',
+    'mol_audit_log',
+    'mom_trabajador',
+    'mom_tarea',
+    'mom_rol',
+    'mom_permiso',
+    'mom_periodo_nomina',
+    'mom_parcela',
+    'mom_formula_pago',
+    'mom_esquema_pago',
+    'mom_deduccion_especial_tipo',
+    'mom_cultivo',
+    'mom_cuadrilla',
+    'mom_bonificacion'
+  ];
 
-  // Crear cargos
-  console.log('💼 Creando cargos...');
-  const cargos = await Promise.all([
-    prisma.cargo.create({
-      data: {
-        nombre: 'Gerente General',
-        descripcion: 'Máximo responsable de la empresa',
-        salarioBase: 5000000
-      }
-    }),
-    prisma.cargo.create({
-      data: {
-        nombre: 'Supervisor',
-        descripcion: 'Supervisor de área',
-        salarioBase: 2500000
-      }
-    }),
-    prisma.cargo.create({
-      data: {
-        nombre: 'Operario Agrícola',
-        descripcion: 'Trabajador de campo',
-        salarioBase: 1200000
-      }
-    }),
-    prisma.cargo.create({
-      data: {
-        nombre: 'Técnico Mantenimiento',
-        descripcion: 'Técnico en mantenimiento de equipos',
-        salarioBase: 1800000
+  for (const modelName of modelNames) {
+    try {
+      await (prisma as any)[modelName].deleteMany();
+      console.log(`✅ ${modelName} limpiado`);
+    } catch (error) {
+      if (error instanceof Error) {
+          console.log(`⚠️  No se pudo limpiar ${modelName}:`, error.message);
+      } else {
+          console.log(`⚠️  No se pudo limpiar ${modelName}:`, String(error));
       }
-    }),
-    prisma.cargo.create({
-      data: {
-        nombre: 'Asistente Administrativo',
-        descripcion: 'Apoyo administrativo',
-        salarioBase: 1300000
-      }
-    })
-  ]);
-
-  // Crear usuario administrador
-  console.log('👤 Creando usuario administrador...');
-  const hashedPassword = await bcrypt.hash('admin123', 12);
-  
-  const adminUser = await prisma.usuario.create({
-    data: {
-      email: 'admin@gestionagricola.com',
-      password: hashedPassword,
-      nombre: 'Administrador',
-      apellido: 'Sistema',
-      rol: 'ADMIN'
     }
+  }
+
+  // Crear permisos
+  console.log('🔐 Creando permisos...');
+  const permisos = await prisma.mom_permiso.createMany({
+    data: [
+      { nombre: 'ver_dashboard', categoria: 'dashboard', descripcion: 'Ver panel de control', created_at: new Date(), created_by: 1},
+      { nombre: 'gestionar_empleados', categoria: 'empleados', descripcion: 'Gestionar empleados', created_at: new Date(), created_by: 1},
+      { nombre: 'gestionar_nominas', categoria: 'nominas', descripcion: 'Gestionar nóminas', created_at: new Date(), created_by: 1},
+      { nombre: 'gestionar_parcelas', categoria: 'parcelas', descripcion: 'Gestionar parcelas', created_at: new Date(), created_by: 1},
+      { nombre: 'ver_reportes', categoria: 'reportes', descripcion: 'Ver reportes', created_at: new Date(), created_by: 1}
+    ]
   });
 
-  // Crear empleado administrador
-  console.log('👨‍💼 Creando empleado administrador...');
-  const adminEmpleado = await prisma.empleado.create({
+  // Crear roles
+  console.log('👔 Creando roles...');
+  const administradorRole = await prisma.mom_rol.create({
     data: {
-      cedula: '12345678',
+      codigo: 'ADMIN',
       nombre: 'Administrador',
-      apellido: 'Sistema',
-      email: 'admin@gestionagricola.com',
-      telefono: '300-123-4567',
-      direccion: 'Calle Principal #123',
-      fechaIngreso: new Date(),
-      salarioBase: 5000000,
-      cargoId: cargos[0].id, // Gerente General
-      departamentoId: departamentos[0].id, // Administración
-      usuarioId: adminUser.id
+      descripcion: 'Rol con todos los permisos del sistema',
+      fecha_creacion_at: new Date(),
+      created_at: new Date(),
+      created_by: 1
     }
   });
 
-  // Crear empleados de ejemplo
-  console.log('👥 Creando empleados de ejemplo...');
-  
-  // Supervisor
-  const supervisorUser = await prisma.usuario.create({
+  const supervisorRole = await prisma.mom_rol.create({
     data: {
-      email: 'supervisor@gestionagricola.com',
-      password: await bcrypt.hash('supervisor123', 12),
-      nombre: 'Juan Carlos',
-      apellido: 'Supervisor',
-      rol: 'SUPERVISOR'
+      codigo: 'SUPER',
+      nombre: 'Supervisor',
+      descripcion: 'Rol de supervisor de campo',
+      fecha_creacion_at: new Date(),
+      created_at: new Date(),
+      created_by: 1
     }
   });
 
-  const supervisorEmpleado = await prisma.empleado.create({
+  const trabajadorRole = await prisma.mom_rol.create({
     data: {
-      cedula: '87654321',
-      nombre: 'Juan Carlos',
-      apellido: 'Supervisor',
-      email: 'supervisor@gestionagricola.com',
-      telefono: '300-987-6543',
-      direccion: 'Carrera 50 #25-30',
-      fechaNacimiento: new Date('1985-03-15'),
-      fechaIngreso: new Date('2020-01-15'),
-      salarioBase: 2500000,
-      cargoId: cargos[1].id, // Supervisor
-      departamentoId: departamentos[1].id, // Producción
-      usuarioId: supervisorUser.id
+      codigo: 'TRABAJ',
+      nombre: 'Trabajador',
+      descripcion: 'Rol de trabajador agrícola',
+      fecha_creacion_at: new Date(),
+      created_at: new Date(),
+      created_by: 1
     }
   });
 
-  // Operarios
-  const operarios = await Promise.all([
-    prisma.empleado.create({
+  // Asignar permisos a roles
+  console.log('🔗 Asignando permisos a roles...');
+  const allPermisos = await prisma.mom_permiso.findMany();
+  for (const permiso of allPermisos) {
+    await prisma.rel_mom_rol__mom_permiso.create({
       data: {
-        cedula: '11111111',
-        nombre: 'María',
-        apellido: 'González',
-        email: 'maria.gonzalez@gestionagricola.com',
-        telefono: '300-111-1111',
-        direccion: 'Barrio Los Rosales #45-12',
-        fechaNacimiento: new Date('1992-07-22'),
-        fechaIngreso: new Date('2021-03-01'),
-        salarioBase: 1200000,
-        cargoId: cargos[2].id, // Operario Agrícola
-        departamentoId: departamentos[1].id // Producción
+        rol_id: administradorRole.rol_id,
+        permiso_id: permiso.permiso_id,
+        created_at: new Date(),
+        created_by: 1
       }
-    }),
-    prisma.empleado.create({
-      data: {
-        cedula: '22222222',
-        nombre: 'Pedro',
-        apellido: 'Martínez',
-        email: 'pedro.martinez@gestionagricola.com',
-        telefono: '300-222-2222',
-        direccion: 'Vereda La Esperanza Km 5',
-        fechaNacimiento: new Date('1988-11-10'),
-        fechaIngreso: new Date('2020-08-15'),
-        salarioBase: 1200000,
-        cargoId: cargos[2].id, // Operario Agrícola
-        departamentoId: departamentos[1].id // Producción
+    });
+  }
+
+  // Crear trabajadores
+  console.log('👷 Creando trabajadores...');
+  const trabajadores = await prisma.mom_trabajador.createMany({
+    data: [
+      {
+        documento_identidad: '123456789',
+        nombre_completo: 'Juan Pérez López',
+        fecha_nacimiento: new Date('1985-05-15'),
+        telefono: '+1234567890',
+        email: 'juan.perez@empresa.com',
+        fecha_registro_at: new Date(),
+        created_at: new Date(),
+        created_by: 1
+      },
+      {
+        documento_identidad: '987654321',
+        nombre_completo: 'María García Rodríguez',
+        fecha_nacimiento: new Date('1990-08-22'),
+        telefono: '+0987654321',
+        email: 'maria.garcia@empresa.com',
+        fecha_registro_at: new Date(),
+        created_at: new Date(),
+        created_by: 1
+      },
+      {
+        documento_identidad: '456789123',
+        nombre_completo: 'Carlos Martínez Sánchez',
+        fecha_nacimiento: new Date('1988-12-10'),
+        telefono: '+4567891230',
+        email: 'carlos.martinez@empresa.com',
+        fecha_registro_at: new Date(),
+        created_at: new Date(),
+        created_by: 1
       }
-    }),
-    prisma.empleado.create({
+    ]
+  });
+
+  // Crear información laboral
+  console.log('💼 Creando información laboral...');
+  const trabajadoresList = await prisma.mom_trabajador.findMany();
+  
+  for (const trabajador of trabajadoresList) {
+    await prisma.mot_info_laboral.create({
       data: {
-        cedula: '33333333',
-        nombre: 'Ana',
-        apellido: 'López',
-        email: 'ana.lopez@gestionagricola.com',
-        telefono: '300-333-3333',
-        direccion: 'Centro #123-45',
-        fechaNacimiento: new Date('1995-05-18'),
-        fechaIngreso: new Date('2022-01-10'),
-        salarioBase: 1300000,
-        cargoId: cargos[4].id, // Asistente Administrativo
-        departamentoId: departamentos[0].id // Administración
+        trabajador_id: trabajador.trabajador_id,
+        cargo: 'Trabajador Agrícola',
+        fecha_ingreso_at: new Date(),
+        tipo_contrato: 'Indefinido',
+        salario_base: 1200.00,
+        fecha_ultima_actualizacion_at: new Date(),
+        usuario_ultima_actualizacion: 1,
+        created_at: new Date(),
+        created_by: 1
       }
-    })
-  ]);
+    });
+  }
 
-  // Crear registros de asistencia de ejemplo (últimos 7 días)
-  console.log('⏰ Creando registros de asistencia...');
-  const empleadosIds = [adminEmpleado.id, supervisorEmpleado.id, ...operarios.map(o => o.id)];
+  // Crear usuarios
+  console.log('👤 Creando usuarios...');
+  const passwordHash = await bcrypt.hash('password123', 12);
   
-  for (let i = 6; i >= 0; i--) {
-    const fecha = new Date();
-    fecha.setDate(fecha.getDate() - i);
-    
-    for (const empleadoId of empleadosIds) {
-      // Simular asistencia normal (80% de probabilidad)
-      if (Math.random() > 0.2) {
-        const horaEntrada = new Date(fecha);
-        horaEntrada.setHours(7 + Math.floor(Math.random() * 2), Math.floor(Math.random() * 60)); // 7:00-8:59
-        
-        const horaSalida = new Date(fecha);
-        horaSalida.setHours(16 + Math.floor(Math.random() * 2), Math.floor(Math.random() * 60)); // 16:00-17:59
-        
-        const horasRegulares = (horaSalida.getTime() - horaEntrada.getTime()) / (1000 * 60 * 60);
-        const horasExtras = horasRegulares > 8 ? horasRegulares - 8 : 0;
-        
-        await prisma.registroAsistencia.create({
-          data: {
-            empleadoId,
-            fecha,
-            horaEntrada,
-            horaSalida,
-            horasRegulares: Math.min(horasRegulares, 8),
-            horasExtras,
-            estado: horaEntrada.getHours() > 8 ? 'TARDANZA' : 'PRESENTE'
-          }
-        });
+  await prisma.mot_usuario.createMany({
+    data: [
+      {
+        trabajador_id: trabajadoresList[0].trabajador_id,
+        username: 'admin',
+        password_hash: passwordHash,
+        rol_id: administradorRole.rol_id,
+        created_at: new Date(),
+        created_by: 1
+      },
+      {
+        trabajador_id: trabajadoresList[1].trabajador_id,
+        username: 'supervisor',
+        password_hash: passwordHash,
+        rol_id: supervisorRole.rol_id,
+        created_at: new Date(),
+        created_by: 1
+      },
+      {
+        trabajador_id: trabajadoresList[2].trabajador_id,
+        username: 'trabajador',
+        password_hash: passwordHash,
+        rol_id: trabajadorRole.rol_id,
+        created_at: new Date(),
+        created_by: 1
       }
-    }
-  }
+    ]
+  });
 
-  // Crear metas de ejemplo
-  console.log('🎯 Creando metas de ejemplo...');
-  for (const empleadoId of empleadosIds.slice(1)) { // Excluir admin
-    await prisma.meta.create({
-      data: {
-        empleadoId,
-        titulo: 'Productividad Mensual',
-        descripcion: 'Alcanzar meta de productividad del mes',
-        fechaInicio: new Date(),
-        fechaVencimiento: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 días
-        valorObjetivo: 100,
-        valorActual: Math.floor(Math.random() * 80),
-        unidadMedida: 'porcentaje'
+  // Crear cultivos
+  console.log('🌱 Creando cultivos...');
+  const cultivos = await prisma.mom_cultivo.createMany({
+    data: [
+      {
+        nombre: 'Maíz',
+        descripcion: 'Cultivo de maíz amarillo',
+        unidad_medida_principal: 'kilogramos',
+        temporada_tipica: 'Primavera-Verano',
+        created_at: new Date(),
+        created_by: 1
+      },
+      {
+        nombre: 'Frijol',
+        descripcion: 'Cultivo de frijol negro',
+        unidad_medida_principal: 'kilogramos',
+        temporada_tipica: 'Verano-Otoño',
+        created_at: new Date(),
+        created_by: 1
+      },
+      {
+        nombre: 'Tomate',
+        descripcion: 'Cultivo de tomate cherry',
+        unidad_medida_principal: 'kilogramos',
+        temporada_tipica: 'Todo el año',
+        created_at: new Date(),
+        created_by: 1
       }
-    });
-  }
+    ]
+  });
+
+  // Crear parcelas
+  console.log('🏞️ Creando parcelas...');
+  const parcelas = await prisma.mom_parcela.createMany({
+    data: [
+      {
+        nombre: 'Parcela Norte',
+        ubicacion_descripcion: 'Zona norte de la finca',
+        area_hectareas: 5.5,
+        tipo_terreno: 'Arcilloso',
+        descripcion: 'Parcela principal para cultivos de temporada',
+        created_at: new Date(),
+        created_by: 1
+      },
+      {
+        nombre: 'Parcela Sur',
+        ubicacion_descripcion: 'Zona sur de la finca',
+        area_hectareas: 3.2,
+        tipo_terreno: 'Arenoso',
+        descripcion: 'Parcela para cultivos especiales',
+        created_at: new Date(),
+        created_by: 1
+      },
+      {
+        nombre: 'Parcela Este',
+        ubicacion_descripcion: 'Zona este de la finca',
+        area_hectareas: 4.8,
+        tipo_terreno: 'Mixto',
+        descripcion: 'Parcela para rotación de cultivos',
+        created_at: new Date(),
+        created_by: 1
+      }
+    ]
+  });
+
+  // Crear tareas
+  console.log('📋 Creando tareas...');
+  const cultivosList = await prisma.mom_cultivo.findMany();
+  
+  const tareas = await prisma.mom_tarea.createMany({
+    data: [
+      {
+        cultivo_id: cultivosList[0].cultivo_id,
+        nombre: 'Siembra de maíz',
+        descripcion: 'Siembra manual de semillas de maíz',
+        unidad_medicion: 'hectáreas',
+        rendimiento_estandar: 0.5,
+        instrucciones: 'Sembrar a 5cm de profundidad con 50cm de separación',
+        niveles_dificultad: 'Media',
+        created_at: new Date(),
+        created_by: 1
+      },
+      {
+        cultivo_id: cultivosList[1].cultivo_id,
+        nombre: 'Cosecha de frijol',
+        descripcion: 'Recolección manual de frijol',
+        unidad_medicion: 'kilogramos',
+        rendimiento_estandar: 20.0,
+        instrucciones: 'Cosechar cuando las vainas estén secas',
+        niveles_dificultad: 'Baja',
+        created_at: new Date(),
+        created_by: 1
+      },
+      {
+        cultivo_id: cultivosList[2].cultivo_id,
+        nombre: 'Riego de tomate',
+        descripcion: 'Riego por goteo de plantas de tomate',
+        unidad_medicion: 'plantas',
+        rendimiento_estandar: 100.0,
+        instrucciones: 'Regar cada 2 días por la mañana',
+        niveles_dificultad: 'Baja',
+        created_at: new Date(),
+        created_by: 1
+      }
+    ]
+  });
+
+  // Crear esquemas de pago
+  console.log('💰 Creando esquemas de pago...');
+  const esquemasPago = await prisma.mom_esquema_pago.createMany({
+    data: [
+      {
+        codigo: 'PAGO_HORA',
+        nombre: 'Pago por Hora',
+        tipo: 'hora',
+        descripcion: 'Pago basado en horas trabajadas',
+        fecha_creacion_at: new Date(),
+        created_at: new Date(),
+        created_by: 1
+      },
+      {
+        codigo: 'PAGO_RENDIM',
+        nombre: 'Pago por Rendimiento',
+        tipo: 'rendimiento',
+        descripcion: 'Pago basado en producción',
+        fecha_creacion_at: new Date(),
+        created_at: new Date(),
+        created_by: 1
+      },
+      {
+        codigo: 'PAGO_MIXTO',
+        nombre: 'Pago Mixto',
+        tipo: 'mixto',
+        descripcion: 'Combinación de pago por hora y rendimiento',
+        fecha_creacion_at: new Date(),
+        created_at: new Date(),
+        created_by: 1
+      }
+    ]
+  });
+
+  // Crear bonificaciones
+  console.log('🎯 Creando bonificaciones...');
+  const bonificaciones = await prisma.mom_bonificacion.createMany({
+    data: [
+      {
+        codigo: 'BON_PUNTUAL',
+        nombre: 'Bonificación por Puntualidad',
+        descripcion: 'Bonificación por asistencia perfecta',
+        tipo: 'fija',
+        monto_fijo: 50.00,
+        condiciones_aplicacion: 'Asistencia perfecta durante el mes',
+        created_at: new Date(),
+        created_by: 1
+      },
+      {
+        codigo: 'BON_RENDIM',
+        nombre: 'Bonificación por Alto Rendimiento',
+        descripcion: 'Bonificación por superar metas de producción',
+        tipo: 'porcentaje',
+        porcentaje: 10.00,
+        base_calculo: 'salario_base',
+        condiciones_aplicacion: 'Rendimiento 20% superior al estándar',
+        created_at: new Date(),
+        created_by: 1
+      }
+    ]
+  });
+
+  // Crear cuadrillas
+  console.log('👥 Creando cuadrillas...');
+  const cuadrillas = await prisma.mom_cuadrilla.createMany({
+    data: [
+      {
+        codigo_identificador: 'CUAD-001',
+        nombre: 'Cuadrilla Alpha',
+        descripcion: 'Cuadrilla principal de siembra',
+        area_trabajo: 'Parcela Norte',
+        fecha_creacion_at: new Date(),
+        created_at: new Date(),
+        created_by: 1
+      },
+      {
+        codigo_identificador: 'CUAD-002',
+        nombre: 'Cuadrilla Beta',
+        descripcion: 'Cuadrilla de cosecha',
+        area_trabajo: 'Parcela Sur',
+        fecha_creacion_at: new Date(),
+        created_at: new Date(),
+        created_by: 1
+      }
+    ]
+  });
 
   console.log('✅ Seeds completados exitosamente!');
-  console.log('📧 Usuario admin: admin@gestionagricola.com');
-  console.log('🔑 Contraseña: admin123');
-  console.log('📧 Usuario supervisor: supervisor@gestionagricola.com');
-  console.log('🔑 Contraseña: supervisor123');
+  console.log('📊 Resumen:');
+  console.log(`   - ${(await prisma.mom_trabajador.count())} trabajadores creados`);
+  console.log(`   - ${(await prisma.mom_cultivo.count())} cultivos creados`);
+  console.log(`   - ${(await prisma.mom_parcela.count())} parcelas creadas`);
+  console.log(`   - ${(await prisma.mom_tarea.count())} tareas creadas`);
+  console.log(`   - ${(await prisma.mot_usuario.count())} usuarios creados`);
 }
 
 main()
@@ -253,4 +417,4 @@ main()
   })
   .finally(async () => {
     await prisma.$disconnect();
-  });
+  });
\ No newline at end of file
diff --git a/backend/scripts/crear-matriz-roles-completa.sql b/backend/scripts/crear-matriz-roles-completa.sql
index 6b312b6..a8c1aa2 100644
--- a/backend/scripts/crear-matriz-roles-completa.sql
+++ b/backend/scripts/crear-matriz-roles-completa.sql
@@ -3,7 +3,7 @@
 -- Basado en MATRIZ_ROLES_PERMISOS.md
 -- ================================================================
 
-USE agromano;
+USE agromano; 
 
 -- ================================================================
 -- 1. LIMPIAR CONFIGURACIÓN ANTERIOR (OPCIONAL)
diff --git a/backend/scripts/sebas.sql b/backend/scripts/sebas.sql
new file mode 100644
index 0000000..ad8d474
--- /dev/null
+++ b/backend/scripts/sebas.sql
@@ -0,0 +1,199 @@
+-- ================================================================
+-- CONFIGURACIÓN COMPLETA PARA SISTEMA AGROMANO CON AUTH0
+-- ================================================================
+
+USE agromano;
+
+-- 1. CREAR ROLES
+INSERT IGNORE INTO mom_rol (codigo, nombre, descripcion, fecha_creacion_at, is_critico, is_activo, created_at, created_by) VALUES
+('ADMIN_AGROMANO', 'Administrador del Sistema', 'Administrador con acceso completo', NOW(), true, true, NOW(), 1),
+('SUPERVISOR_CAMPO', 'Supervisor de Campo', 'Supervisor de operaciones de campo', NOW(), false, true, NOW(), 1),
+('GERENTE_RRHH', 'Gerente de RRHH', 'Gerente con permisos de RRHH y nómina', NOW(), false, true, NOW(), 1),
+('SUPERVISOR_RRHH', 'Supervisor de RRHH', 'Supervisor con permisos limitados', NOW(), false, true, NOW(), 1);
+
+-- 2. CREAR PERMISOS GRANULARES
+INSERT IGNORE INTO mom_permiso (codigo, nombre, categoria, descripcion, is_activo, created_at, created_by) VALUES
+-- Personal
+('trabajadores:read:all', 'Ver todos trabajadores', 'Personal', 'Ver información de todos los trabajadores', 1, NOW(), 1),
+('trabajadores:create', 'Crear trabajadores', 'Personal', 'Registrar nuevos trabajadores', 1, NOW(), 1),
+('trabajadores:update:all', 'Actualizar trabajadores', 'Personal', 'Editar cualquier trabajador', 1, NOW(), 1),
+('trabajadores:delete', 'Eliminar trabajadores', 'Personal', 'Eliminar trabajadores', 1, NOW(), 1),
+('trabajadores:export', 'Exportar trabajadores', 'Personal', 'Exportar datos de trabajadores', 1, NOW(), 1),
+-- Asistencia
+('asistencia:read:all', 'Ver toda asistencia', 'Asistencia', 'Ver registros de todos', 1, NOW(), 1),
+('asistencia:update', 'Actualizar asistencia', 'Asistencia', 'Modificar registros', 1, NOW(), 1),
+('asistencia:approve', 'Aprobar asistencia', 'Asistencia', 'Aprobar registros', 1, NOW(), 1),
+('asistencia:reports', 'Reportes asistencia', 'Asistencia', 'Generar reportes', 1, NOW(), 1),
+-- Nómina
+('nomina:process', 'Procesar nómina', 'Nomina', 'Procesar nóminas', 1, NOW(), 1),
+('nomina:read:all', 'Ver nóminas', 'Nomina', 'Ver nóminas de todos', 1, NOW(), 1),
+('nomina:approve', 'Aprobar nóminas', 'Nomina', 'Aprobar nóminas', 1, NOW(), 1),
+('nomina:reports', 'Reportes nómina', 'Nomina', 'Generar reportes', 1, NOW(), 1),
+-- Productividad
+('productividad:read:all', 'Ver productividad', 'Productividad', 'Ver productividad de todos', 1, NOW(), 1),
+('productividad:reports', 'Reportes productividad', 'Productividad', 'Generar reportes', 1, NOW(), 1),
+-- Tareas
+('tareas:create', 'Crear tareas', 'Tareas', 'Crear nuevas tareas', 1, NOW(), 1),
+('tareas:assign', 'Asignar tareas', 'Tareas', 'Asignar tareas', 1, NOW(), 1),
+-- Reportes
+('reportes:read:advanced', 'Reportes avanzados', 'Reportes', 'Ver reportes avanzados', 1, NOW(), 1),
+('dashboard:view:advanced', 'Dashboard avanzado', 'Dashboard', 'Ver dashboard avanzado', 1, NOW(), 1);
+
+-- 3. OBTENER IDs DE ROLES
+SET @admin_id = (SELECT rol_id FROM mom_rol WHERE codigo = 'ADMIN_AGROMANO');
+SET @supervisor_campo_id = (SELECT rol_id FROM mom_rol WHERE codigo = 'SUPERVISOR_CAMPO');
+SET @gerente_rrhh_id = (SELECT rol_id FROM mom_rol WHERE codigo = 'GERENTE_RRHH');
+SET @supervisor_rrhh_id = (SELECT rol_id FROM mom_rol WHERE codigo = 'SUPERVISOR_RRHH');
+
+-- 4. ASIGNAR PERMISOS A ROLES
+-- ADMIN: Todos los permisos
+INSERT IGNORE INTO rel_mom_rol__mom_permiso (rol_id, permiso_id, created_at, created_by)
+SELECT @admin_id, permiso_id, NOW(), 1 FROM mom_permiso WHERE is_activo = 1;
+
+-- SUPERVISOR CAMPO: Permisos específicos
+INSERT IGNORE INTO rel_mom_rol__mom_permiso (rol_id, permiso_id, created_at, created_by)
+SELECT @supervisor_campo_id, permiso_id, NOW(), 1 FROM mom_permiso 
+WHERE codigo IN ('trabajadores:read:all', 'asistencia:read:all', 'asistencia:approve', 'productividad:read:all', 'tareas:create', 'tareas:assign', 'reportes:read:advanced');
+
+-- GERENTE RRHH: Permisos de RRHH
+INSERT IGNORE INTO rel_mom_rol__mom_permiso (rol_id, permiso_id, created_at, created_by)
+SELECT @gerente_rrhh_id, permiso_id, NOW(), 1 FROM mom_permiso 
+WHERE codigo IN ('trabajadores:create', 'trabajadores:read:all', 'trabajadores:update:all', 'trabajadores:delete', 
+                 'asistencia:read:all', 'nomina:process', 'nomina:read:all', 'nomina:approve', 'nomina:reports', 'reportes:read:advanced');
+
+-- SUPERVISOR RRHH: Permisos limitados
+INSERT IGNORE INTO rel_mom_rol__mom_permiso (rol_id, permiso_id, created_at, created_by)
+SELECT @supervisor_rrhh_id, permiso_id, NOW(), 1 FROM mom_permiso 
+WHERE codigo IN ('trabajadores:read:all', 'asistencia:read:all');
+
+-- 5. CREAR USUARIOS ADMINISTRATIVOS CON AUTH0
+-- Crear usuario admin con Auth0
+-- INSERT IGNORE INTO moh_trabajador_historial (
+--     cambio_tipo, datos_nuevos, usuario_accion, 
+--     fecha_accion_at, created_at
+-- ) VALUES (
+--     'CREACION_USUARIO_AUTH0', 
+--     '{"auth0_user_id": "auth0|68c6f8947a6e3d8d71f0360f", "email": "admin@agromano.com"}',
+--     1, NOW(), NOW()
+-- );
+
+INSERT IGNORE INTO mot_usuario (
+    trabajador_id, auth0_user_id, username, password_hash, rol_id, estado,
+    created_at, created_by
+) VALUES (
+    NULL, 
+    'auth0|68c6f8947a6e3d8d71f0360f',
+    'admin@agromano.com',
+    'auth0_managed', 
+    @admin_id,
+    'activo',
+    NOW(),
+    1
+);
+
+-- -- Crear usuario supervisor campo con Auth0
+-- INSERT IGNORE INTO moh_trabajador_historial (
+--     cambio_tipo, datos_nuevos, usuario_accion, 
+--     fecha_accion_at, created_at
+-- ) VALUES (
+--     'CREACION_USUARIO_AUTH0', 
+--     '{"auth0_user_id": "auth0|68cb20febf717e002030f72b", "email": "supervisor.campo@agromano.com"}',
+--     1, NOW(), NOW()
+-- );
+
+INSERT IGNORE INTO mot_usuario (
+    trabajador_id, auth0_user_id, username, password_hash, rol_id, estado,
+    created_at, created_by
+) VALUES (
+    NULL,
+    'auth0|68cb20febf717e002030f72b',
+    'supervisor.campo@agromano.com',
+    'auth0_managed', 
+    @supervisor_campo_id,
+    'activo',
+    NOW(),
+    1
+);
+
+-- Crear usuario gerente RRHH con Auth0
+-- INSERT IGNORE INTO moh_trabajador_historial (
+--     cambio_tipo, datos_nuevos, usuario_accion, 
+--     fecha_accion_at, created_at
+-- ) VALUES (
+--     'CREACION_USUARIO_AUTH0', 
+--     '{"auth0_user_id": "auth0|68c6f9487a6e3d8d71f0364e", "email": "gerente.rrhh@agromano.com"}',
+--     1, NOW(), NOW()
+-- );
+
+INSERT IGNORE INTO mot_usuario (
+    trabajador_id, auth0_user_id, username, password_hash, rol_id, estado,
+    created_at, created_by
+) VALUES (
+    NULL,
+    'auth0|68c6f9487a6e3d8d71f0364e',
+    'gerente.rrhh@agromano.com',
+    'auth0_managed', 
+    @gerente_rrhh_id,
+    'activo',
+    NOW(),
+    1
+);
+
+-- Crear usuario supervisor RRHH con Auth0
+-- INSERT IGNORE INTO moh_trabajador_historial (
+--     cambio_tipo, datos_nuevos, usuario_accion, 
+--     fecha_accion_at, created_at
+-- ) VALUES (
+--     'CREACION_USUARIO_AUTH0', 
+--     '{"auth0_user_id": "auth0|68c6f91e7a6e3d8d71f03641", "email": "supervisor.rrhh@agromano.com"}',
+--     1, NOW(), NOW()
+-- );
+
+INSERT IGNORE INTO mot_usuario (
+    trabajador_id, auth0_user_id, username, password_hash, rol_id, estado,
+    created_at, created_by
+) VALUES (
+    NULL,
+    'auth0|68c6f91e7a6e3d8d71f03641',
+    'supervisor.rrhh@agromano.com',
+    'auth0_managed', 
+    @supervisor_rrhh_id,
+    'activo',
+    NOW(),
+    1
+);
+
+-- 6. DATOS INICIALES PARA PIÑA
+INSERT IGNORE INTO mom_cultivo (nombre, descripcion, unidad_medida_principal, temporada_tipica, is_activo, created_at, created_by) VALUES
+('Piña', 'Cultivo principal de piña', 'unidades', 'Todo el año', true, NOW(), 1);
+
+SET @cultivo_pina_id = (SELECT cultivo_id FROM mom_cultivo WHERE nombre = 'Piña');
+
+INSERT IGNORE INTO mom_tarea (cultivo_id, nombre, descripcion, unidad_medicion, rendimiento_estandar, is_activo, created_at, created_by) VALUES
+(@cultivo_pina_id, 'Siembra de Corona', 'Plantación de coronas', 'unidades/hora', 25.0, true, NOW(), 1),
+(@cultivo_pina_id, 'Cosecha de Piña', 'Recolección de piñas maduras', 'unidades/hora', 15.0, true, NOW(), 1),
+(@cultivo_pina_id, 'Clasificación y Empaque', 'Clasificar y empacar', 'unidades/hora', 20.0, true, NOW(), 1);
+
+-- 7. VERIFICACIÓN
+SELECT 'USUARIOS CREADOS CON AUTH0:' as info;
+SELECT 
+    u.usuario_id,
+    u.auth0_user_id,
+    u.username,
+    r.nombre as rol,
+    u.estado
+FROM mot_usuario u
+JOIN mom_rol r ON u.rol_id = r.rol_id
+WHERE u.auth0_user_id IS NOT NULL;
+
+SELECT 'PERMISOS POR ROL:' as info;
+SELECT 
+    r.rol_id,
+    r.nombre as rol_nombre,
+    COUNT(rp.permiso_id) as total_permisos,
+    GROUP_CONCAT(p.codigo SEPARATOR ', ') as permisos
+FROM mom_rol r
+LEFT JOIN rel_mom_rol__mom_permiso rp ON r.rol_id = rp.rol_id
+LEFT JOIN mom_permiso p ON rp.permiso_id = p.permiso_id
+WHERE r.codigo IN ('ADMIN_AGROMANO', 'SUPERVISOR_CAMPO', 'GERENTE_RRHH', 'SUPERVISOR_RRHH')
+GROUP BY r.rol_id, r.nombre;
\ No newline at end of file
diff --git a/backend/src/app.ts b/backend/src/app.ts
index 5839f9c..c673aff 100644
--- a/backend/src/app.ts
+++ b/backend/src/app.ts
@@ -35,7 +35,7 @@ async function verificarConexionBD() {
     const usuarioAuth0 = await prisma.mot_usuario.findFirst({
       where: {
         username: {
-          contains: 'auth0'
+          contains: 'admin@agromano.com'
         }
       }
     });
@@ -73,7 +73,7 @@ const PORT = process.env.PORT || 3000;
 // Middlewares globales
 app.use(helmet());
 app.use(cors({
-  origin: process.env.FRONTEND_URL || 'http://localhost:3000',
+  origin: process.env.FRONTEND_URL || 'http://localhost:3001',
   credentials: true
 }));
 app.use(express.json({ limit: '10mb' }));
diff --git a/backend/src/config/auth0-simple.config.js b/backend/src/config/auth0-simple.config.js
new file mode 100644
index 0000000..6d4f731
--- /dev/null
+++ b/backend/src/config/auth0-simple.config.js
@@ -0,0 +1,51 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.setUser = exports.checkJwt = void 0;
+const express_jwt_1 = require("express-jwt");
+const jwks_rsa_1 = __importDefault(require("jwks-rsa"));
+// Verificar variables de entorno antes de configurar Auth0
+const auth0Domain = process.env.AUTH0_DOMAIN;
+const auth0Audience = process.env.AUTH0_AUDIENCE;
+console.log('🔍 DEBUG AUTH0 CONFIG:');
+console.log('AUTH0_DOMAIN:', auth0Domain || 'UNDEFINED');
+console.log('AUTH0_AUDIENCE:', auth0Audience || 'UNDEFINED');
+console.log('JWKS URI:', `https://${auth0Domain}/.well-known/jwks.json`);
+if (!auth0Domain || !auth0Audience) {
+    throw new Error(`Variables de entorno Auth0 faltantes: DOMAIN=${auth0Domain}, AUDIENCE=${auth0Audience}`);
+}
+// Configuración del middleware JWT para Auth0
+exports.checkJwt = (0, express_jwt_1.expressjwt)({
+    secret: jwks_rsa_1.default.expressJwtSecret({
+        cache: true,
+        rateLimit: true,
+        jwksRequestsPerMinute: 5,
+        jwksUri: `https://${auth0Domain}/.well-known/jwks.json`
+    }),
+    audience: auth0Audience,
+    issuer: `https://${auth0Domain}/`,
+    algorithms: ['RS256']
+});
+// Middleware para asignar datos del token JWT a req.user
+const setUser = (req, res, next) => {
+    // Intentar obtener permisos desde diferentes fuentes
+    let permissions = [];
+    if (req.auth?.permissions) {
+        permissions = req.auth.permissions;
+    }
+    else if (req.auth0User?.permissions) {
+        permissions = req.auth0User.permissions;
+    }
+    else if (req.userPermissions) {
+        permissions = req.userPermissions;
+    }
+    // Asignar al objeto user
+    req.user = {
+        permissions: permissions
+    };
+    next();
+};
+exports.setUser = setUser;
+exports.default = { checkJwt: exports.checkJwt };
diff --git a/backend/src/config/auth0.config.js b/backend/src/config/auth0.config.js
new file mode 100644
index 0000000..c524a66
--- /dev/null
+++ b/backend/src/config/auth0.config.js
@@ -0,0 +1,41 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.validateAuth0Config = exports.checkJwt = exports.auth0Config = void 0;
+const express_jwt_1 = require("express-jwt");
+const jwks_rsa_1 = __importDefault(require("jwks-rsa"));
+const dotenv_1 = __importDefault(require("dotenv"));
+dotenv_1.default.config();
+// Configuración de Auth0
+exports.auth0Config = {
+    domain: process.env.AUTH0_DOMAIN,
+    audience: process.env.AUTH0_AUDIENCE,
+    clientId: process.env.AUTH0_CLIENT_ID,
+    clientSecret: process.env.AUTH0_CLIENT_SECRET,
+    scope: process.env.AUTH0_SCOPE || 'openid profile email'
+};
+// Middleware para verificar JWT de Auth0
+exports.checkJwt = (0, express_jwt_1.expressjwt)({
+    secret: jwks_rsa_1.default.expressJwtSecret({
+        cache: true,
+        rateLimit: true,
+        jwksRequestsPerMinute: 5,
+        jwksUri: `https://${exports.auth0Config.domain}/.well-known/jwks.json`
+    }),
+    audience: exports.auth0Config.audience,
+    issuer: `https://${exports.auth0Config.domain}/`,
+    algorithms: ['RS256']
+});
+// Validar configuración requerida
+const validateAuth0Config = () => {
+    const requiredVars = ['AUTH0_DOMAIN', 'AUTH0_AUDIENCE', 'AUTH0_CLIENT_ID', 'AUTH0_CLIENT_SECRET'];
+    for (const varName of requiredVars) {
+        if (!process.env[varName]) {
+            throw new Error(`Missing required environment variable: ${varName}`);
+        }
+    }
+    console.log('✅ Auth0 configuration validated successfully');
+};
+exports.validateAuth0Config = validateAuth0Config;
diff --git a/backend/src/middleware/auth-sync.middleware.ts b/backend/src/middleware/auth-sync.middleware.ts
index dd2dd7d..0d9509a 100644
--- a/backend/src/middleware/auth-sync.middleware.ts
+++ b/backend/src/middleware/auth-sync.middleware.ts
@@ -26,17 +26,17 @@ export const syncAuth0User = async (req: Request, res: Response, next: NextFunct
         }
 
         // Verificar si el usuario ya existe en la BD
-        let usuario = await prisma.mom_usuario.findFirst({
+        let usuario = await prisma.mot_usuario.findFirst({
             where: {
                 OR: [
                     { auth0_user_id: auth0Id },
-                    { email: email }
+                    { username: email }
                 ]
             },
             include: {
                 mom_rol: {
                     include: {
-                        mom_rol_permisos: {
+                        rel_mom_rol__mom_permiso: {
                             include: {
                                 mom_permiso: true
                             }
@@ -64,12 +64,14 @@ export const syncAuth0User = async (req: Request, res: Response, next: NextFunct
             }
 
             // Crear el usuario en la BD
-            usuario = await prisma.mom_usuario.create({
+            usuario = await prisma.mot_usuario.create({
                 data: {
                     auth0_user_id: auth0Id,
-                    email: email,
+                    // email: email,
                     username: email.split('@')[0], // Usar parte del email como username
-                    activo: true,
+                    password_hash: '',             // Valor temporal o manejar según tu lógica
+                    created_by: 0,                 // ID del usuario que crea (0 para sistema)
+                    estado: "activo",
                     rol_id: rolId,
                     created_at: new Date(),
                     updated_at: new Date()
@@ -77,7 +79,7 @@ export const syncAuth0User = async (req: Request, res: Response, next: NextFunct
                 include: {
                     mom_rol: {
                         include: {
-                            mom_rol_permisos: {
+                            rel_mom_rol__mom_permiso: {
                                 include: {
                                     mom_permiso: true
                                 }
@@ -90,7 +92,7 @@ export const syncAuth0User = async (req: Request, res: Response, next: NextFunct
             console.log(`✅ Usuario sincronizado: ${email} con rol ID: ${rolId}`);
         } else if (!usuario.auth0_user_id) {
             // Si existe pero no tiene auth0_user_id, actualizarlo
-            usuario = await prisma.mom_usuario.update({
+            usuario = await prisma.mot_usuario.update({
                 where: { usuario_id: usuario.usuario_id },
                 data: {
                     auth0_user_id: auth0Id,
@@ -99,7 +101,7 @@ export const syncAuth0User = async (req: Request, res: Response, next: NextFunct
                 include: {
                     mom_rol: {
                         include: {
-                            mom_rol_permisos: {
+                            rel_mom_rol__mom_permiso: {
                                 include: {
                                     mom_permiso: true
                                 }
@@ -112,7 +114,7 @@ export const syncAuth0User = async (req: Request, res: Response, next: NextFunct
 
         // Agregar información del usuario de BD al request
         (req as any).dbUser = usuario;
-        (req as any).userPermissions = usuario.mom_rol.mom_rol_permisos.map(
+        (req as any).userPermissions = usuario.mom_rol.rel_mom_rol__mom_permiso.map(
             rp => rp.mom_permiso.codigo
         );
 
@@ -164,4 +166,4 @@ async function determineRoleFromPermissions(permissions: string[]): Promise<numb
     }
 }
 
-export default syncAuth0User;
+export default syncAuth0User;
\ No newline at end of file
diff --git a/backend/src/middleware/auth0.middleware.ts b/backend/src/middleware/auth0.middleware.ts
index 2119b1c..e9d9aaa 100644
--- a/backend/src/middleware/auth0.middleware.ts
+++ b/backend/src/middleware/auth0.middleware.ts
@@ -1,31 +1,39 @@
 import { Request, Response, NextFunction } from 'express';
 import { PrismaClient } from '@prisma/client';
 import { checkJwt } from '../config/auth0.config';
+import { Auth0User, LocalUser } from '../types/express'; // Importar desde el archivo único
 
 const prisma = new PrismaClient();
 
-// Extender el tipo Request para Auth0
-declare global {
-  namespace Express {
-    interface Request {
-      auth0User?: {
-        sub: string; // Auth0 user ID
-        email?: string;
-        nickname?: string;
-        permissions?: string[];
-      };
-      userPermissions?: string[];
-      userRoles?: string[];
-      localUser?: {
-        usuario_id: number;
-        username: string;
-        rol_id: number;
-        trabajador_id?: number;
-        permisos: string[];
-      };
-    }
-  }
-}
+// // Interfaz para el usuario de Auth0
+// interface Auth0User {
+//   sub: string;
+//   email?: string;
+//   nickname?: string;
+//   permissions?: string[];
+// }
+
+// // Interfaz para el usuario local de la base de datos
+// interface LocalUser {
+//   usuario_id: number;
+//   username: string;
+//   rol_id: number;
+//   trabajador_id?: number;
+//   permisos: string[];
+// }
+
+// Extender el tipo Request de Express
+// declare global {
+//   namespace Express {
+//     interface Request {
+//       auth0User?: Auth0User;
+//       userPermissions?: string[];
+//       userRoles?: string[];
+//       localUser?: LocalUser;
+//     }
+//   }
+// }
+
 
 /**
  * Middleware combinado: Auth0 JWT + Permisos de base de datos local
@@ -44,8 +52,9 @@ export const authenticateAuth0 = async (req: Request, res: Response, next: NextF
 
       try {
         // 2. Obtener información del usuario de Auth0
-        const auth0UserId = req.user?.sub;
-        const userEmail = req.user?.email;
+        const auth0User = req.user as unknown as Auth0User;
+        const auth0UserId = auth0User?.sub;
+        const userEmail = auth0User?.email;
 
         if (!auth0UserId) {
           return res.status(401).json({
@@ -88,13 +97,14 @@ export const authenticateAuth0 = async (req: Request, res: Response, next: NextF
         // 4. Extraer permisos del usuario
         const permisos = usuario.mom_rol.rel_mom_rol__mom_permiso
           .map(rel => rel.mom_permiso.codigo)
-          .filter(Boolean);
+          .filter((codigo): codigo is string => codigo !== null);
+
 
         // 5. Agregar información al request
         req.auth0User = {
           sub: auth0UserId,
           email: userEmail,
-          permissions: req.user?.permissions || []
+          permissions: auth0User?.permissions || []
         };
 
         req.localUser = {
diff --git a/backend/src/middleware/hybrid-auth-sync.middleware.ts b/backend/src/middleware/hybrid-auth-sync.middleware.ts
deleted file mode 100644
index 6ed2877..0000000
--- a/backend/src/middleware/hybrid-auth-sync.middleware.ts
+++ /dev/null
@@ -1,178 +0,0 @@
-import { Request, Response, NextFunction } from 'express';
-import { PrismaClient } from '@prisma/client';
-
-const prisma = new PrismaClient();
-
-/**
- * Middleware híbrido: usa Auth0 como fuente principal y la BD como respaldo.
- * Sincroniza usuarios y roles entre Auth0 y la base de datos.
- * Si la API/Auth0 falla, consulta la BD local.
- */
-export const hybridAuthSyncMiddleware = async (req: Request, res: Response, next: NextFunction) => {
-    try {
-        // 1. Intentar autenticación por Auth0/API
-        const auth0User = (req as any).auth || (req as any).user;
-        let usuario = null;
-        let email = null;
-        let auth0Id = null;
-        let permissions: string[] = [];
-
-        if (auth0User) {
-            auth0Id = auth0User.sub;
-            email = auth0User.email || auth0User.sub;
-            permissions = auth0User.permissions || [];
-        }
-
-        // 2. Buscar usuario en BD por Auth0 ID o email
-        if (auth0Id || email) {
-            usuario = await prisma.mom_usuario.findFirst({
-                where: {
-                    OR: [
-                        auth0Id ? { auth0_user_id: auth0Id } : {},
-                        email ? { email: email } : {}
-                    ]
-                },
-                include: {
-                    mom_rol: {
-                        include: {
-                            mom_rol_permisos: {
-                                include: {
-                                    mom_permiso: true
-                                }
-                            }
-                        }
-                    }
-                }
-            });
-        }
-
-        // 3. Si usuario no existe y hay datos de Auth0, crearlo en BD
-        if (!usuario && auth0User && email) {
-            let rolId = await determineRoleFromPermissions(permissions);
-            if (!rolId) {
-                return res.status(403).json({
-                    success: false,
-                    message: 'No se puede determinar el rol para este usuario',
-                    permissions
-                });
-            }
-            usuario = await prisma.mom_usuario.create({
-                data: {
-                    auth0_user_id: auth0Id,
-                    email: email,
-                    username: email.split('@')[0],
-                    activo: true,
-                    rol_id: rolId,
-                    created_at: new Date(),
-                    updated_at: new Date()
-                },
-                include: {
-                    mom_rol: {
-                        include: {
-                            mom_rol_permisos: {
-                                include: {
-                                    mom_permiso: true
-                                }
-                            }
-                        }
-                    }
-                }
-            });
-        } else if (usuario && auth0Id && !usuario.auth0_user_id) {
-            // Si existe pero no tiene auth0_user_id, actualizarlo
-            usuario = await prisma.mom_usuario.update({
-                where: { usuario_id: usuario.usuario_id },
-                data: {
-                    auth0_user_id: auth0Id,
-                    updated_at: new Date()
-                },
-                include: {
-                    mom_rol: {
-                        include: {
-                            mom_rol_permisos: {
-                                include: {
-                                    mom_permiso: true
-                                }
-                            }
-                        }
-                    }
-                }
-            });
-        }
-
-        // 4. Fallback: Si no hay token Auth0, buscar usuario en BD por email/username
-        if (!auth0User && req.body && (req.body.email || req.body.username)) {
-            usuario = await prisma.mom_usuario.findFirst({
-                where: {
-                    OR: [
-                        req.body.email ? { email: req.body.email } : {},
-                        req.body.username ? { username: req.body.username } : {}
-                    ]
-                },
-                include: {
-                    mom_rol: {
-                        include: {
-                            mom_rol_permisos: {
-                                include: {
-                                    mom_permiso: true
-                                }
-                            }
-                        }
-                    }
-                }
-            });
-        }
-
-        // 5. Si usuario existe y está activo, agregar info al request
-        if (usuario && usuario.activo) {
-            (req as any).dbUser = usuario;
-            (req as any).userPermissions = usuario.mom_rol.mom_rol_permisos.map(
-                rp => rp.mom_permiso.codigo
-            );
-            return next();
-        }
-
-        // 6. Si no se pudo autenticar, rechazar
-        return res.status(401).json({
-            success: false,
-            message: 'No se pudo autenticar el usuario por Auth0 ni por BD',
-        });
-    } catch (error) {
-        console.error('❌ Error en middleware híbrido:', error);
-        return res.status(500).json({
-            success: false,
-            message: 'Error interno del servidor en autenticación híbrida',
-            error: error instanceof Error ? error.message : 'Error desconocido'
-        });
-    }
-};
-
-/**
- * Determina el rol basado en los permisos de Auth0
- */
-async function determineRoleFromPermissions(permissions: string[]): Promise<number | null> {
-    try {
-        const roleMapping = {
-            'admin:access': 1,
-            'trabajadores:delete': 3,
-            'nomina:process': 3,
-            'tareas:assign': 2,
-            'productividad:register:others': 2,
-            'trabajadores:export': 4
-        };
-        for (const [permission, rolId] of Object.entries(roleMapping)) {
-            if (permissions.includes(permission)) {
-                return rolId;
-            }
-        }
-        if (permissions.length > 20) {
-            return 1;
-        }
-        return null;
-    } catch (error) {
-        console.error('Error determinando rol:', error);
-        return null;
-    }
-}
-
-export default hybridAuthSyncMiddleware;
diff --git a/backend/src/middleware/rbac.middleware.ts b/backend/src/middleware/rbac.middleware.ts
index a337a5c..7254747 100644
--- a/backend/src/middleware/rbac.middleware.ts
+++ b/backend/src/middleware/rbac.middleware.ts
@@ -1,23 +1,24 @@
 import { Request, Response, NextFunction } from 'express';
 import { PrismaClient } from '@prisma/client';
 import jwt from 'jsonwebtoken';
+import { LocalUser } from '../types/express'; // Importar desde el archivo único
 
 const prisma = new PrismaClient();
 
 // Extender el tipo Request para incluir usuario autenticado
-declare global {
-  namespace Express {
-    interface Request {
-      user?: {
-        usuario_id: number;
-        username: string;
-        rol_id: number;
-        trabajador_id?: number;
-        permisos?: string[];
-      };
-    }
-  }
-}
+// declare global {
+//   namespace Express {
+//     interface Request {
+//       user?: {
+//         usuario_id: number;
+//         username: string;
+//         rol_id: number;
+//         trabajador_id?: number;
+//         permisos?: string[];
+//       };
+//     }
+//   }
+// }
 
 /**
  * Middleware para verificar JWT y cargar permisos del usuario
@@ -47,10 +48,13 @@ export const authenticateToken = async (req: Request, res: Response, next: NextF
         mom_rol: {
           include: {
             rel_mom_rol__mom_permiso: {
-              include: {
+              where: {  // where va aquí, no dentro de mom_permiso
                 mom_permiso: {
-                  where: { is_activo: true }
+                  is_activo: true
                 }
+              },
+              include: {
+                mom_permiso: true
               }
             }
           }
@@ -71,7 +75,7 @@ export const authenticateToken = async (req: Request, res: Response, next: NextF
     );
 
     // Agregar usuario a la request
-    req.user = {
+    req.localUser = {
       usuario_id: usuario.usuario_id,
       username: usuario.username,
       rol_id: usuario.rol_id,
@@ -96,9 +100,9 @@ export const authenticateToken = async (req: Request, res: Response, next: NextF
 export const requirePermissions = (requiredPermissions: string[]) => {
   return (req: Request, res: Response, next: NextFunction) => {
     try {
-      const { user } = req;
+      const { localUser } = req;
 
-      if (!user || !user.permisos) {
+      if (!localUser || !localUser.permisos) {
         return res.status(403).json({
           success: false,
           message: 'Usuario no autenticado'
@@ -107,7 +111,7 @@ export const requirePermissions = (requiredPermissions: string[]) => {
 
       // Verificar si el usuario tiene al menos uno de los permisos requeridos
       const hasPermission = requiredPermissions.some(permission => 
-        user.permisos!.includes(permission)
+        localUser.permisos!.includes(permission)
       );
 
       if (!hasPermission) {
@@ -115,7 +119,7 @@ export const requirePermissions = (requiredPermissions: string[]) => {
           success: false,
           message: 'No tienes permisos para realizar esta acción',
           permisosRequeridos: requiredPermissions,
-          permisosUsuario: user.permisos
+          permisosUsuario: localUser.permisos
         });
       }
 
@@ -137,9 +141,9 @@ export const requirePermissions = (requiredPermissions: string[]) => {
 export const requireAllPermissions = (requiredPermissions: string[]) => {
   return (req: Request, res: Response, next: NextFunction) => {
     try {
-      const { user } = req;
+      const { localUser } = req;
 
-      if (!user || !user.permisos) {
+      if (!localUser || !localUser.permisos) {
         return res.status(403).json({
           success: false,
           message: 'Usuario no autenticado'
@@ -148,7 +152,7 @@ export const requireAllPermissions = (requiredPermissions: string[]) => {
 
       // Verificar si el usuario tiene TODOS los permisos requeridos
       const hasAllPermissions = requiredPermissions.every(permission => 
-        user.permisos!.includes(permission)
+        localUser.permisos!.includes(permission)
       );
 
       if (!hasAllPermissions) {
@@ -156,7 +160,7 @@ export const requireAllPermissions = (requiredPermissions: string[]) => {
           success: false,
           message: 'No tienes todos los permisos necesarios para esta acción',
           permisosRequeridos: requiredPermissions,
-          permisosUsuario: user.permisos
+          permisosUsuario: localUser.permisos
         });
       }
 
@@ -178,9 +182,9 @@ export const requireAllPermissions = (requiredPermissions: string[]) => {
 export const requireRole = (allowedRoles: string[]) => {
   return async (req: Request, res: Response, next: NextFunction) => {
     try {
-      const { user } = req;
+      const { localUser } = req;
 
-      if (!user) {
+      if (!localUser) {
         return res.status(403).json({
           success: false,
           message: 'Usuario no autenticado'
@@ -189,7 +193,7 @@ export const requireRole = (allowedRoles: string[]) => {
 
       // Obtener el rol del usuario
       const rol = await prisma.mom_rol.findUnique({
-        where: { rol_id: user.rol_id }
+        where: { rol_id: localUser.rol_id }
       });
 
       if (!rol || !allowedRoles.includes(rol.codigo)) {
@@ -217,7 +221,7 @@ export const requireRole = (allowedRoles: string[]) => {
  * @param user - Usuario autenticado
  * @param permission - Permiso a verificar
  */
-export const userHasPermission = (user: Express.Request['user'], permission: string): boolean => {
+export const userHasPermission = (user: LocalUser, permission: string): boolean => {
   return user?.permisos?.includes(permission) || false;
 };
 
@@ -226,7 +230,7 @@ export const userHasPermission = (user: Express.Request['user'], permission: str
  * @param user - Usuario autenticado
  * @param category - Categoría de permisos
  */
-export const getUserPermissionsByCategory = async (user: Express.Request['user'], category?: string) => {
+export const getUserPermissionsByCategory = async (user: LocalUser, category?: string) => {
   if (!user) return [];
 
   const whereClause: any = {
diff --git a/backend/src/routes/agromano-asistencia.ts b/backend/src/routes/agromano-asistencia.ts
index e4ccb5c..89b78a9 100644
--- a/backend/src/routes/agromano-asistencia.ts
+++ b/backend/src/routes/agromano-asistencia.ts
@@ -12,30 +12,6 @@ const router = Router();
  * @desc Registrar entrada/salida de asistencia
  * @access Requiere permiso: asistencia:register
  */
-/**
- * @swagger
- * /api/asistencia/marcar:
- *   post:
- *     summary: Registrar entrada/salida de asistencia
- *     security:
- *       - bearerAuth: []
- *     tags:
- *       - Asistencia
- *     requestBody:
- *       required: true
- *       content:
- *         application/json:
- *           schema:
- *             type: object
- *             properties:
- *               type:
- *                 type: string
- *               location:
- *                 type: string
- *     responses:
- *       200:
- *         description: Asistencia registrada exitosamente
- */
 router.post('/marcar', 
     checkJwt,
     requirePermission('asistencia:register'),
@@ -59,19 +35,6 @@ router.post('/marcar',
  * @desc Obtener registros de asistencia
  * @access Requiere permisos: asistencia:read:all OR asistencia:read:own
  */
-/**
- * @swagger
- * /api/asistencia:
- *   get:
- *     summary: Obtener registros de asistencia
- *     security:
- *       - bearerAuth: []
- *     tags:
- *       - Asistencia
- *     responses:
- *       200:
- *         description: Registros de asistencia
- */
 router.get('/', 
     checkJwt,
     requireAnyPermission(['asistencia:read:all', 'asistencia:read:own']),
@@ -146,19 +109,6 @@ router.get('/reportes',
  * @desc Obtener dashboard de asistencia
  * @access Requiere permiso: asistencia:dashboard
  */
-/**
- * @swagger
- * /api/asistencia/dashboard:
- *   get:
- *     summary: Obtener dashboard de asistencia
- *     security:
- *       - bearerAuth: []
- *     tags:
- *       - Asistencia
- *     responses:
- *       200:
- *         description: Dashboard de asistencia
- */
 router.get('/dashboard', 
     checkJwt,
     requirePermission('asistencia:dashboard'),
diff --git a/backend/src/routes/agromano-dashboard.ts b/backend/src/routes/agromano-dashboard.ts
index 37f2dec..79610f9 100644
--- a/backend/src/routes/agromano-dashboard.ts
+++ b/backend/src/routes/agromano-dashboard.ts
@@ -13,19 +13,6 @@ const router = Router();
  * @desc Obtener datos generales del dashboard principal (versión simplificada)
  * @access Solo requiere estar autenticado con Auth0
  */
-/**
- * @swagger
- * /api/dashboard/general:
- *   get:
- *     summary: Obtener datos generales del dashboard principal
- *     security:
- *       - bearerAuth: []
- *     tags:
- *       - Dashboard
- *     responses:
- *       200:
- *         description: Datos generales del dashboard
- */
 router.get('/general', 
     checkJwt,
     hybridAuthMiddleware,
@@ -247,19 +234,6 @@ router.get('/general',
  * @desc Obtener estadísticas en tiempo real
  * @access Requiere permiso: dashboard:view:basic
  */
-/**
- * @swagger
- * /api/dashboard/stats/tiempo-real:
- *   get:
- *     summary: Obtener estadísticas en tiempo real del dashboard
- *     security:
- *       - bearerAuth: []
- *     tags:
- *       - Dashboard
- *     responses:
- *       200:
- *         description: Estadísticas en tiempo real
- */
 router.get('/stats/tiempo-real', 
     checkJwt,
     hybridAuthMiddleware,
@@ -299,19 +273,6 @@ router.get('/stats/tiempo-real',
  * @desc Obtener condiciones climáticas actuales
  * @access Requiere permiso: dashboard:view:basic
  */
-/**
- * @swagger
- * /api/dashboard/clima:
- *   get:
- *     summary: Obtener condiciones climáticas actuales
- *     security:
- *       - bearerAuth: []
- *     tags:
- *       - Dashboard
- *     responses:
- *       200:
- *         description: Condiciones climáticas obtenidas
- */
 router.get('/clima', 
     checkJwt,
     hybridAuthMiddleware,
diff --git a/backend/src/routes/agromano-trabajadores.ts b/backend/src/routes/agromano-trabajadores.ts
index 9e49dcc..f0d9a95 100644
--- a/backend/src/routes/agromano-trabajadores.ts
+++ b/backend/src/routes/agromano-trabajadores.ts
@@ -15,19 +15,6 @@ const router = Router();
  * @desc Obtener lista de trabajadores
  * @access Requiere permisos: trabajadores:read:all OR trabajadores:read:own
  */
-/**
- * @swagger
- * /api/trabajadores:
- *   get:
- *     summary: Obtener lista de trabajadores
- *     security:
- *       - bearerAuth: []
- *     tags:
- *       - Trabajadores
- *     responses:
- *       200:
- *         description: Lista de trabajadores
- */
 router.get('/', 
     checkJwt,
     hybridAuthMiddleware, // Verificar usuario en BD y cargar permisos
@@ -55,25 +42,6 @@ router.get('/',
  * @desc Crear nuevo trabajador
  * @access Requiere permiso: trabajadores:create
  */
-/**
- * @swagger
- * /api/trabajadores:
- *   post:
- *     summary: Crear un trabajador
- *     security:
- *       - bearerAuth: []
- *     tags:
- *       - Trabajadores
- *     requestBody:
- *       required: true
- *       content:
- *         application/json:
- *           schema:
- *             type: object
- *     responses:
- *       200:
- *         description: Trabajador creado exitosamente
- */
 router.post('/', 
     checkJwt,
     hybridAuthMiddleware, // Verificar usuario en BD y cargar permisos
diff --git a/backend/src/routes/trabajadores.ts b/backend/src/routes/trabajadores.ts
index ecb7afb..76b01dc 100644
--- a/backend/src/routes/trabajadores.ts
+++ b/backend/src/routes/trabajadores.ts
@@ -1,6 +1,6 @@
 import { Router } from 'express';
 import { PrismaClient } from '@prisma/client';
-import { requireAuth, requirePermission } from '../middleware/auth0-rbac';
+import { authenticateToken, requirePermissions } from '../middleware/rbac.middleware';
 
 const router = Router();
 const prisma = new PrismaClient();
@@ -11,12 +11,12 @@ const prisma = new PrismaClient();
  * @access Requiere permiso 'trabajadores:read'
  */
 router.get('/', 
-  requireAuth,
-  requirePermission('trabajadores:read'),
+  authenticateToken,
+  requirePermissions(['trabajadores:read']),
   async (req, res) => {
     try {
       const trabajadores = await prisma.mom_trabajador.findMany({
-        where: { is_activo: 1 },
+        where: { is_activo: true },
         select: {
           trabajador_id: true,
           documento_identidad: true,
@@ -49,8 +49,8 @@ router.get('/',
  * @access Requiere permiso 'trabajadores:create'
  */
 router.post('/',
-  requireAuth,
-  requirePermission('trabajadores:create'),
+  authenticateToken,
+  requirePermissions(['trabajadores:create']),
   async (req, res) => {
     try {
       const {
@@ -76,7 +76,7 @@ router.post('/',
           fecha_nacimiento: new Date(fecha_nacimiento),
           telefono,
           email,
-          is_activo: 1,
+          is_activo: true,
           fecha_registro_at: new Date(),
           created_at: new Date(),
           created_by: 1, // TODO: Obtener del token de Auth0
@@ -115,8 +115,8 @@ router.post('/',
  * @access Requiere permiso 'trabajadores:update'
  */
 router.put('/:id',
-  requireAuth,
-  requirePermission('trabajadores:update'),
+  authenticateToken,
+  requirePermissions(['trabajadores:update']),
   async (req, res) => {
     try {
       const { id } = req.params;
@@ -168,8 +168,8 @@ router.put('/:id',
  * @access Requiere permiso 'trabajadores:delete'
  */
 router.delete('/:id',
-  requireAuth,
-  requirePermission('trabajadores:delete'),
+  authenticateToken,
+  requirePermissions(['trabajadores:delete']),
   async (req, res) => {
     try {
       const { id } = req.params;
@@ -177,7 +177,7 @@ router.delete('/:id',
       const trabajadorEliminado = await prisma.mom_trabajador.update({
         where: { trabajador_id: parseInt(id) },
         data: {
-          is_activo: 0,
+          is_activo: false,
           deleted_at: new Date(),
           updated_by: 1 // TODO: Obtener del token de Auth0
         }
diff --git a/backend/src/types/auth.ts b/backend/src/types/auth.ts
deleted file mode 100644
index 91e1c4e..0000000
--- a/backend/src/types/auth.ts
+++ /dev/null
@@ -1,43 +0,0 @@
-import { Request } from 'express';
-
-// Extender el tipo Request de Express para incluir usuario de Auth0
-declare global {
-  namespace Express {
-    interface Request {
-      user?: {
-        sub: string; // ID del usuario en Auth0
-        email?: string;
-        name?: string;
-        permissions?: string[]; // Permisos de Auth0
-        roles?: string[]; // Roles de Auth0
-        
-        // Campos personalizados del sistema
-        usuario_id?: number;
-        username?: string;
-        rol_id?: number;
-        trabajador_id?: number;
-        permisos?: string[];
-      };
-    }
-  }
-}
-
-// Tipos específicos para Auth0
-export interface Auth0User {
-  sub: string;
-  email?: string;
-  name?: string;
-  picture?: string;
-  permissions?: string[];
-}
-
-// Tipos para RBAC del sistema
-export interface UsuarioSistema {
-  usuario_id: number;
-  username: string;
-  rol_id: number;
-  trabajador_id?: number;
-  permisos: string[];
-}
-
-export {};
diff --git a/backend/src/types/express.d.ts b/backend/src/types/express.d.ts
deleted file mode 100644
index 2c9562e..0000000
--- a/backend/src/types/express.d.ts
+++ /dev/null
@@ -1,25 +0,0 @@
-// Extensión de tipos para Express
-export {};
-
-declare global {
-  namespace Express {
-    interface User {
-      permissions?: string[];
-      sub?: string;
-      email?: string;
-    }
-
-    interface Request {
-      user?: User;
-      auth?: any;
-      auth0User?: {
-        sub: string;
-        email: string;
-        permissions: string[];
-      };
-      localUser?: any;
-      userPermissions?: string[];
-      userRoles?: string[];
-    }
-  }
-}
diff --git a/backend/test-agromano-rbac.js b/backend/test-agromano-rbac.js
deleted file mode 100644
index 500001a..0000000
--- a/backend/test-agromano-rbac.js
+++ /dev/null
@@ -1,141 +0,0 @@
-const axios = require('axios');
-require('dotenv').config();
-
-async function testAgroManoRBAC() {
-    console.log('🎭 PROBANDO RBAC AGROMANO CON AUTH0\n');
-
-    // Configuración
-    const config = {
-        domain: process.env.AUTH0_DOMAIN,
-        clientId: process.env.AUTH0_CLIENT_ID,
-        clientSecret: process.env.AUTH0_CLIENT_SECRET,
-        audience: process.env.AUTH0_AUDIENCE
-    };
-
-    console.log('📋 Configuración Auth0:');
-    console.log(`   Domain: ${config.domain}`);
-    console.log(`   Client ID: ${config.clientId}`);
-    console.log(`   Audience: ${config.audience}\n`);
-
-    try {
-        // 1. Obtener token de acceso
-        console.log('🔑 Obteniendo token de acceso...');
-        const tokenResponse = await axios.post(`https://${config.domain}/oauth/token`, {
-            client_id: config.clientId,
-            client_secret: config.clientSecret,
-            audience: config.audience,
-            grant_type: 'client_credentials'
-        });
-
-        const accessToken = tokenResponse.data.access_token;
-        console.log('✅ Token obtenido exitosamente!');
-        console.log(`   Scopes: ${tokenResponse.data.scope || 'Ninguno'}\n`);
-
-        // 2. Probar endpoints de trabajadores
-        console.log('👥 PROBANDO ENDPOINTS DE TRABAJADORES:');
-        
-        const endpoints = [
-            { method: 'GET', url: '/api/agromano/trabajadores', name: 'Listar trabajadores' },
-            { method: 'POST', url: '/api/agromano/trabajadores', name: 'Crear trabajador', data: { nombre: 'Juan Pérez', cargo: 'Operario' } },
-            { method: 'GET', url: '/api/agromano/trabajadores/export', name: 'Exportar trabajadores' },
-        ];
-
-        for (const endpoint of endpoints) {
-            try {
-                console.log(`   🧪 ${endpoint.method} ${endpoint.url} - ${endpoint.name}`);
-                
-                const response = await axios({
-                    method: endpoint.method.toLowerCase(),
-                    url: `http://localhost:3000${endpoint.url}`,
-                    headers: {
-                        'Authorization': `Bearer ${accessToken}`,
-                        'Content-Type': 'application/json'
-                    },
-                    data: endpoint.data
-                });
-
-                console.log(`   ✅ ${response.status} - ${response.data.message}`);
-                if (response.data.data?.permissions) {
-                    console.log(`      Permisos detectados: ${response.data.data.permissions.slice(0, 3).join(', ')}${response.data.data.permissions.length > 3 ? '...' : ''}`);
-                }
-            } catch (error) {
-                if (error.response) {
-                    console.log(`   ❌ ${error.response.status} - ${error.response.data.message || 'Error'}`);
-                    if (error.response.data.code === 'INSUFFICIENT_PERMISSIONS') {
-                        console.log(`      Permisos faltantes: ${error.response.data.missingPermissions?.join(', ') || 'No especificados'}`);
-                    }
-                } else {
-                    console.log(`   ❌ Error de conexión: ${error.message}`);
-                }
-            }
-        }
-
-        // 3. Probar endpoints de asistencia
-        console.log('\n⏰ PROBANDO ENDPOINTS DE ASISTENCIA:');
-        
-        const asistenciaEndpoints = [
-            { method: 'POST', url: '/api/agromano/asistencia/marcar', name: 'Marcar asistencia', data: { type: 'entrada', location: 'Campo A' } },
-            { method: 'GET', url: '/api/agromano/asistencia', name: 'Ver asistencias' },
-            { method: 'GET', url: '/api/agromano/asistencia/reportes', name: 'Reportes de asistencia' },
-            { method: 'GET', url: '/api/agromano/asistencia/dashboard', name: 'Dashboard de asistencia' },
-        ];
-
-        for (const endpoint of asistenciaEndpoints) {
-            try {
-                console.log(`   🧪 ${endpoint.method} ${endpoint.url} - ${endpoint.name}`);
-                
-                const response = await axios({
-                    method: endpoint.method.toLowerCase(),
-                    url: `http://localhost:3000${endpoint.url}`,
-                    headers: {
-                        'Authorization': `Bearer ${accessToken}`,
-                        'Content-Type': 'application/json'
-                    },
-                    data: endpoint.data
-                });
-
-                console.log(`   ✅ ${response.status} - ${response.data.message}`);
-            } catch (error) {
-                if (error.response) {
-                    console.log(`   ❌ ${error.response.status} - ${error.response.data.message || 'Error'}`);
-                    if (error.response.data.code === 'INSUFFICIENT_PERMISSIONS') {
-                        console.log(`      Permiso requerido: ${error.response.data.message.split(': ')[1]}`);
-                    }
-                } else {
-                    console.log(`   ❌ Error de conexión: ${error.message}`);
-                }
-            }
-        }
-
-        // 4. Resumen
-        console.log('\n📊 RESUMEN:');
-        console.log('   - Token Auth0: ✅ Obtenido exitosamente');
-        console.log('   - Endpoints configurados: ✅ Disponibles');
-        console.log('   - RBAC implementado: ✅ Funcionando');
-        console.log('\n💡 SIGUIENTE PASO:');
-        console.log('   1. Ir a Auth0 Dashboard');
-        console.log('   2. APIs → AgroMano API → Scopes');
-        console.log('   3. Agregar todos los permisos de AUTH0_PERMISOS_SETUP.md');
-        console.log('   4. Autorizar Machine to Machine app con esos scopes');
-        console.log('   5. Probar nuevamente');
-
-    } catch (error) {
-        console.log('\n❌ ERROR OBTENIENDO TOKEN:');
-        if (error.response) {
-            console.log(`   Status: ${error.response.status}`);
-            console.log(`   Error: ${JSON.stringify(error.response.data, null, 2)}`);
-        } else {
-            console.log(`   Error: ${error.message}`);
-        }
-        
-        console.log('\n💡 VERIFICAR:');
-        console.log('   1. Credenciales Auth0 correctas en .env');
-        console.log('   2. API "AgroMano API" creada en Auth0');
-        console.log('   3. Aplicación M2M autorizada para la API');
-        console.log('   4. Scopes asignados a la aplicación');
-    }
-}
-
-// Ejecutar prueba
-console.log('Iniciando en 3 segundos...');
-setTimeout(testAgroManoRBAC, 3000);
diff --git a/backend/test-auth0-token.js b/backend/test-auth0-token.js
deleted file mode 100644
index 4973fd0..0000000
--- a/backend/test-auth0-token.js
+++ /dev/null
@@ -1,129 +0,0 @@
-const axios = require('axios');
-require('dotenv').config();
-
-async function testAuth0Token() {
-    console.log('🔐 Probando obtención de token Auth0...\n');
-
-    // Configuración desde variables de entorno
-    const config = {
-        domain: process.env.AUTH0_DOMAIN,
-        clientId: process.env.AUTH0_CLIENT_ID,
-        clientSecret: process.env.AUTH0_CLIENT_SECRET,
-        audience: process.env.AUTH0_AUDIENCE
-    };
-
-    console.log('📋 Configuración:');
-    console.log(`   Domain: ${config.domain}`);
-    console.log(`   Client ID: ${config.clientId}`);
-    console.log(`   Audience: ${config.audience}`);
-    console.log(`   Client Secret: ${config.clientSecret ? '✅ Configurado' : '❌ No configurado'}\n`);
-
-    try {
-        console.log('🚀 Solicitando token de acceso...');
-        
-        const tokenResponse = await axios.post(`https://${config.domain}/oauth/token`, {
-            client_id: config.clientId,
-            client_secret: config.clientSecret,
-            audience: config.audience,
-            grant_type: 'client_credentials'
-        }, {
-            headers: {
-                'Content-Type': 'application/json'
-            }
-        });
-
-        console.log('✅ Token obtenido exitosamente!');
-        console.log(`   Token Type: ${tokenResponse.data.token_type}`);
-        console.log(`   Expires In: ${tokenResponse.data.expires_in} segundos`);
-        console.log(`   Scope: ${tokenResponse.data.scope || 'No scopes asignados'}`);
-        console.log(`   Access Token: ${tokenResponse.data.access_token.substring(0, 50)}...\n`);
-
-        // Probar endpoint protegido
-        const accessToken = tokenResponse.data.access_token;
-        
-        console.log('🧪 Probando endpoint protegido...');
-        
-        try {
-            const protectedResponse = await axios.get('http://localhost:3000/api/test/protected', {
-                headers: {
-                    'Authorization': `Bearer ${accessToken}`
-                }
-            });
-
-            console.log('✅ Endpoint protegido accesible!');
-            console.log('   Respuesta:', JSON.stringify(protectedResponse.data, null, 2));
-            
-        } catch (protectedError) {
-            console.log('❌ Error en endpoint protegido:');
-            if (protectedError.response) {
-                console.log(`   Status: ${protectedError.response.status}`);
-                console.log(`   Error: ${JSON.stringify(protectedError.response.data, null, 2)}`);
-            } else {
-                console.log(`   Error: ${protectedError.message}`);
-            }
-        }
-
-        // Probar endpoint con permisos específicos
-        console.log('\n🔐 Probando endpoint con permisos...');
-        
-        try {
-            const rbacResponse = await axios.get('http://localhost:3000/api/test/admin-only', {
-                headers: {
-                    'Authorization': `Bearer ${accessToken}`
-                }
-            });
-
-            console.log('✅ Endpoint con permisos accesible!');
-            console.log('   Respuesta:', JSON.stringify(rbacResponse.data, null, 2));
-            
-        } catch (rbacError) {
-            console.log('❌ Error en endpoint con permisos:');
-            if (rbacError.response) {
-                console.log(`   Status: ${rbacError.response.status}`);
-                console.log(`   Error: ${JSON.stringify(rbacError.response.data, null, 2)}`);
-            } else {
-                console.log(`   Error: ${rbacError.message}`);
-            }
-        }
-
-    } catch (error) {
-        console.log('❌ Error obteniendo token:');
-        if (error.response) {
-            console.log(`   Status: ${error.response.status}`);
-            console.log(`   Error: ${JSON.stringify(error.response.data, null, 2)}`);
-            
-            if (error.response.status === 401) {
-                console.log('\n💡 Posibles soluciones:');
-                console.log('   1. Verificar que Client ID y Client Secret sean correctos');
-                console.log('   2. Verificar que la aplicación esté autorizada para la API');
-                console.log('   3. Verificar que el audience sea correcto');
-            }
-            
-            if (error.response.status === 403) {
-                console.log('\n💡 Posibles soluciones:');
-                console.log('   1. Autorizar la aplicación Machine to Machine en Auth0 Dashboard');
-                console.log('   2. Asignar scopes/permisos a la aplicación');
-                console.log('   3. Verificar configuración de la API');
-            }
-        } else {
-            console.log(`   Error: ${error.message}`);
-        }
-    }
-}
-
-// Función para decodificar JWT (solo para debugging)
-function decodeJWT(token) {
-    try {
-        const parts = token.split('.');
-        const payload = JSON.parse(Buffer.from(parts[1], 'base64').toString());
-        console.log('\n🔍 Contenido del token:');
-        console.log(JSON.stringify(payload, null, 2));
-        return payload;
-    } catch (error) {
-        console.log('❌ Error decodificando token:', error.message);
-        return null;
-    }
-}
-
-// Ejecutar prueba
-testAuth0Token().catch(console.error);
diff --git a/backend/test-current-auth0.js b/backend/test-current-auth0.js
deleted file mode 100644
index b213524..0000000
--- a/backend/test-current-auth0.js
+++ /dev/null
@@ -1,121 +0,0 @@
-const axios = require('axios');
-require('dotenv').config();
-
-async function testWithCurrentScopes() {
-    console.log('🔐 Probando con permisos actuales de Auth0...\n');
-
-    const config = {
-        domain: process.env.AUTH0_DOMAIN,
-        clientId: process.env.AUTH0_CLIENT_ID,
-        clientSecret: process.env.AUTH0_CLIENT_SECRET,
-        audience: process.env.AUTH0_AUDIENCE
-    };
-
-    try {
-        // Primero probemos sin audience para ver si funciona
-        console.log('🚀 Intentando obtener token sin audience...');
-        const tokenResponse = await axios.post(`https://${config.domain}/oauth/token`, {
-            client_id: config.clientId,
-            client_secret: config.clientSecret,
-            grant_type: 'client_credentials'
-        });
-
-        console.log('✅ Token obtenido sin audience!');
-        console.log(`   Scopes: ${tokenResponse.data.scope || 'Ninguno'}`);
-        
-        const token = tokenResponse.data.access_token;
-        
-        // Decodificar el token para ver su contenido
-        const parts = token.split('.');
-        const payload = JSON.parse(Buffer.from(parts[1], 'base64').toString());
-        
-        console.log('\n🔍 Contenido del token:');
-        console.log(`   Issuer: ${payload.iss}`);
-        console.log(`   Audience: ${payload.aud}`);
-        console.log(`   Subject: ${payload.sub}`);
-        console.log(`   Scopes: ${payload.scope || 'Ninguno'}`);
-        console.log(`   Expires: ${new Date(payload.exp * 1000).toLocaleString()}`);
-        
-        return token;
-        
-    } catch (error1) {
-        console.log('❌ Error sin audience:', error1.response?.data || error1.message);
-        
-        // Si falla sin audience, probemos con audience
-        try {
-            console.log('\n🚀 Intentando obtener token con audience...');
-            const tokenResponse = await axios.post(`https://${config.domain}/oauth/token`, {
-                client_id: config.clientId,
-                client_secret: config.clientSecret,
-                audience: config.audience,
-                grant_type: 'client_credentials'
-            });
-
-            console.log('✅ Token obtenido con audience!');
-            console.log(`   Scopes: ${tokenResponse.data.scope || 'Ninguno'}`);
-            
-            const token = tokenResponse.data.access_token;
-            
-            // Decodificar el token
-            const parts = token.split('.');
-            const payload = JSON.parse(Buffer.from(parts[1], 'base64').toString());
-            
-            console.log('\n🔍 Contenido del token:');
-            console.log(`   Issuer: ${payload.iss}`);
-            console.log(`   Audience: ${payload.aud}`);
-            console.log(`   Subject: ${payload.sub}`);
-            console.log(`   Scopes: ${payload.scope || 'Ninguno'}`);
-            console.log(`   Permissions: ${payload.permissions ? payload.permissions.join(', ') : 'Ninguno'}`);
-            console.log(`   Expires: ${new Date(payload.exp * 1000).toLocaleString()}`);
-            
-            return token;
-            
-        } catch (error2) {
-            console.log('❌ Error con audience:', error2.response?.data || error2.message);
-            
-            console.log('\n💡 Posibles problemas:');
-            console.log('1. La aplicación no está autorizada para la API');
-            console.log('2. Las credenciales son incorrectas');
-            console.log('3. La API no existe o tiene configuración incorrecta');
-            
-            return null;
-        }
-    }
-}
-
-async function testEndpointsWithToken(token) {
-    if (!token) return;
-    
-    console.log('\n🧪 Probando endpoints con el token obtenido...');
-    
-    const endpoints = [
-        'http://localhost:3000/health',
-        'http://localhost:3000/api/test/public', 
-        'http://localhost:3000/api/test/protected',
-        'http://localhost:3000/api/auth/config'
-    ];
-    
-    for (const endpoint of endpoints) {
-        try {
-            const response = await axios.get(endpoint, {
-                headers: {
-                    'Authorization': `Bearer ${token}`
-                }
-            });
-            
-            console.log(`✅ ${endpoint} - Status: ${response.status}`);
-            
-        } catch (error) {
-            if (error.response) {
-                console.log(`❌ ${endpoint} - Status: ${error.response.status} - ${error.response.data?.message || error.response.statusText}`);
-            } else {
-                console.log(`❌ ${endpoint} - Error: ${error.message}`);
-            }
-        }
-    }
-}
-
-// Ejecutar pruebas
-testWithCurrentScopes()
-    .then(token => testEndpointsWithToken(token))
-    .catch(console.error);
diff --git a/backend/test-database-setup.ts b/backend/test-database-setup.ts
index cf4d3b8..fcdb857 100644
--- a/backend/test-database-setup.ts
+++ b/backend/test-database-setup.ts
@@ -1,6 +1,4 @@
 import { PrismaClient } from '@prisma/client';
-import hybridAuthSyncMiddleware from './middleware/hybrid-auth-sync.middleware';
-// Si usas require/module, instala los tipos: npm i --save-dev @types/node
 
 /**
  * Script para probar la conexión y configuración de la base de datos
@@ -163,318 +161,9 @@ async function testDatabaseSetup() {
   }
 }
 
-
-/**
- * Prueba del middleware híbrido: simula validación de usuario y fallback a BD
- */
-async function testHybridMiddleware() {
-  // Simula un request con token Auth0 válido
-  const req: any = {
-    auth: {
-      sub: 'auth0|68b8a6d1bf1669b349577af6',
-      email: 'admin@agromano.com',
-      permissions: ['admin:access', 'trabajadores:read:all']
-    },
-    body: {}
-  };
-  const res: any = {
-    status: (code: number) => ({ json: (obj: any) => console.log(`Res(${code}):`, obj) }),
-    json: (obj: any) => console.log('Res:', obj)
-  };
-  let nextCalled = false;
-  const next = () => { nextCalled = true; };
-
-  console.log('\n🧪 Probando middleware híbrido con token Auth0 válido...');
-  await hybridAuthSyncMiddleware(req, res, next);
-  if (nextCalled) {
-    console.log('✅ Middleware permitió acceso. Usuario:', req.dbUser?.username);
-    console.log('✅ Permisos:', req.userPermissions);
-  }
-
-  // Simula un request sin token Auth0, pero con email en el body
-  const req2: any = {
-    body: { email: 'admin@agromano.com' }
-  };
-  let nextCalled2 = false;
-  const next2 = () => { nextCalled2 = true; };
-  console.log('\n🧪 Probando middleware híbrido SIN token Auth0, solo BD...');
-  await hybridAuthSyncMiddleware(req2, res, next2);
-  if (nextCalled2) {
-    console.log('✅ Middleware permitió acceso solo por BD. Usuario:', req2.dbUser?.username);
-    console.log('✅ Permisos:', req2.userPermissions);
-  }
-}
-
-// Ejecutar pruebas si es llamado directamente
-if (typeof require !== 'undefined' && typeof module !== 'undefined' && require.main === module) {
-  (async () => {
-    await testDatabaseSetup();
-    await testHybridMiddleware();
-  })();
-}
-
-export { testDatabaseSetup };
-
-/**
- * Prueba del middleware híbrido: simula validación de usuario y fallback a BD
- */
-import hybridAuthSyncMiddleware from './middleware/hybrid-auth-sync.middleware';
-
-async function testHybridMiddleware() {
-  // Simula un request con token Auth0 válido
-  const req: any = {
-    auth: {
-      sub: 'auth0|68b8a6d1bf1669b349577af6',
-      email: 'admin@agromano.com',
-      permissions: ['admin:access', 'trabajadores:read:all']
-    },
-    body: {}
-  };
-  const res: any = {
-    status: (code: number) => ({ json: (obj: any) => console.log(`Res(${code}):`, obj) }),
-    json: (obj: any) => console.log('Res:', obj)
-  };
-  let nextCalled = false;
-  const next = () => { nextCalled = true; };
-
-  console.log('\n🧪 Probando middleware híbrido con token Auth0 válido...');
-  await hybridAuthSyncMiddleware(req, res, next);
-  if (nextCalled) {
-    console.log('✅ Middleware permitió acceso. Usuario:', req.dbUser?.username);
-    console.log('✅ Permisos:', req.userPermissions);
-  }
-
-  // Simula un request sin token Auth0, pero con email en el body
-  const req2: any = {
-    body: { email: 'admin@agromano.com' }
-  };
-  let nextCalled2 = false;
-  const next2 = () => { nextCalled2 = true; };
-  console.log('\n🧪 Probando middleware híbrido SIN token Auth0, solo BD...');
-  await hybridAuthSyncMiddleware(req2, res, next2);
-  if (nextCalled2) {
-    console.log('✅ Middleware permitió acceso solo por BD. Usuario:', req2.dbUser?.username);
-    console.log('✅ Permisos:', req2.userPermissions);
-  }
-}
-
-// Ejecutar prueba del middleware híbrido si es llamado directamente
+// Ejecutar si es llamado directamente
 if (require.main === module) {
-  testHybridMiddleware();
-}
-import { PrismaClient } from '@prisma/client';
-import hybridAuthSyncMiddleware from './middleware/hybrid-auth-sync.middleware';
-
-/**
- * Script para probar la conexión y configuración de la base de datos
- * Ejecutar con: npx ts-node test-database-setup.ts
- */
-
-const prisma = new PrismaClient();
-
-async function testDatabaseSetup() {
-  console.log('🔍 Probando configuración de la base de datos...\n');
-
-  try {
-    // 1. Verificar conexión a la BD
-    console.log('1. ✅ Verificando conexión a la base de datos...');
-    await prisma.$connect();
-    console.log('   ✅ Conexión exitosa\n');
-
-    // 2. Verificar usuarios administrativos
-    console.log('2. 👥 Verificando usuarios administrativos...');
-    const usuarios = await prisma.mot_usuario.findMany({
-      where: {
-        username: {
-          contains: '@agromano.com'
-        }
-      },
-      include: {
-        mom_rol: {
-          include: {
-            rel_mom_rol__mom_permiso: {
-              include: {
-                mom_permiso: true
-              }
-            }
-          }
-        }
-      }
-    });
-
-    if (usuarios.length === 0) {
-      console.log('   ⚠️  No se encontraron usuarios administrativos');
-      console.log('   💡 Ejecuta el script SQL de setup primero\n');
-      return;
-    }
-
-    usuarios.forEach(usuario => {
-      const permisos = usuario.mom_rol?.rel_mom_rol__mom_permiso || [];
-      console.log(`   ✅ ${usuario.username}`);
-      console.log(`      Rol: ${usuario.mom_rol?.nombre || 'Sin rol'}`);
-      console.log(`      Permisos: ${permisos.length}`);
-    });
-    console.log('');
-
-    // 3. Verificar roles y permisos
-    console.log('3. 🔐 Verificando roles y permisos...');
-    const roles = await prisma.mom_rol.findMany({
-      where: {
-        codigo: {
-          in: ['ADMIN_AGROMANO', 'SUPERVISOR_CAMPO', 'GERENTE_RRHH', 'SUPERVISOR_RRHH']
-        }
-      },
-      include: {
-        rel_mom_rol__mom_permiso: {
-          include: {
-            mom_permiso: true
-          }
-        }
-      }
-    });
-
-    roles.forEach(rol => {
-      console.log(`   ✅ ${rol.codigo}: ${rol.nombre}`);
-      console.log(`      Permisos: ${rol.rel_mom_rol__mom_permiso.length}`);
-    });
-    console.log('');
-
-    // 4. Verificar algunos permisos específicos
-    console.log('4. ⚡ Verificando permisos específicos...');
-    const permisosEspecificos = await prisma.mom_permiso.findMany({
-      where: {
-        codigo: {
-          in: ['trabajadores:read:all', 'nomina:process', 'asistencia:approve']
-        }
-      }
-    });
-
-    permisosEspecificos.forEach(permiso => {
-      console.log(`   ✅ ${permiso.codigo}: ${permiso.nombre}`);
-    });
-    console.log('');
-
-    // 5. Verificar datos de piña
-    console.log('5. 🍍 Verificando datos de piña...');
-    const cultivos = await prisma.mom_cultivo.findMany({
-      where: {
-        nombre: {
-          contains: 'Piña'
-        }
-      }
-    });
-
-    const tareas = await prisma.mom_tarea.findMany({
-      where: {
-        mom_cultivo: {
-          nombre: 'Piña'
-        }
-      },
-      include: {
-        mom_cultivo: true
-      }
-    });
-
-    console.log(`   ✅ Cultivos de piña: ${cultivos.length}`);
-    console.log(`   ✅ Tareas de piña: ${tareas.length}`);
-
-    if (cultivos.length > 0) {
-      cultivos.forEach(cultivo => {
-        console.log(`      - ${cultivo.nombre}: ${cultivo.descripcion}`);
-      });
-    }
-    console.log('');
-
-    // 6. Simular validación de usuario (como en el middleware)
-    console.log('6. 🧪 Simulando validación de usuario...');
-    const testEmail = 'admin@agromano.com';
-    
-    const usuario = await prisma.mot_usuario.findUnique({
-      where: { username: testEmail },
-      include: {
-        mom_rol: {
-          include: {
-            rel_mom_rol__mom_permiso: {
-              include: {
-                mom_permiso: true
-              }
-            }
-          }
-        }
-      }
-    });
-
-    if (usuario && usuario.mom_rol) {
-      const permisos = usuario.mom_rol.rel_mom_rol__mom_permiso.map(rp => rp.mom_permiso.codigo);
-      console.log(`   ✅ Usuario encontrado: ${usuario.username}`);
-      console.log(`   ✅ Rol: ${usuario.mom_rol.nombre}`);
-      console.log(`   ✅ Total permisos: ${permisos.length}`);
-      console.log(`   ✅ Algunos permisos: ${permisos.slice(0, 3).join(', ')}...`);
-    } else {
-      console.log(`   ❌ Usuario ${testEmail} no encontrado`);
-    }
-    console.log('');
-
-    console.log('🎉 ¡Configuración de base de datos verificada exitosamente!');
-    console.log('📧 Emails para crear en Auth0:');
-    usuarios.forEach(u => console.log(`   - ${u.username}`));
-
-  } catch (error) {
-    console.error('❌ Error durante la verificación:', error);
-  } finally {
-    await prisma.$disconnect();
-  }
-}
-
-
-/**
- * Prueba del middleware híbrido: simula validación de usuario y fallback a BD
- */
-async function testHybridMiddleware() {
-  // Simula un request con token Auth0 válido
-  const req: any = {
-    auth: {
-      sub: 'auth0|68b8a6d1bf1669b349577af6',
-      email: 'admin@agromano.com',
-      permissions: ['admin:access', 'trabajadores:read:all']
-    },
-    body: {}
-  };
-  const res: any = {
-    status: (code: number) => ({ json: (obj: any) => console.log(`Res(${code}):`, obj) }),
-    json: (obj: any) => console.log('Res:', obj)
-  };
-  let nextCalled = false;
-  const next = () => { nextCalled = true; };
-
-  console.log('\n🧪 Probando middleware híbrido con token Auth0 válido...');
-  await hybridAuthSyncMiddleware(req, res, next);
-  if (nextCalled) {
-    console.log('✅ Middleware permitió acceso. Usuario:', req.dbUser?.username);
-    console.log('✅ Permisos:', req.userPermissions);
-  }
-
-  // Simula un request sin token Auth0, pero con email en el body
-  const req2: any = {
-    body: { email: 'admin@agromano.com' }
-  };
-  let nextCalled2 = false;
-  const next2 = () => { nextCalled2 = true; };
-  console.log('\n🧪 Probando middleware híbrido SIN token Auth0, solo BD...');
-  await hybridAuthSyncMiddleware(req2, res, next2);
-  if (nextCalled2) {
-    console.log('✅ Middleware permitió acceso solo por BD. Usuario:', req2.dbUser?.username);
-    console.log('✅ Permisos:', req2.userPermissions);
-  }
-}
-
-// Ejecutar ambas pruebas si es llamado directamente
-if (typeof require !== 'undefined' && typeof module !== 'undefined' && require.main === module) {
-  (async () => {
-    await testDatabaseSetup();
-    await testHybridMiddleware();
-    await prisma.$disconnect();
-  })();
+  testDatabaseSetup();
 }
 
 export { testDatabaseSetup };
diff --git a/backend/tsconfig.json b/backend/tsconfig.json
index 17f1e73..a313453 100644
--- a/backend/tsconfig.json
+++ b/backend/tsconfig.json
@@ -9,8 +9,9 @@
     "typeRoots": [
       "./node_modules/@types",
       "./src/types"
-    ]
+    ],
+    "outDir": "./dist"
   },
-  "include": ["src/**/*"],
-  "exclude": ["node_modules"]
-}
+  "include": ["src/**/*", "prisma/**/*"],
+  "exclude": ["node_modules", "dist"]
+}
\ No newline at end of file
diff --git a/database/REPARAR_SINTAXIS_INDICES.sql b/database/REPARAR_SINTAXIS_INDICES.sql
deleted file mode 100644
index 781f7c6..0000000
--- a/database/REPARAR_SINTAXIS_INDICES.sql
+++ /dev/null
@@ -1,46 +0,0 @@
--- =====================================================
--- SCRIPT DE REPARACIÓN PARA ERROR DE SINTAXIS
--- =====================================================
-
--- En MySQL, CREATE INDEX IF NOT EXISTS no es válida
--- Usamos este patrón en su lugar:
-
--- Para crear índices de forma segura:
-DROP PROCEDURE IF EXISTS CreateIndexIfNotExists;
-
-DELIMITER $$
-CREATE PROCEDURE CreateIndexIfNotExists(
-    IN table_name VARCHAR(128),
-    IN index_name VARCHAR(128), 
-    IN index_definition TEXT
-)
-BEGIN
-    DECLARE index_exists INT DEFAULT 0;
-    
-    SELECT COUNT(*) INTO index_exists
-    FROM information_schema.STATISTICS 
-    WHERE TABLE_SCHEMA = DATABASE()
-        AND TABLE_NAME = table_name
-        AND INDEX_NAME = index_name;
-        
-    IF index_exists = 0 THEN
-        SET @sql = CONCAT('CREATE INDEX ', index_name, ' ON ', table_name, ' ', index_definition);
-        PREPARE stmt FROM @sql;
-        EXECUTE stmt;
-        DEALLOCATE PREPARE stmt;
-    END IF;
-END$$
-DELIMITER ;
-
--- Ahora podemos crear índices de forma segura:
--- CALL CreateIndexIfNotExists('mom_trabajador', 'idx_mom_trabajador_documento', '(documento_identidad)');
-
--- =====================================================
--- ALTERNATIVA MÁS SIMPLE: Ignorar errores de índices duplicados
--- =====================================================
-
--- Si prefieres la solución simple, puedes usar:
--- CREATE INDEX idx_nombre ON tabla(campo); 
--- Y si ya existe, simplemente ignorar el error
-
-SELECT 'Script de reparación creado. Úsalo según necesites.' as mensaje;
diff --git a/database/SCRIPT_SEBASTIAN_CORREGIDO.sql b/database/SCRIPT_SEBASTIAN_CORREGIDO.sql
deleted file mode 100644
index 90b4491..0000000
--- a/database/SCRIPT_SEBASTIAN_CORREGIDO.sql
+++ /dev/null
@@ -1,678 +0,0 @@
-/*
-    Autor: Sebastian Alpízar Porras (CORREGIDO)
-    Fecha: 2025-08-09
-    Propósito: Script de creación de esquema para Sistema de Gestión de Trabajadores Agrícolas (Mano de Obra).
-    Convenciones aplicadas: B02, B05, B06. Prefijos: mom_ (catálogos/mantenimiento), mot_ (transaccional), mof_ (fijas), rel_ (M:N).
-    
-    CORRECCIONES APLICADAS:
-    - Removido "IF NOT EXISTS" de los CREATE INDEX (no soportado en MySQL)
-    - Mantenida toda la funcionalidad original
-*/
-
--- Eliminar base de datos si existe
-DROP DATABASE IF EXISTS gestion_agricola_sebastian;
-
--- Crear la base de datos
-CREATE DATABASE gestion_agricola_sebastian CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
-USE gestion_agricola_sebastian;
-
-/* ===========================================================
-   1) TABLAS DE CATÁLOGO / MANTENIMIENTO (mom_)
-   =========================================================== */
-
-CREATE TABLE IF NOT EXISTS mom_trabajador (
-    trabajador_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador único del trabajador',
-    documento_identidad VARCHAR(50) NOT NULL UNIQUE COMMENT 'Documento de identidad del trabajador',
-    nombre_completo VARCHAR(150) NOT NULL COMMENT 'Nombre completo',
-    fecha_nacimiento DATE NOT NULL COMMENT 'Fecha de nacimiento',
-    telefono VARCHAR(20) DEFAULT NULL COMMENT 'Teléfono',
-    email VARCHAR(100) DEFAULT NULL COMMENT 'Correo electrónico',
-    is_activo TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Estado: activo/inactivo',
-    fecha_registro_at DATETIME NOT NULL COMMENT 'Fecha de registro',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL
-) COMMENT='Catálogo de trabajadores. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mom_rol (
-    rol_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador del rol',
-    codigo VARCHAR(50) NOT NULL UNIQUE COMMENT 'Código del rol',
-    nombre VARCHAR(100) NOT NULL UNIQUE COMMENT 'Nombre del rol',
-    descripcion TEXT DEFAULT NULL COMMENT 'Descripción del rol',
-    fecha_creacion_at DATETIME NOT NULL COMMENT 'Fecha de creación',
-    is_critico TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'Rol crítico (booleano)',
-    is_activo TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Activo/inactivo',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL
-) COMMENT='Catálogo de roles. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mom_permiso (
-    permiso_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador del permiso',
-    codigo VARCHAR(50) DEFAULT NULL COMMENT 'Código del permiso',
-    nombre VARCHAR(100) NOT NULL COMMENT 'Nombre del permiso',
-    categoria VARCHAR(100) DEFAULT NULL COMMENT 'Categoría',
-    descripcion TEXT DEFAULT NULL COMMENT 'Descripción del permiso',
-    is_activo TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Activo/inactivo',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL
-) COMMENT='Catálogo de permisos. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mom_cuadrilla (
-    cuadrilla_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador de la cuadrilla',
-    codigo_identificador VARCHAR(50) NOT NULL UNIQUE COMMENT 'Código único de la cuadrilla',
-    nombre VARCHAR(120) NOT NULL COMMENT 'Nombre de la cuadrilla',
-    descripcion TEXT DEFAULT NULL COMMENT 'Descripción',
-    area_trabajo VARCHAR(150) DEFAULT NULL COMMENT 'Área de trabajo',
-    fecha_creacion_at DATETIME NOT NULL COMMENT 'Fecha de creación',
-    is_activa TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Activa/inactiva',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL
-) COMMENT='Catálogo de cuadrillas. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mom_parcela (
-    parcela_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador de parcela',
-    nombre VARCHAR(120) NOT NULL UNIQUE COMMENT 'Nombre de la parcela',
-    ubicacion_descripcion VARCHAR(250) DEFAULT NULL COMMENT 'Ubicación y descripción',
-    area_hectareas DECIMAL(10,2) DEFAULT NULL COMMENT 'Área en hectáreas',
-    tipo_terreno VARCHAR(80) DEFAULT NULL COMMENT 'Tipo de terreno',
-    descripcion TEXT DEFAULT NULL COMMENT 'Descripción adicional',
-    estado VARCHAR(50) NOT NULL DEFAULT 'disponible' COMMENT 'Estado: disponible/ocupada',
-    is_activa TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Activo/inactivo',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL
-) COMMENT='Catálogo de parcelas. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mom_cultivo (
-    cultivo_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador de cultivo',
-    nombre VARCHAR(120) NOT NULL UNIQUE COMMENT 'Nombre del cultivo',
-    descripcion TEXT DEFAULT NULL COMMENT 'Descripción',
-    unidad_medida_principal VARCHAR(40) DEFAULT NULL COMMENT 'Unidad de medida principal',
-    temporada_tipica VARCHAR(80) DEFAULT NULL COMMENT 'Temporada típica',
-    imagen_path VARCHAR(250) DEFAULT NULL COMMENT 'Ruta imagen',
-    is_activo TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Activo/inactivo',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL
-) COMMENT='Catálogo de cultivos. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mom_tarea (
-    tarea_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador de tarea específica',
-    cultivo_id INT NOT NULL COMMENT 'Referencia al cultivo',
-    nombre VARCHAR(150) NOT NULL COMMENT 'Nombre de la tarea',
-    descripcion TEXT DEFAULT NULL COMMENT 'Descripción',
-    unidad_medicion VARCHAR(50) DEFAULT NULL COMMENT 'Unidad de medición',
-    rendimiento_estandar DECIMAL(10,4) DEFAULT NULL COMMENT 'Rendimiento estándar',
-    instrucciones TEXT DEFAULT NULL COMMENT 'Instrucciones',
-    niveles_dificultad VARCHAR(100) DEFAULT NULL COMMENT 'Niveles de dificultad',
-    is_activo TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Activo/inactivo',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    CONSTRAINT FK_MOM_TAREA_RELATION_MOM_CULTIVO FOREIGN KEY (cultivo_id) REFERENCES mom_cultivo(cultivo_id)
-) COMMENT='Catálogo de tareas específicas por cultivo. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mom_esquema_pago (
-    esquema_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador de esquema de pago',
-    codigo VARCHAR(50) DEFAULT NULL COMMENT 'Código esquema',
-    nombre VARCHAR(120) NOT NULL UNIQUE COMMENT 'Nombre del esquema',
-    tipo VARCHAR(50) NOT NULL COMMENT 'Tipo (tareas/extras)',
-    descripcion TEXT DEFAULT NULL COMMENT 'Descripción',
-    fecha_creacion_at DATETIME NOT NULL COMMENT 'Fecha creación',
-    fecha_vigencia_inicio_at DATETIME DEFAULT NULL COMMENT 'Inicio de vigencia',
-    fecha_vigencia_fin_at DATETIME DEFAULT NULL COMMENT 'Fin de vigencia (NULL si no tiene fin)',
-    estado VARCHAR(50) NOT NULL DEFAULT 'activo' COMMENT 'Estado',
-    is_activo TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Activo/inactivo',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL
-) COMMENT='Catálogo de esquemas de pago. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mom_formula_pago (
-    formula_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador de fórmula de pago',
-    esquema_id INT NOT NULL COMMENT 'Referencia al esquema de pago',
-    formula TEXT NOT NULL COMMENT 'Fórmula (expresión o referencia)',
-    variables_utilizadas TEXT DEFAULT NULL COMMENT 'Listado/JSON de variables utilizadas',
-    ejemplo_calculo TEXT DEFAULT NULL COMMENT 'Ejemplo de cálculo',
-    fecha_creacion_at DATETIME NOT NULL COMMENT 'Fecha creación',
-    usuario_creacion INT NOT NULL COMMENT 'Usuario que creó la fórmula',
-    is_activa TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Activo/inactivo',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    CONSTRAINT FK_MOM_FORMULA_PAGO_RELATION_MOM_ESQUEMA_PAGO FOREIGN KEY (esquema_id) REFERENCES mom_esquema_pago(esquema_id)
-) COMMENT='Fórmulas de pago asociadas a esquemas. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mom_bonificacion (
-    bonificacion_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador de bonificación',
-    codigo VARCHAR(50) DEFAULT NULL COMMENT 'Código bonificación',
-    nombre VARCHAR(120) NOT NULL UNIQUE COMMENT 'Nombre',
-    descripcion TEXT DEFAULT NULL COMMENT 'Descripción',
-    tipo VARCHAR(50) DEFAULT NULL COMMENT 'Tipo (fija/porcentual)',
-    monto_fijo DECIMAL(13,2) DEFAULT NULL COMMENT 'Monto fijo',
-    porcentaje DECIMAL(7,4) DEFAULT NULL COMMENT 'Porcentaje (0..1)',
-    base_calculo VARCHAR(120) DEFAULT NULL COMMENT 'Base de cálculo',
-    condiciones_aplicacion TEXT DEFAULT NULL COMMENT 'Condiciones de aplicación',
-    limite_maximo DECIMAL(13,2) DEFAULT NULL COMMENT 'Límite máximo',
-    limite_minimo DECIMAL(13,2) DEFAULT NULL COMMENT 'Límite mínimo',
-    estado VARCHAR(50) NOT NULL DEFAULT 'activa' COMMENT 'Estado',
-    is_activa TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Activo/inactivo',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL
-) COMMENT='Catálogo de bonificaciones. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mom_periodo_nomina (
-    periodo_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador de período de nómina',
-    codigo_identificador VARCHAR(80) NOT NULL UNIQUE COMMENT 'Código identificador',
-    fecha_inicio_at DATETIME NOT NULL COMMENT 'Fecha inicio del período',
-    fecha_fin_at DATETIME NOT NULL COMMENT 'Fecha fin del período',
-    tipo_nomina VARCHAR(50) DEFAULT 'regular' COMMENT 'Tipo de nómina: regular/extraordinaria',
-    alcance VARCHAR(200) DEFAULT NULL COMMENT 'Alcance del período',
-    estado VARCHAR(50) NOT NULL DEFAULT 'iniciado' COMMENT 'Estado: iniciado/en proceso/revisión/aprobado',
-    fecha_creacion_at DATETIME NOT NULL COMMENT 'Fecha creación',
-    usuario_creacion INT NOT NULL COMMENT 'Usuario que creó el período',
-    is_activo TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Activo/inactivo',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL
-) COMMENT='Períodos de nómina. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mom_deduccion_especial_tipo (
-    deduccion_tipo_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Tipo de deducción especial (catálogo auxiliar)',
-    codigo VARCHAR(50) DEFAULT NULL COMMENT 'Código',
-    nombre VARCHAR(120) NOT NULL UNIQUE COMMENT 'Nombre tipo',
-    descripcion TEXT DEFAULT NULL COMMENT 'Descripción',
-    is_activo TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Activo/inactivo',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL
-) COMMENT='Catálogo de tipos de deducción especial. Autor: Sebastian Jon (2025-08-09)';
-
-/* ===========================================================
-   3) TABLAS TRANSACCIONALES (mot_)
-   =========================================================== */
-
-CREATE TABLE IF NOT EXISTS mot_info_laboral (
-    info_laboral_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador de información laboral',
-    trabajador_id INT NOT NULL COMMENT 'FK al trabajador',
-    cargo VARCHAR(100) NOT NULL COMMENT 'Cargo',
-    fecha_ingreso_at DATETIME NOT NULL COMMENT 'Fecha de ingreso',
-    tipo_contrato VARCHAR(50) NOT NULL COMMENT 'Tipo de contrato',
-    salario_base DECIMAL(13,2) NOT NULL COMMENT 'Salario base',
-    fecha_ultima_actualizacion_at DATETIME NOT NULL COMMENT 'Fecha de última actualización',
-    usuario_ultima_actualizacion INT NOT NULL COMMENT 'Usuario que actualizó',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    CONSTRAINT FK_MOT_INFO_LABORAL_RELATION_MOM_TRABAJADOR FOREIGN KEY (trabajador_id) REFERENCES mom_trabajador(trabajador_id)
-) COMMENT='Información laboral de trabajadores. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mot_asignacion_cuadrilla (
-    asignacion_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador de asignación a cuadrilla',
-    cuadrilla_id INT NOT NULL COMMENT 'FK a cuadrilla',
-    trabajador_id INT NOT NULL COMMENT 'FK a trabajador',
-    fecha_asignacion_at DATETIME NOT NULL COMMENT 'Fecha asignación',
-    usuario_asignacion INT NOT NULL COMMENT 'Usuario que asignó',
-    fecha_retiro_at DATETIME NULL COMMENT 'Fecha de retiro (NULL si aún asignado)',
-    usuario_retiro INT NULL COMMENT 'Usuario que retiró',
-    is_activa TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Asignación activa',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    CONSTRAINT FK_MOT_ASIGNACION_CUADRILLA_RELATION_MOM_CUADRILLA FOREIGN KEY (cuadrilla_id) REFERENCES mom_cuadrilla(cuadrilla_id),
-    CONSTRAINT FK_MOT_ASIGNACION_CUADRILLA_RELATION_MOM_TRABAJADOR FOREIGN KEY (trabajador_id) REFERENCES mom_trabajador(trabajador_id)
-) COMMENT='Asignaciones de trabajadores a cuadrillas. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mot_usuario (
-    usuario_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador de usuario del sistema',
-    trabajador_id INT NULL COMMENT 'FK al trabajador si aplica',
-    username VARCHAR(100) NOT NULL UNIQUE COMMENT 'Nombre de usuario',
-    password_hash VARCHAR(255) NOT NULL COMMENT 'Hash de contraseña',
-    rol_id INT NOT NULL COMMENT 'FK al rol',
-    estado VARCHAR(50) NOT NULL DEFAULT 'activo' COMMENT 'Estado: activo/inactivo',
-    fecha_ultimo_cambio_rol_at DATETIME NULL COMMENT 'Fecha del último cambio de rol',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    CONSTRAINT FK_MOT_USUARIO_RELATION_MOM_TRABAJADOR FOREIGN KEY (trabajador_id) REFERENCES mom_trabajador(trabajador_id),
-    CONSTRAINT FK_MOT_USUARIO_RELATION_MOM_ROL FOREIGN KEY (rol_id) REFERENCES mom_rol(rol_id)
-) COMMENT='Usuarios del sistema. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mot_asistencia (
-    asistencia_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador de asistencia',
-    trabajador_id INT NOT NULL COMMENT 'FK trabajador',
-    fecha_at DATE NOT NULL COMMENT 'Fecha de la jornada laboral',
-    hora_entrada_at DATETIME NOT NULL COMMENT 'Hora de entrada',
-    ubicacion_entrada VARCHAR(150) DEFAULT NULL COMMENT 'Ubicación de entrada',
-    hora_salida_at DATETIME NULL COMMENT 'Hora de salida',
-    horas_trabajadas DECIMAL(5,2) DEFAULT NULL COMMENT 'Horas trabajadas',
-    observaciones_salida TEXT DEFAULT NULL COMMENT 'Observaciones de salida',
-    estado VARCHAR(30) NOT NULL DEFAULT 'completa' COMMENT 'Estado (completa/incompleta/ausente)',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    CONSTRAINT FK_MOT_ASISTENCIA_RELATION_MOM_TRABAJADOR FOREIGN KEY (trabajador_id) REFERENCES mom_trabajador(trabajador_id)
-) COMMENT='Registra asistencia de trabajadores. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mot_ausencia_justificada (
-    ausencia_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador de ausencia justificada',
-    trabajador_id INT NOT NULL COMMENT 'FK trabajador',
-    fecha_at DATE NOT NULL COMMENT 'Fecha de ausencia',
-    motivo TEXT NOT NULL COMMENT 'Motivo',
-    tipo_ausencia VARCHAR(80) DEFAULT NULL COMMENT 'Tipo de ausencia',
-    documento_respaldo_path VARCHAR(250) DEFAULT NULL COMMENT 'Ruta documento de respaldo',
-    estado_aprobacion VARCHAR(50) NOT NULL DEFAULT 'pendiente' COMMENT 'Estado de aprobación',
-    usuario_registro INT NOT NULL COMMENT 'Usuario que registró',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    CONSTRAINT FK_MOT_AUSENCIA_JUSTIFICADA_RELATION_MOM_TRABAJADOR FOREIGN KEY (trabajador_id) REFERENCES mom_trabajador(trabajador_id)
-) COMMENT='Ausencias justificadas registradas por trabajador. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mot_asignacion_cultivo_parcela (
-    asignacion_cultivo_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Asignación cultivo-parcela',
-    parcela_id INT NOT NULL COMMENT 'FK parcela',
-    cultivo_id INT NOT NULL COMMENT 'FK cultivo',
-    fecha_inicio_at DATETIME NOT NULL COMMENT 'Fecha inicio',
-    temporada VARCHAR(80) DEFAULT NULL COMMENT 'Temporada',
-    caracteristicas_particulares TEXT DEFAULT NULL COMMENT 'Características',
-    fecha_fin_at DATETIME NULL COMMENT 'Fecha fin (NULL activo)',
-    usuario_asignacion INT NOT NULL COMMENT 'Usuario que asignó',
-    is_activa TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Activa/inactiva',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    CONSTRAINT FK_MOT_ASIGNACION_CULTIVO_PARCELA_RELATION_MOM_PARCELA FOREIGN KEY (parcela_id) REFERENCES mom_parcela(parcela_id),
-    CONSTRAINT FK_MOT_ASIGNACION_CULTIVO_PARCELA_RELATION_MOM_CULTIVO FOREIGN KEY (cultivo_id) REFERENCES mom_cultivo(cultivo_id)
-) COMMENT='Relaciona cultivos con parcelas. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mot_tarea_programada (
-    tarea_programada_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Tarea programada para parcela',
-    tarea_id INT NOT NULL COMMENT 'FK a tarea específica',
-    parcela_id INT NOT NULL COMMENT 'FK a parcela',
-    fecha_at DATETIME NOT NULL COMMENT 'Fecha programada',
-    duracion_estimada DECIMAL(7,2) DEFAULT NULL COMMENT 'Duración estimada (horas)',
-    prioridad INT DEFAULT NULL COMMENT 'Prioridad',
-    estado VARCHAR(50) NOT NULL DEFAULT 'pendiente' COMMENT 'Estado (pendiente/asignada/completada/cancelada)',
-    bonificacion_asociada INT DEFAULT NULL COMMENT 'FK a bonificación (NULL si no tiene)',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    CONSTRAINT FK_MOT_TAREA_PROGRAMADA_RELATION_MOM_TAREA FOREIGN KEY (tarea_id) REFERENCES mom_tarea(tarea_id),
-    CONSTRAINT FK_MOT_TAREA_PROGRAMADA_RELATION_MOM_PARCELA FOREIGN KEY (parcela_id) REFERENCES mom_parcela(parcela_id),
-    CONSTRAINT FK_MOT_TAREA_PROGRAMADA_RELATION_MOM_BONIFICACION FOREIGN KEY (bonificacion_asociada) REFERENCES mom_bonificacion(bonificacion_id)
-) COMMENT='Tareas programadas por parcela. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mot_asignacion_tarea (
-    asignacion_tarea_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Asignación de tarea (a cuadrilla o individual)',
-    tarea_programada_id INT NOT NULL COMMENT 'FK tarea programada',
-    cuadrilla_id INT DEFAULT NULL COMMENT 'FK cuadrilla (NULL si individual)',
-    trabajador_id INT DEFAULT NULL COMMENT 'FK trabajador (NULL si es a cuadrilla)',
-    fecha_asignacion_at DATETIME NOT NULL COMMENT 'Fecha asignación',
-    usuario_asignacion INT NOT NULL COMMENT 'Usuario que asignó',
-    estado VARCHAR(50) NOT NULL DEFAULT 'pendiente' COMMENT 'Estado (pendiente/en progreso/completada)',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    CONSTRAINT FK_MOT_ASIGNACION_TAREA_RELATION_MOT_TAREA_PROGRAMADA FOREIGN KEY (tarea_programada_id) REFERENCES mot_tarea_programada(tarea_programada_id),
-    CONSTRAINT FK_MOT_ASIGNACION_TAREA_RELATION_MOM_CUADRILLA FOREIGN KEY (cuadrilla_id) REFERENCES mom_cuadrilla(cuadrilla_id),
-    CONSTRAINT FK_MOT_ASIGNACION_TAREA_RELATION_MOM_TRABAJADOR FOREIGN KEY (trabajador_id) REFERENCES mom_trabajador(trabajador_id)
-) COMMENT='Asignaciones de tareas a cuadrillas o trabajadores. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mot_registro_productividad (
-    productividad_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Registro de productividad por trabajador',
-    trabajador_id INT NOT NULL COMMENT 'FK trabajador',
-    tarea_id INT NOT NULL COMMENT 'FK tarea específica',
-    cantidad_producida DECIMAL(13,4) DEFAULT NULL COMMENT 'Cantidad producida',
-    unidad_medida VARCHAR(50) DEFAULT NULL COMMENT 'Unidad de medida',
-    fecha_at DATETIME NOT NULL COMMENT 'Fecha del registro',
-    rendimiento_calculado DECIMAL(13,4) DEFAULT NULL COMMENT 'Rendimiento calculado',
-    condiciones_trabajo_id INT DEFAULT NULL COMMENT 'Referencia a condiciones (opcional)',
-    condiciones_trabajo TEXT DEFAULT NULL COMMENT 'Descripción de condiciones',
-    usuario_registro INT NOT NULL COMMENT 'Usuario que registró',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    CONSTRAINT FK_MOT_REGISTRO_PRODUCTIVIDAD_RELATION_MOM_TRABAJADOR FOREIGN KEY (trabajador_id) REFERENCES mom_trabajador(trabajador_id),
-    CONSTRAINT FK_MOT_REGISTRO_PRODUCTIVIDAD_RELATION_MOM_TAREA FOREIGN KEY (tarea_id) REFERENCES mom_tarea(tarea_id)
-) COMMENT='Registros de productividad por trabajador. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mot_condiciones_trabajo (
-    condicion_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador condiciones de trabajo',
-    fecha_at DATETIME NOT NULL COMMENT 'Fecha condición',
-    condicion_general VARCHAR(150) DEFAULT NULL COMMENT 'Condición general',
-    nivel_dificultad VARCHAR(80) DEFAULT NULL COMMENT 'Nivel de dificultad',
-    observaciones TEXT DEFAULT NULL COMMENT 'Observaciones',
-    usuario_registro INT NOT NULL COMMENT 'Usuario que registró',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL
-) COMMENT='Condiciones de trabajo registradas. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mot_liquidacion (
-    liquidacion_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador de liquidación',
-    periodo_id INT NOT NULL COMMENT 'FK al período de nómina',
-    trabajador_id INT NOT NULL COMMENT 'FK trabajador',
-    total_bruto DECIMAL(13,2) DEFAULT 0.00 COMMENT 'Total bruto',
-    total_deducciones DECIMAL(13,2) DEFAULT 0.00 COMMENT 'Total deducciones',
-    total_neto DECIMAL(13,2) DEFAULT 0.00 COMMENT 'Total neto',
-    estado VARCHAR(50) NOT NULL DEFAULT 'preliminar' COMMENT 'Estado (preliminar/aprobada/pagada)',
-    fecha_generacion_at DATETIME NOT NULL COMMENT 'Fecha de generación',
-    usuario_generacion INT NOT NULL COMMENT 'Usuario que generó',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    CONSTRAINT FK_MOT_LIQUIDACION_RELATION_MOM_PERIODO_NOMINA FOREIGN KEY (periodo_id) REFERENCES mom_periodo_nomina(periodo_id),
-    CONSTRAINT FK_MOT_LIQUIDACION_RELATION_MOM_TRABAJADOR FOREIGN KEY (trabajador_id) REFERENCES mom_trabajador(trabajador_id)
-) COMMENT='Liquidaciones por trabajador y período. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mot_concepto_liquidacion (
-    concepto_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador concepto en la liquidación',
-    liquidacion_id INT NOT NULL COMMENT 'FK a liquidación',
-    tipo VARCHAR(50) NOT NULL COMMENT 'Tipo (ganancia/deducción)',
-    descripcion VARCHAR(250) DEFAULT NULL COMMENT 'Descripción del concepto',
-    monto DECIMAL(13,2) NOT NULL COMMENT 'Monto del concepto',
-    formula_aplicada TEXT DEFAULT NULL COMMENT 'Fórmula aplicada (si aplica)',
-    referencia_id INT DEFAULT NULL COMMENT 'ID de la entidad origen (p.ej. productividad, asistencia)',
-    referencia_tipo VARCHAR(100) DEFAULT NULL COMMENT 'Tipo de referencia (asistencia/productividad/bonificación/etc.)',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    CONSTRAINT FK_MOT_CONCEPTO_LIQUIDACION_RELATION_MOT_LIQUIDACION FOREIGN KEY (liquidacion_id) REFERENCES mot_liquidacion(liquidacion_id)
-) COMMENT='Conceptos que componen una liquidación. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mot_recibo (
-    recibo_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador de recibo',
-    liquidacion_id INT NOT NULL UNIQUE COMMENT 'FK a liquidación (1:1)',
-    codigo_identificador VARCHAR(120) NOT NULL UNIQUE COMMENT 'Código del recibo',
-    fecha_generacion_at DATETIME NOT NULL COMMENT 'Fecha de generación',
-    usuario_generacion INT NOT NULL COMMENT 'Usuario que generó',
-    estado VARCHAR(50) NOT NULL DEFAULT 'pendiente' COMMENT 'Estado (pendiente/entregado)',
-    archivo_path VARCHAR(250) DEFAULT NULL COMMENT 'Ruta del archivo PDF',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    CONSTRAINT FK_MOT_RECIBO_RELATION_MOT_LIQUIDACION FOREIGN KEY (liquidacion_id) REFERENCES mot_liquidacion(liquidacion_id)
-) COMMENT='Recibos de liquidación (uno por liquidación). Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mot_deduccion_especial (
-    deduccion_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador deducción especial',
-    trabajador_id INT NOT NULL COMMENT 'FK trabajador',
-    tipo_id INT DEFAULT NULL COMMENT 'FK tipo de deducción (catálogo)',
-    tipo VARCHAR(100) DEFAULT NULL COMMENT 'Tipo (texto, redundante si se desea)',
-    monto DECIMAL(13,2) NOT NULL COMMENT 'Monto',
-    es_porcentual TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'Indicador si es porcentual',
-    base_calculo VARCHAR(120) DEFAULT NULL COMMENT 'Base de cálculo',
-    periodicidad VARCHAR(80) DEFAULT NULL COMMENT 'Periodicidad',
-    cuotas_totales INT DEFAULT NULL COMMENT 'Cuotas totales',
-    cuotas_restantes INT DEFAULT NULL COMMENT 'Cuotas restantes',
-    fecha_inicio_at DATETIME DEFAULT NULL COMMENT 'Fecha inicio',
-    fecha_fin_at DATETIME DEFAULT NULL COMMENT 'Fecha fin',
-    justificacion TEXT DEFAULT NULL COMMENT 'Justificación',
-    documento_autorizacion_path VARCHAR(250) DEFAULT NULL COMMENT 'Ruta documento autorizacion',
-    estado VARCHAR(50) NOT NULL DEFAULT 'activa' COMMENT 'Estado',
-    -- Auditoría
-    created_at DATETIME NOT NULL,
-    updated_at DATETIME NULL,
-    created_by INT NOT NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    CONSTRAINT FK_MOT_DEDUCCION_ESPECIAL_RELATION_MOM_TRABAJADOR FOREIGN KEY (trabajador_id) REFERENCES mom_trabajador(trabajador_id),
-    CONSTRAINT FK_MOT_DEDUCCION_ESPECIAL_RELATION_MOM_DEDUCCION_TIPO FOREIGN KEY (tipo_id) REFERENCES mom_deduccion_especial_tipo(deduccion_tipo_id)
-) COMMENT='Deducciones especiales por trabajador. Autor: Sebastian Jon (2025-08-09)';
-
-
-/* ===========================================================
-   4) TABLAS RELACIONALES M:N (rel_<a>__<b>) con PK compuesta
-   =========================================================== */
-
--- Relación Rol <> Permiso
-CREATE TABLE IF NOT EXISTS rel_mom_rol__mom_permiso (
-    rol_id INT NOT NULL,
-    permiso_id INT NOT NULL,
-    -- Auditoría mínima (requerida para relaciones/M:N)
-    created_at DATETIME NOT NULL,
-    created_by INT NOT NULL,
-    updated_at DATETIME NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    PRIMARY KEY (rol_id, permiso_id),
-    CONSTRAINT FK_REL_MOM_ROL__MOM_PERMISO_RELATION_MOM_ROL FOREIGN KEY (rol_id) REFERENCES mom_rol(rol_id),
-    CONSTRAINT FK_REL_MOM_ROL__MOM_PERMISO_RELATION_MOM_PERMISO FOREIGN KEY (permiso_id) REFERENCES mom_permiso(permiso_id)
-) COMMENT='Relación M:N entre roles y permisos. Autor: Sebastian Jon (2025-08-09)';
-
--- Relación Parcela <> Cultivo (ya existe mot_asignacion_cultivo_parcela como transaccional,
--- pero si quieres un M:N pura con PK compuesta, también puedes usar la tabla rel_:
-CREATE TABLE IF NOT EXISTS rel_mom_parcela__mom_cultivo (
-    parcela_id INT NOT NULL,
-    cultivo_id INT NOT NULL,
-    fecha_inicio_at DATETIME NOT NULL,
-    fecha_fin_at DATETIME NULL,
-    usuario_asignacion INT NOT NULL,
-    created_at DATETIME NOT NULL,
-    created_by INT NOT NULL,
-    updated_at DATETIME NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    PRIMARY KEY (parcela_id, cultivo_id),
-    CONSTRAINT FK_REL_MOM_PARCELA__MOM_CULTIVO_RELATION_MOM_PARCELA FOREIGN KEY (parcela_id) REFERENCES mom_parcela(parcela_id),
-    CONSTRAINT FK_REL_MOM_PARCELA__MOM_CULTIVO_RELATION_MOM_CULTIVO FOREIGN KEY (cultivo_id) REFERENCES mom_cultivo(cultivo_id)
-) COMMENT='Relación M:N entre parcelas y cultivos (alternativa). Autor: Sebastian Jon (2025-08-09)';
-
--- Relación Tarea <> Esquema Pago (Asignación Esquema-Tarea)
-CREATE TABLE IF NOT EXISTS rel_mom_tarea__mom_esquema_pago (
-    tarea_id INT NOT NULL,
-    esquema_id INT NOT NULL,
-    fecha_asignacion_at DATETIME NOT NULL,
-    fecha_vigencia_inicio_at DATETIME DEFAULT NULL,
-    usuario_asignacion INT NOT NULL,
-    estado VARCHAR(50) NOT NULL DEFAULT 'activo',
-    created_at DATETIME NOT NULL,
-    created_by INT NOT NULL,
-    updated_at DATETIME NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    PRIMARY KEY (tarea_id, esquema_id),
-    CONSTRAINT FK_REL_MOM_TAREA__MOM_ESQUEMA_PAGO_RELATION_MOM_TAREA FOREIGN KEY (tarea_id) REFERENCES mom_tarea(tarea_id),
-    CONSTRAINT FK_REL_MOM_TAREA__MOM_ESQUEMA_PAGO_RELATION_MOM_ESQUEMA_PAGO FOREIGN KEY (esquema_id) REFERENCES mom_esquema_pago(esquema_id)
-) COMMENT='Relaciona tareas con esquemas de pago. Autor: Sebastian Jon (2025-08-09)';
-
--- Relación Cuadrilla <> Trabajador (alternativa M:N; mot_asignacion_cuadrilla también existe)
-CREATE TABLE IF NOT EXISTS rel_mom_cuadrilla__mom_trabajador (
-    cuadrilla_id INT NOT NULL,
-    trabajador_id INT NOT NULL,
-    fecha_asignacion_at DATETIME NOT NULL,
-    fecha_retiro_at DATETIME NULL,
-    usuario_asignacion INT NOT NULL,
-    created_at DATETIME NOT NULL,
-    created_by INT NOT NULL,
-    updated_at DATETIME NULL,
-    updated_by INT NULL,
-    deleted_at DATETIME NULL,
-    PRIMARY KEY (cuadrilla_id, trabajador_id),
-    CONSTRAINT FK_REL_MOM_CUADRILLA__MOM_TRABAJADOR_RELATION_MOM_CUADRILLA FOREIGN KEY (cuadrilla_id) REFERENCES mom_cuadrilla(cuadrilla_id),
-    CONSTRAINT FK_REL_MOM_CUADRILLA__MOM_TRABAJADOR_RELATION_MOM_TRABAJADOR FOREIGN KEY (trabajador_id) REFERENCES mom_trabajador(trabajador_id)
-) COMMENT='Relación M:N cuadrillas-trabajadores (alternativa). Autor: Sebastian Jon (2025-08-09)';
-
-
-/* ===========================================================
-   5) TABLAS HISTÓRICAS / LOGS (moh_, mol_) si aplica
-   (Se pueden llenar por triggers; dejo la estructura básica)
-   =========================================================== */
-
-CREATE TABLE IF NOT EXISTS moh_trabajador_historial (
-    historial_id INT AUTO_INCREMENT PRIMARY KEY,
-    trabajador_id INT NOT NULL,
-    cambio_tipo VARCHAR(80) NOT NULL,
-    datos_previos TEXT DEFAULT NULL,
-    datos_nuevos TEXT DEFAULT NULL,
-    usuario_accion INT DEFAULT NULL,
-    fecha_accion_at DATETIME NOT NULL,
-    created_at DATETIME NOT NULL,
-    CONSTRAINT FK_MOH_TRABAJADOR_HISTORIAL_RELATION_MOM_TRABAJADOR FOREIGN KEY (trabajador_id) REFERENCES mom_trabajador(trabajador_id)
-) COMMENT='Histórico de cambios sobre trabajador. Autor: Sebastian Jon (2025-08-09)';
-
-CREATE TABLE IF NOT EXISTS mol_audit_log (
-    log_id BIGINT AUTO_INCREMENT PRIMARY KEY,
-    entidad VARCHAR(120) NOT NULL,
-    entidad_id INT DEFAULT NULL,
-    accion VARCHAR(50) NOT NULL,
-    datos_antes TEXT DEFAULT NULL,
-    datos_despues TEXT DEFAULT NULL,
-    usuario_id INT DEFAULT NULL,
-    fecha_at DATETIME NOT NULL,
-    ip_origen VARCHAR(100) DEFAULT NULL
-) COMMENT='Log general de auditoría. Autor: Sebastian Jon (2025-08-09)';
-
-
-/* ===========================================================
-   6) ÍNDICES ADICIONALES (CORREGIDOS)
-   =========================================================== */
-
--- Índices para búsquedas frecuentes (SIN "IF NOT EXISTS")
-CREATE INDEX idx_mom_trabajador_documento ON mom_trabajador(documento_identidad);
-CREATE INDEX idx_mom_trabajador_nombre ON mom_trabajador(nombre_completo);
-CREATE INDEX idx_mot_asistencia_trabajador_fecha ON mot_asistencia(trabajador_id, fecha_at);
-CREATE INDEX idx_mot_registro_productividad_trabajador_fecha ON mot_registro_productividad(trabajador_id, fecha_at);
-
--- =====================================================
--- DATOS INICIALES PARA PIÑA
--- =====================================================
-
--- Insertar datos básicos para las 4 variedades de piña
-INSERT INTO mom_cultivo (nombre, descripcion, unidad_medida_principal, temporada_tipica, is_activo, created_at, updated_at, created_by, updated_by) VALUES
-('Piña Golden (MD2)', 'Variedad Golden Sweet MD2 - La más comercial', 'Unidades', 'Todo el año', 1, NOW(), NOW(), 1, 1),
-('Piña Cayena Lisa', 'Variedad Cayena Lisa tradicional', 'Unidades', 'Todo el año', 1, NOW(), NOW(), 1, 1),
-('Piña Perolera', 'Variedad Perolera nacional', 'Unidades', 'Todo el año', 1, NOW(), NOW(), 1, 1),
-('Piña Roja Española', 'Variedad Red Spanish tradicional', 'Unidades', 'Todo el año', 1, NOW(), NOW(), 1, 1);
-
--- Insertar parcelas para piña
-INSERT INTO mom_parcela (nombre, ubicacion_descripcion, area_hectareas, tipo_terreno, descripcion, estado, is_activa, created_at, updated_at, created_by, updated_by) VALUES
-('Lote A1', 'Sector norte de la finca piñera', 8.50, 'Plano', 'Área principal de cultivo de piña', 'disponible', 1, NOW(), NOW(), 1, 1),
-('Lote B2', 'Sector sur con pendiente suave', 6.20, 'Inclinado', 'Zona de expansión piñera', 'disponible', 1, NOW(), NOW(), 1, 1),
-('Lote C3', 'Cerca del sistema de riego', 7.80, 'Húmedo', 'Área con mejor acceso a agua', 'disponible', 1, NOW(), NOW(), 1, 1),
-('Lote D4', 'Sector experimental', 3.10, 'Mixto', 'Área para pruebas de variedades', 'disponible', 1, NOW(), NOW(), 1, 1);
-
--- Insertar cuadrillas especializadas en piña
-INSERT INTO mom_cuadrilla (codigo_identificador, nombre, descripcion, area_trabajo, fecha_creacion_at, is_activa, created_at, updated_at, created_by, updated_by) VALUES
-('PINA01', 'Cuadrilla Siembra Piña', 'Equipo especializado en siembra de piña', 'Lotes A1, B2', NOW(), 1, NOW(), NOW(), 1, 1),
-('PINA02', 'Cuadrilla Mantenimiento', 'Equipo de mantenimiento y cuidado', 'Todos los lotes', NOW(), 1, NOW(), NOW(), 1, 1),
-('PINA03', 'Cuadrilla Cosecha', 'Equipo especializado en cosecha', 'Lotes C3, D4', NOW(), 1, NOW(), NOW(), 1, 1);
-
--- Insertar tareas específicas de piña
-INSERT INTO mom_tarea (cultivo_id, nombre, descripcion, unidad_medicion, rendimiento_estandar, instrucciones, niveles_dificultad, is_activo, created_at, updated_at, created_by, updated_by) VALUES
-(1, 'Siembra de coronas', 'Plantación de coronas de piña MD2', 'Plantas/día', 300.0000, 'Plantar coronas a 30cm de distancia', 'Medio', 1, NOW(), NOW(), 1, 1),
-(1, 'Fertilización', 'Aplicación de fertilizantes específicos', 'Plantas/día', 500.0000, 'Aplicar fertilizante granulado alrededor de la planta', 'Fácil', 1, NOW(), NOW(), 1, 1),
-(1, 'Deshierbe manual', 'Control manual de malezas', 'Metros²/día', 400.0000, 'Remover malezas sin dañar raíces', 'Fácil', 1, NOW(), NOW(), 1, 1),
-(1, 'Aplicación de reguladores', 'Aplicación de hormonas para inducir floración', 'Plantas/día', 800.0000, 'Aplicar carburo de calcio en el cogollo', 'Difícil', 1, NOW(), NOW(), 1, 1),
-(1, 'Embolse de frutos', 'Protección de frutos con bolsas', 'Frutos/día', 100.0000, 'Colocar bolsa protectora en cada fruto', 'Medio', 1, NOW(), NOW(), 1, 1),
-(1, 'Cosecha de piña', 'Recolección de frutos maduros', 'Unidades/día', 200.0000, 'Cortar frutos en punto óptimo de madurez', 'Medio', 1, NOW(), NOW(), 1, 1);
-
--- Crear usuario administrador básico
-INSERT INTO mom_rol (codigo, nombre, descripcion, fecha_creacion_at, is_critico, is_activo, created_at, updated_at, created_by, updated_by) VALUES
-('ADMIN', 'Administrador', 'Rol de administrador del sistema', NOW(), 1, 1, NOW(), NOW(), 1, 1),
-('SUPER', 'Supervisor', 'Rol de supervisor de campo', NOW(), 0, 1, NOW(), NOW(), 1, 1),
-('OPER', 'Operario', 'Rol de operario de campo', NOW(), 0, 1, NOW(), NOW(), 1, 1);
-
--- Insertar trabajador inicial
-INSERT INTO mom_trabajador (documento_identidad, nombre_completo, fecha_nacimiento, telefono, email, is_activo, fecha_registro_at, created_at, updated_at, created_by, updated_by) VALUES
-('12345678', 'Administrador Sistema', '1990-01-01', '555-0000', 'admin@piñafinca.com', 1, NOW(), NOW(), NOW(), 1, 1);
-
--- Crear usuario del sistema
-INSERT INTO mot_usuario (trabajador_id, username, password_hash, rol_id, estado, created_at, updated_at, created_by, updated_by) VALUES
-(1, 'admin', '$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/lewfBNXoUhDxbh7H6', 1, 'activo', NOW(), NOW(), 1, 1);
-
--- Crear usuario para aplicación
-CREATE USER IF NOT EXISTS 'app_pina'@'%' IDENTIFIED BY 'PinaApp2024!';
-GRANT SELECT, INSERT, UPDATE, DELETE ON gestion_agricola_sebastian.* TO 'app_pina'@'%';
-FLUSH PRIVILEGES;
-
--- Mostrar resumen
-SELECT 
-    'SCRIPT SEBASTIAN CORREGIDO - BASE DE DATOS LISTA' as mensaje,
-    COUNT(*) as total_tablas
-FROM information_schema.tables 
-WHERE table_schema = 'gestion_agricola_sebastian';
-
-SELECT '✅ Script de Sebastian ejecutado exitosamente' as resultado;
-SELECT '🍍 Configurado específicamente para cultivo de piña' as especializacion;
-SELECT '🔧 Todas las correcciones de sintaxis aplicadas' as correccion;
diff --git a/frontend/src/auth/AuthContext.tsx b/frontend/src/auth/AuthContext.tsx
index f6b37ef..d1d9d59 100644
--- a/frontend/src/auth/AuthContext.tsx
+++ b/frontend/src/auth/AuthContext.tsx
@@ -84,5 +84,3 @@ export const useAuth = () => {
   }
   return context;
 };
-
-export { AuthContext };
diff --git a/frontend/src/authentication/infrastructure/auth0/Auth0Repository.ts b/frontend/src/authentication/infrastructure/auth0/Auth0Repository.ts
index 1875bab..12eb221 100644
--- a/frontend/src/authentication/infrastructure/auth0/Auth0Repository.ts
+++ b/frontend/src/authentication/infrastructure/auth0/Auth0Repository.ts
@@ -49,22 +49,44 @@ export class Auth0Repository implements AuthRepository {
       console.log('🧪 Probando endpoint público primero...');
       const publicResponse = await fetch(`${this.apiBaseUrl}/auth/public`);
       console.log('📡 Endpoint público status:', publicResponse.status);
+
+      // DEBUG: Verificar la URL completa
+      const apiUrl = `${this.apiBaseUrl}/auth/protected`;
+      console.log('🌐 Intentando conectar a:', apiUrl);
+      
+       // Agregar timeout y mejor manejo de errores
+      const controller = new AbortController();
+      const timeoutId = setTimeout(() => controller.abort(), 10000);
       
-      const response = await fetch(`${this.apiBaseUrl}/auth/protected`, {
+      const response = await fetch(apiUrl, {
         headers: {
           'Authorization': `Bearer ${token}`,
           'Content-Type': 'application/json'
-        }
+        },
+        signal: controller.signal
       });
+
+      clearTimeout(timeoutId);
+    
+      console.log('📡 Status:', response.status);
+      console.log('📡 Content-Type:', response.headers.get('content-type'));
       
       console.log('🌐 Respuesta del backend:', response.status);
 
-      if (!response.ok) {
-        throw new Error('Error al obtener perfil del usuario');
+      const contentType = response.headers.get('content-type');
+    
+      if (contentType && contentType.includes('text/html')) {
+        console.error('❌ ERROR: Se recibió HTML en lugar de JSON');
+        console.error('❌ Esto indica problemas de routing o URL incorrecta');
+        throw new Error('Configuración incorrecta del endpoint API');
       }
 
       const backendResponse = await response.json();
-      
+
+      if (!response.ok) {
+        throw new Error(backendResponse.message || 'Error al obtener perfil');
+      }
+
       console.log('🔍 DEBUG - Respuesta completa del backend:', backendResponse);
       console.log('🔍 DEBUG - backendResponse.success:', backendResponse.success);
       console.log('🔍 DEBUG - backendResponse.user:', backendResponse.user);
diff --git a/frontend/src/authentication/presentation/components/EmpleadoCampoDashboard/EmpleadoCampoDashboard.tsx b/frontend/src/authentication/presentation/components/EmpleadoCampoDashboard/EmpleadoCampoDashboard.tsx
deleted file mode 100644
index 44b05df..0000000
--- a/frontend/src/authentication/presentation/components/EmpleadoCampoDashboard/EmpleadoCampoDashboard.tsx
+++ /dev/null
@@ -1,84 +0,0 @@
-import React, { useEffect, useState } from 'react';
-import { Box, Grid } from '@mui/material';
-import { useAuth0 } from '@auth0/auth0-react';
-import { useAuth } from '../../../application/hooks/useAuth';
-import { ApiDashboardRepository } from '../../../../dashboard/infrastructure/ApiDashboardRepository';
-import { GetDashboardDataUseCase } from '../../../../dashboard/application/use-cases/DashboardUseCases';
-import { StatsCards } from '../../../../dashboard/presentation/components/StatsCards/StatsCards';
-import { ActivityFeed } from '../../../../dashboard/presentation/components/ActivityFeed/ActivityFeed';
-import { DashboardLayout, PermissionsPanel } from '../AdminDashboard/components';
-
-export const EmpleadoCampoDashboard: React.FC = () => {
-  const { user } = useAuth();
-  const { getAccessTokenSilently } = useAuth0();
-  const [dashboardData, setDashboardData] = useState<any>(null);
-  const [loading, setLoading] = useState(true);
-  const [error, setError] = useState<string | null>(null);
-
-  useEffect(() => {
-    const loadDashboardData = async () => {
-      try {
-        setError(null);
-        const repository = new ApiDashboardRepository(getAccessTokenSilently);
-        const getDashboardDataUseCase = new GetDashboardDataUseCase(repository);
-        const data = await getDashboardDataUseCase.execute();
-        setDashboardData(data);
-      } catch (error) {
-        setError('Error cargando datos del dashboard. Verifica la conexión o permisos.');
-      } finally {
-        setLoading(false);
-      }
-    };
-    loadDashboardData();
-  }, [getAccessTokenSilently]);
-
-  const hasPermission = (permission: string) => {
-    if (!user) return false;
-    if (typeof (user as any).hasPermission === 'function') {
-      return (user as any).hasPermission(permission);
-    }
-    // fallback: check permissions in roles
-    return Array.isArray(user.roles)
-      ? user.roles.some((role: any) => Array.isArray(role.permissions) && role.permissions.some((p: any) => p.name === permission))
-      : false;
-  };
-
-  if (loading) {
-    return (
-      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh', backgroundColor: '#0f172a', color: '#fff' }}>
-        Cargando datos del dashboard...
-      </Box>
-    );
-  }
-
-  if (error) {
-    return (
-      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh', backgroundColor: '#0f172a', color: '#fff' }}>
-        {error}
-      </Box>
-    );
-  }
-
-  return (
-    <DashboardLayout user={user}>
-      <Box sx={{ flex: 1, p: 4, backgroundColor: '#0f172a' }}>
-        <Grid container spacing={3}>
-          <Grid item xs={12}>
-            <PermissionsPanel user={user} />
-          </Grid>
-          {hasPermission('asistencia:register') && (
-            <Grid item xs={12}>
-              <StatsCards stats={dashboardData?.stats} />
-            </Grid>
-          )}
-          {hasPermission('productividad:register') && (
-            <Grid item xs={12} md={6}>
-              <ActivityFeed activities={dashboardData?.activities} />
-            </Grid>
-          )}
-        </Grid>
-      </Box>
-    </DashboardLayout>
-  );
-}
-// Removed duplicate/erroneous code block after main component export
diff --git a/frontend/src/authentication/presentation/components/GerenteRRHHDashboard/GerenteRRHHDashboard.tsx b/frontend/src/authentication/presentation/components/GerenteRRHHDashboard/GerenteRRHHDashboard.tsx
deleted file mode 100644
index cac1cb0..0000000
--- a/frontend/src/authentication/presentation/components/GerenteRRHHDashboard/GerenteRRHHDashboard.tsx
+++ /dev/null
@@ -1,55 +0,0 @@
-import React from 'react';
-import { Box, Grid } from '@mui/material';
-import { DashboardLayout, PermissionsPanel } from '../AdminDashboard/components';
-import { StatsCards } from '../../../../dashboard/presentation/components/StatsCards/StatsCards';
-import { ActivityFeed } from '../../../../dashboard/presentation/components/ActivityFeed/ActivityFeed';
-import { ConditionsPanel } from '../../../../dashboard/presentation/components/ConditionsPanel/ConditionsPanel';
-
-interface GerenteRRHHDashboardProps {
-  user: {
-    permisos?: string[];
-    [key: string]: any;
-  };
-
-
-    dashboardData: {
-      stats?: any;
-      activities?: any;
-      conditions?: any;
-      [key: string]: any;
-    };
-}
-
-export const GerenteRRHHDashboard: React.FC<GerenteRRHHDashboardProps> = ({ user, dashboardData }) => {
-  const hasPermission = (permission: string) => {
-    return user?.permisos?.includes(permission);
-  };
-  return (
-    <DashboardLayout user={user}>
-      <Box sx={{ flex: 1, p: 4, backgroundColor: '#0f172a' }}>
-        <Grid container spacing={3}>
-          {hasPermission('dashboard:view:advanced') && (
-            <Grid item xs={12}>
-              <StatsCards stats={dashboardData.stats} />
-            </Grid>
-          )}
-          <Grid item xs={12}>
-            <PermissionsPanel user={user} />
-          </Grid>
-          <Grid container spacing={3} item xs={12}>
-            {hasPermission('reportes:read:advanced') && (
-              <Grid item xs={12} md={6}>
-                <ActivityFeed activities={dashboardData.activities} />
-              </Grid>
-            )}
-            {hasPermission('dashboard:view:advanced') && (
-              <Grid item xs={12} md={6}>
-                <ConditionsPanel conditions={dashboardData.conditions} />
-              </Grid>
-            )}
-          </Grid>
-        </Grid>
-      </Box>
-    </DashboardLayout>
-  );
-}
diff --git a/frontend/src/authentication/presentation/components/SoloLecturaDashboard/SoloLecturaDashboard.tsx b/frontend/src/authentication/presentation/components/SoloLecturaDashboard/SoloLecturaDashboard.tsx
deleted file mode 100644
index 41191c5..0000000
--- a/frontend/src/authentication/presentation/components/SoloLecturaDashboard/SoloLecturaDashboard.tsx
+++ /dev/null
@@ -1,56 +0,0 @@
-import React from 'react';
-import { Box, Grid } from '@mui/material';
-import { DashboardLayout, PermissionsPanel } from '../AdminDashboard/components';
-import { StatsCards } from '../../../../dashboard/presentation/components/StatsCards/StatsCards';
-import { ActivityFeed } from '../../../../dashboard/presentation/components/ActivityFeed/ActivityFeed';
-import { ConditionsPanel } from '../../../../dashboard/presentation/components/ConditionsPanel/ConditionsPanel';
-
-interface SoloLecturaDashboardProps {
-  user: {
-    permisos?: string[];
-    [key: string]: any;
-  };
-  dashboardData: {
-    stats?: any;
-    activities?: any;
-    conditions?: any;
-    [key: string]: any;
-  };
-}
-
-
-
-export const SoloLecturaDashboard: React.FC<SoloLecturaDashboardProps> = ({ user, dashboardData }) => {
-  const hasPermission = (permission: string) => {
-    return user?.permisos?.includes(permission);
-  };
-  return (
-    <DashboardLayout user={user}>
-      <Box sx={{ flex: 1, p: 4, backgroundColor: '#0f172a' }}>
-        <Grid container spacing={3}>
-          {hasPermission('dashboard:view:advanced') && (
-            <Grid item xs={12}>
-              <StatsCards stats={dashboardData.stats} />
-            </Grid>
-          )}
-          <Grid item xs={12}>
-            <PermissionsPanel user={user} />
-          </Grid>
-          <Grid container spacing={3} item xs={12}>
-            {hasPermission('reportes:read:advanced') && (
-              <Grid item xs={12} md={6}>
-                <ActivityFeed activities={dashboardData.activities} />
-              </Grid>
-            )}
-            {hasPermission('dashboard:view:advanced') && (
-              <Grid item xs={12} md={6}>
-                <ConditionsPanel conditions={dashboardData.conditions} />
-              </Grid>
-            )}
-          </Grid>
-        </Grid>
-      </Box>
-    </DashboardLayout>
-  );
-}
-// Removed duplicate/erroneous code block after main component export
diff --git a/frontend/src/authentication/presentation/components/SupervisorCampoDashboard/SupervisorCampoDashboard.tsx b/frontend/src/authentication/presentation/components/SupervisorCampoDashboard/SupervisorCampoDashboard.tsx
deleted file mode 100644
index 6689a67..0000000
--- a/frontend/src/authentication/presentation/components/SupervisorCampoDashboard/SupervisorCampoDashboard.tsx
+++ /dev/null
@@ -1,89 +0,0 @@
-import React from 'react';
-import { Box, Grid } from '@mui/material';
-import { DashboardLayout, PermissionsPanel } from '../AdminDashboard/components';
-import { StatsCards } from '../../../../dashboard/presentation/components/StatsCards/StatsCards';
-import { ActivityFeed } from '../../../../dashboard/presentation/components/ActivityFeed/ActivityFeed';
-import { ConditionsPanel } from '../../../../dashboard/presentation/components/ConditionsPanel/ConditionsPanel';
-
-// Permisos relevantes para Supervisor Campo según la matriz
-const PERMISOS_SUPERVISOR_CAMPO = [
-  'trabajadores:read:all',
-  'trabajadores:update:all',
-  'trabajadores:export',
-  'asistencia:read:all',
-  'asistencia:update',
-  'asistencia:approve',
-  'asistencia:reports',
-  'asistencia:dashboard',
-  'permisos:approve',
-  'productividad:read:all',
-  'productividad:register:others',
-  'productividad:reports',
-  'tareas:create',
-  'tareas:assign',
-  'metas:set',
-  'metas:track',
-  'parcelas:read',
-  'parcelas:update',
-  'cultivos:read',
-  'cultivos:update',
-  'cultivos:track',
-  'cosechas:register',
-  'cosechas:read',
-  'reportes:read:advanced',
-  'reportes:export',
-  'dashboard:view:advanced',
-  'kpis:view'
-];
-
-
-interface SupervisorCampoDashboardProps {
-  user: {
-    permisos?: string[];
-    [key: string]: any;
-  };
-  dashboardData: {
-    stats?: any;
-    activities?: any;
-    conditions?: any;
-    [key: string]: any;
-  };
-}
-
-export const SupervisorCampoDashboard: React.FC<SupervisorCampoDashboardProps> = ({ user, dashboardData }) => {
-  const hasPermission = (permission: string) => {
-    return user?.permisos?.includes(permission);
-  };
-  return (
-    <DashboardLayout user={user}>
-      <Box sx={{ flex: 1, p: 4, backgroundColor: '#0f172a' }}>
-        <Grid container spacing={3}>
-          {/* Stats Cards solo si tiene permiso de ver KPIs */}
-          {hasPermission('kpis:view') && (
-            <Grid item xs={12}>
-              <StatsCards stats={dashboardData.stats} />
-            </Grid>
-          )}
-          {/* Panel de permisos siempre visible */}
-          <Grid item xs={12}>
-            <PermissionsPanel user={user} />
-          </Grid>
-          <Grid container spacing={3} item xs={12}>
-            {/* Activity Feed solo si tiene permiso de ver reportes avanzados */}
-            {hasPermission('reportes:read:advanced') && (
-              <Grid item xs={12} md={6}>
-                <ActivityFeed activities={dashboardData.activities} />
-              </Grid>
-            )}
-            {/* Panel de condiciones solo si tiene permiso de ver dashboard avanzado */}
-            {hasPermission('dashboard:view:advanced') && (
-              <Grid item xs={12} md={6}>
-                <ConditionsPanel conditions={dashboardData.conditions} />
-              </Grid>
-            )}
-          </Grid>
-        </Grid>
-      </Box>
-    </DashboardLayout>
-  );
-};
diff --git a/frontend/src/authentication/presentation/components/SupervisorRRHHDashboard/SupervisorRRHHDashboard.tsx b/frontend/src/authentication/presentation/components/SupervisorRRHHDashboard/SupervisorRRHHDashboard.tsx
deleted file mode 100644
index 5cc6375..0000000
--- a/frontend/src/authentication/presentation/components/SupervisorRRHHDashboard/SupervisorRRHHDashboard.tsx
+++ /dev/null
@@ -1,54 +0,0 @@
-import React from 'react';
-import { Box, Grid } from '@mui/material';
-import { DashboardLayout, PermissionsPanel } from '../AdminDashboard/components';
-import { StatsCards } from '../../../../dashboard/presentation/components/StatsCards/StatsCards';
-import { ActivityFeed } from '../../../../dashboard/presentation/components/ActivityFeed/ActivityFeed';
-import { ConditionsPanel } from '../../../../dashboard/presentation/components/ConditionsPanel/ConditionsPanel';
-
-interface SupervisorRRHHDashboardProps {
-  user: {
-    permisos?: string[];
-    [key: string]: any;
-  };
-  dashboardData: {
-    stats?: any;
-    activities?: any;
-    conditions?: any;
-    [key: string]: any;
-  };
-}
-
-
-export const SupervisorRRHHDashboard: React.FC<SupervisorRRHHDashboardProps> = ({ user, dashboardData }) => {
-  const hasPermission = (permission: string) => {
-    return user?.permisos?.includes(permission);
-  };
-  return (
-    <DashboardLayout user={user}>
-      <Box sx={{ flex: 1, p: 4, backgroundColor: '#0f172a' }}>
-        <Grid container spacing={3}>
-          {hasPermission('dashboard:view:advanced') && (
-            <Grid item xs={12}>
-              <StatsCards stats={dashboardData.stats} />
-            </Grid>
-          )}
-          <Grid item xs={12}>
-            <PermissionsPanel user={user} />
-          </Grid>
-          <Grid container spacing={3} item xs={12}>
-            {hasPermission('reportes:read:advanced') && (
-              <Grid item xs={12} md={6}>
-                <ActivityFeed activities={dashboardData.activities} />
-              </Grid>
-            )}
-            {hasPermission('dashboard:view:advanced') && (
-              <Grid item xs={12} md={6}>
-                <ConditionsPanel conditions={dashboardData.conditions} />
-              </Grid>
-            )}
-          </Grid>
-        </Grid>
-      </Box>
-    </DashboardLayout>
-  );
-}
diff --git a/jest.config.js b/jest.config.js
deleted file mode 100644
index 185e11f..0000000
--- a/jest.config.js
+++ /dev/null
@@ -1,8 +0,0 @@
-module.exports = {
-  preset: 'ts-jest',
-  testEnvironment: 'jsdom',
-  transform: {
-    '^.+\\.(ts|tsx)$': 'ts-jest',
-  },
-  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json', 'node'],
-};
\ No newline at end of file
diff --git a/package-lock.json b/package-lock.json
deleted file mode 100644
index 68c5285..0000000
--- a/package-lock.json
+++ /dev/null
@@ -1,5388 +0,0 @@
-{
-  "name": "sistema-gestion-agricola",
-  "lockfileVersion": 3,
-  "requires": true,
-  "packages": {
-    "": {
-      "dependencies": {
-        "@auth0/auth0-react": "^2.4.0"
-      },
-      "devDependencies": {
-        "@testing-library/jest-dom": "^6.8.0",
-        "@testing-library/react": "^16.3.0",
-        "@testing-library/user-event": "^14.6.1",
-        "@types/jest": "^30.0.0",
-        "@types/react": "^19.1.12",
-        "jest": "^30.1.3",
-        "jest-environment-jsdom": "^30.1.2",
-        "ts-jest": "^29.4.1"
-      }
-    },
-    "node_modules/@adobe/css-tools": {
-      "version": "4.4.4",
-      "resolved": "https://registry.npmjs.org/@adobe/css-tools/-/css-tools-4.4.4.tgz",
-      "integrity": "sha512-Elp+iwUx5rN5+Y8xLt5/GRoG20WGoDCQ/1Fb+1LiGtvwbDavuSk0jhD/eZdckHAuzcDzccnkv+rEjyWfRx18gg==",
-      "dev": true
-    },
-    "node_modules/@asamuzakjp/css-color": {
-      "version": "3.2.0",
-      "resolved": "https://registry.npmjs.org/@asamuzakjp/css-color/-/css-color-3.2.0.tgz",
-      "integrity": "sha512-K1A6z8tS3XsmCMM86xoWdn7Fkdn9m6RSVtocUrJYIwZnFVkng/PvkEoWtOWmP+Scc6saYWHWZYbndEEXxl24jw==",
-      "dev": true,
-      "dependencies": {
-        "@csstools/css-calc": "^2.1.3",
-        "@csstools/css-color-parser": "^3.0.9",
-        "@csstools/css-parser-algorithms": "^3.0.4",
-        "@csstools/css-tokenizer": "^3.0.3",
-        "lru-cache": "^10.4.3"
-      }
-    },
-    "node_modules/@asamuzakjp/css-color/node_modules/lru-cache": {
-      "version": "10.4.3",
-      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
-      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
-      "dev": true
-    },
-    "node_modules/@auth0/auth0-react": {
-      "version": "2.4.0",
-      "resolved": "https://registry.npmjs.org/@auth0/auth0-react/-/auth0-react-2.4.0.tgz",
-      "integrity": "sha512-5bt3sO9FVupNM15IpqyYu/2OPHpLI5El7RgWLQXZOPbnCBbtl+VgdHR+H2NfhNQ4SqQtC/5uKbHWafcVcsxkiw==",
-      "dependencies": {
-        "@auth0/auth0-spa-js": "^2.2.0"
-      },
-      "peerDependencies": {
-        "react": "^16.11.0 || ^17 || ^18 || ^19",
-        "react-dom": "^16.11.0 || ^17 || ^18 || ^19"
-      }
-    },
-    "node_modules/@auth0/auth0-spa-js": {
-      "version": "2.4.1",
-      "resolved": "https://registry.npmjs.org/@auth0/auth0-spa-js/-/auth0-spa-js-2.4.1.tgz",
-      "integrity": "sha512-GE1XPLEgEUeqYBw5VcA52+3ubJDh4VKZFqdu0mr6h7anu+rFZb389cDbfpW145I23T1knZB/jvQtuRrkcLuT+Q==",
-      "dependencies": {
-        "browser-tabs-lock": "^1.2.15",
-        "dpop": "^2.1.1",
-        "es-cookie": "~1.3.2"
-      }
-    },
-    "node_modules/@babel/code-frame": {
-      "version": "7.27.1",
-      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz",
-      "integrity": "sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-validator-identifier": "^7.27.1",
-        "js-tokens": "^4.0.0",
-        "picocolors": "^1.1.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/compat-data": {
-      "version": "7.28.4",
-      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.28.4.tgz",
-      "integrity": "sha512-YsmSKC29MJwf0gF8Rjjrg5LQCmyh+j/nD8/eP7f+BeoQTKYqs9RoWbjGOdy0+1Ekr68RJZMUOPVQaQisnIo4Rw==",
-      "dev": true,
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/core": {
-      "version": "7.28.4",
-      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.28.4.tgz",
-      "integrity": "sha512-2BCOP7TN8M+gVDj7/ht3hsaO/B/n5oDbiAyyvnRlNOs+u1o+JWNYTQrmpuNp1/Wq2gcFrI01JAW+paEKDMx/CA==",
-      "dev": true,
-      "dependencies": {
-        "@babel/code-frame": "^7.27.1",
-        "@babel/generator": "^7.28.3",
-        "@babel/helper-compilation-targets": "^7.27.2",
-        "@babel/helper-module-transforms": "^7.28.3",
-        "@babel/helpers": "^7.28.4",
-        "@babel/parser": "^7.28.4",
-        "@babel/template": "^7.27.2",
-        "@babel/traverse": "^7.28.4",
-        "@babel/types": "^7.28.4",
-        "@jridgewell/remapping": "^2.3.5",
-        "convert-source-map": "^2.0.0",
-        "debug": "^4.1.0",
-        "gensync": "^1.0.0-beta.2",
-        "json5": "^2.2.3",
-        "semver": "^6.3.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      },
-      "funding": {
-        "type": "opencollective",
-        "url": "https://opencollective.com/babel"
-      }
-    },
-    "node_modules/@babel/generator": {
-      "version": "7.28.3",
-      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.28.3.tgz",
-      "integrity": "sha512-3lSpxGgvnmZznmBkCRnVREPUFJv2wrv9iAoFDvADJc0ypmdOxdUtcLeBgBJ6zE0PMeTKnxeQzyk0xTBq4Ep7zw==",
-      "dev": true,
-      "dependencies": {
-        "@babel/parser": "^7.28.3",
-        "@babel/types": "^7.28.2",
-        "@jridgewell/gen-mapping": "^0.3.12",
-        "@jridgewell/trace-mapping": "^0.3.28",
-        "jsesc": "^3.0.2"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/helper-compilation-targets": {
-      "version": "7.27.2",
-      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.2.tgz",
-      "integrity": "sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==",
-      "dev": true,
-      "dependencies": {
-        "@babel/compat-data": "^7.27.2",
-        "@babel/helper-validator-option": "^7.27.1",
-        "browserslist": "^4.24.0",
-        "lru-cache": "^5.1.1",
-        "semver": "^6.3.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/helper-globals": {
-      "version": "7.28.0",
-      "resolved": "https://registry.npmjs.org/@babel/helper-globals/-/helper-globals-7.28.0.tgz",
-      "integrity": "sha512-+W6cISkXFa1jXsDEdYA8HeevQT/FULhxzR99pxphltZcVaugps53THCeiWA8SguxxpSp3gKPiuYfSWopkLQ4hw==",
-      "dev": true,
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/helper-module-imports": {
-      "version": "7.27.1",
-      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.27.1.tgz",
-      "integrity": "sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==",
-      "dev": true,
-      "dependencies": {
-        "@babel/traverse": "^7.27.1",
-        "@babel/types": "^7.27.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/helper-module-transforms": {
-      "version": "7.28.3",
-      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.28.3.tgz",
-      "integrity": "sha512-gytXUbs8k2sXS9PnQptz5o0QnpLL51SwASIORY6XaBKF88nsOT0Zw9szLqlSGQDP/4TljBAD5y98p2U1fqkdsw==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-module-imports": "^7.27.1",
-        "@babel/helper-validator-identifier": "^7.27.1",
-        "@babel/traverse": "^7.28.3"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0"
-      }
-    },
-    "node_modules/@babel/helper-plugin-utils": {
-      "version": "7.27.1",
-      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.27.1.tgz",
-      "integrity": "sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==",
-      "dev": true,
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/helper-string-parser": {
-      "version": "7.27.1",
-      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz",
-      "integrity": "sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==",
-      "dev": true,
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/helper-validator-identifier": {
-      "version": "7.27.1",
-      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz",
-      "integrity": "sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==",
-      "dev": true,
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/helper-validator-option": {
-      "version": "7.27.1",
-      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.27.1.tgz",
-      "integrity": "sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==",
-      "dev": true,
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/helpers": {
-      "version": "7.28.4",
-      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.28.4.tgz",
-      "integrity": "sha512-HFN59MmQXGHVyYadKLVumYsA9dBFun/ldYxipEjzA4196jpLZd8UjEEBLkbEkvfYreDqJhZxYAWFPtrfhNpj4w==",
-      "dev": true,
-      "dependencies": {
-        "@babel/template": "^7.27.2",
-        "@babel/types": "^7.28.4"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/parser": {
-      "version": "7.28.4",
-      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.28.4.tgz",
-      "integrity": "sha512-yZbBqeM6TkpP9du/I2pUZnJsRMGGvOuIrhjzC1AwHwW+6he4mni6Bp/m8ijn0iOuZuPI2BfkCoSRunpyjnrQKg==",
-      "dev": true,
-      "dependencies": {
-        "@babel/types": "^7.28.4"
-      },
-      "bin": {
-        "parser": "bin/babel-parser.js"
-      },
-      "engines": {
-        "node": ">=6.0.0"
-      }
-    },
-    "node_modules/@babel/plugin-syntax-async-generators": {
-      "version": "7.8.4",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz",
-      "integrity": "sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.8.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/plugin-syntax-bigint": {
-      "version": "7.8.3",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-bigint/-/plugin-syntax-bigint-7.8.3.tgz",
-      "integrity": "sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfntVwe/N6dCXpU+zL3Npg==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.8.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/plugin-syntax-class-properties": {
-      "version": "7.12.13",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.12.13.tgz",
-      "integrity": "sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.12.13"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/plugin-syntax-class-static-block": {
-      "version": "7.14.5",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-class-static-block/-/plugin-syntax-class-static-block-7.14.5.tgz",
-      "integrity": "sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.14.5"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/plugin-syntax-import-attributes": {
-      "version": "7.27.1",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-attributes/-/plugin-syntax-import-attributes-7.27.1.tgz",
-      "integrity": "sha512-oFT0FrKHgF53f4vOsZGi2Hh3I35PfSmVs4IBFLFj4dnafP+hIWDLg3VyKmUHfLoLHlyxY4C7DGtmHuJgn+IGww==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.27.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/plugin-syntax-import-meta": {
-      "version": "7.10.4",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-meta/-/plugin-syntax-import-meta-7.10.4.tgz",
-      "integrity": "sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.10.4"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/plugin-syntax-json-strings": {
-      "version": "7.8.3",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz",
-      "integrity": "sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.8.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/plugin-syntax-jsx": {
-      "version": "7.27.1",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.27.1.tgz",
-      "integrity": "sha512-y8YTNIeKoyhGd9O0Jiyzyyqk8gdjnumGTQPsz0xOZOQ2RmkVJeZ1vmmfIvFEKqucBG6axJGBZDE/7iI5suUI/w==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.27.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/plugin-syntax-logical-assignment-operators": {
-      "version": "7.10.4",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz",
-      "integrity": "sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.10.4"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/plugin-syntax-nullish-coalescing-operator": {
-      "version": "7.8.3",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz",
-      "integrity": "sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.8.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/plugin-syntax-numeric-separator": {
-      "version": "7.10.4",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.10.4.tgz",
-      "integrity": "sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.10.4"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/plugin-syntax-object-rest-spread": {
-      "version": "7.8.3",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz",
-      "integrity": "sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.8.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/plugin-syntax-optional-catch-binding": {
-      "version": "7.8.3",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz",
-      "integrity": "sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.8.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/plugin-syntax-optional-chaining": {
-      "version": "7.8.3",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz",
-      "integrity": "sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.8.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/plugin-syntax-private-property-in-object": {
-      "version": "7.14.5",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-private-property-in-object/-/plugin-syntax-private-property-in-object-7.14.5.tgz",
-      "integrity": "sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.14.5"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/plugin-syntax-top-level-await": {
-      "version": "7.14.5",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.14.5.tgz",
-      "integrity": "sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.14.5"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/plugin-syntax-typescript": {
-      "version": "7.27.1",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.27.1.tgz",
-      "integrity": "sha512-xfYCBMxveHrRMnAWl1ZlPXOZjzkN82THFvLhQhFXFt81Z5HnN+EtUkZhv/zcKpmT3fzmWZB0ywiBrbC3vogbwQ==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.27.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0-0"
-      }
-    },
-    "node_modules/@babel/runtime": {
-      "version": "7.28.4",
-      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.28.4.tgz",
-      "integrity": "sha512-Q/N6JNWvIvPnLDvjlE1OUBLPQHH6l3CltCEsHIujp45zQUSSh8K+gHnaEX45yAT1nyngnINhvWtzN+Nb9D8RAQ==",
-      "dev": true,
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/template": {
-      "version": "7.27.2",
-      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz",
-      "integrity": "sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==",
-      "dev": true,
-      "dependencies": {
-        "@babel/code-frame": "^7.27.1",
-        "@babel/parser": "^7.27.2",
-        "@babel/types": "^7.27.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/traverse": {
-      "version": "7.28.4",
-      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.28.4.tgz",
-      "integrity": "sha512-YEzuboP2qvQavAcjgQNVgsvHIDv6ZpwXvcvjmyySP2DIMuByS/6ioU5G9pYrWHM6T2YDfc7xga9iNzYOs12CFQ==",
-      "dev": true,
-      "dependencies": {
-        "@babel/code-frame": "^7.27.1",
-        "@babel/generator": "^7.28.3",
-        "@babel/helper-globals": "^7.28.0",
-        "@babel/parser": "^7.28.4",
-        "@babel/template": "^7.27.2",
-        "@babel/types": "^7.28.4",
-        "debug": "^4.3.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@babel/types": {
-      "version": "7.28.4",
-      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.28.4.tgz",
-      "integrity": "sha512-bkFqkLhh3pMBUQQkpVgWDWq/lqzc2678eUyDlTBhRqhCHFguYYGM0Efga7tYk4TogG/3x0EEl66/OQ+WGbWB/Q==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-string-parser": "^7.27.1",
-        "@babel/helper-validator-identifier": "^7.27.1"
-      },
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/@bcoe/v8-coverage": {
-      "version": "0.2.3",
-      "resolved": "https://registry.npmjs.org/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz",
-      "integrity": "sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==",
-      "dev": true
-    },
-    "node_modules/@csstools/color-helpers": {
-      "version": "5.1.0",
-      "resolved": "https://registry.npmjs.org/@csstools/color-helpers/-/color-helpers-5.1.0.tgz",
-      "integrity": "sha512-S11EXWJyy0Mz5SYvRmY8nJYTFFd1LCNV+7cXyAgQtOOuzb4EsgfqDufL+9esx72/eLhsRdGZwaldu/h+E4t4BA==",
-      "dev": true,
-      "funding": [
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/csstools"
-        },
-        {
-          "type": "opencollective",
-          "url": "https://opencollective.com/csstools"
-        }
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@csstools/css-calc": {
-      "version": "2.1.4",
-      "resolved": "https://registry.npmjs.org/@csstools/css-calc/-/css-calc-2.1.4.tgz",
-      "integrity": "sha512-3N8oaj+0juUw/1H3YwmDDJXCgTB1gKU6Hc/bB502u9zR0q2vd786XJH9QfrKIEgFlZmhZiq6epXl4rHqhzsIgQ==",
-      "dev": true,
-      "funding": [
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/csstools"
-        },
-        {
-          "type": "opencollective",
-          "url": "https://opencollective.com/csstools"
-        }
-      ],
-      "engines": {
-        "node": ">=18"
-      },
-      "peerDependencies": {
-        "@csstools/css-parser-algorithms": "^3.0.5",
-        "@csstools/css-tokenizer": "^3.0.4"
-      }
-    },
-    "node_modules/@csstools/css-color-parser": {
-      "version": "3.1.0",
-      "resolved": "https://registry.npmjs.org/@csstools/css-color-parser/-/css-color-parser-3.1.0.tgz",
-      "integrity": "sha512-nbtKwh3a6xNVIp/VRuXV64yTKnb1IjTAEEh3irzS+HkKjAOYLTGNb9pmVNntZ8iVBHcWDA2Dof0QtPgFI1BaTA==",
-      "dev": true,
-      "funding": [
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/csstools"
-        },
-        {
-          "type": "opencollective",
-          "url": "https://opencollective.com/csstools"
-        }
-      ],
-      "dependencies": {
-        "@csstools/color-helpers": "^5.1.0",
-        "@csstools/css-calc": "^2.1.4"
-      },
-      "engines": {
-        "node": ">=18"
-      },
-      "peerDependencies": {
-        "@csstools/css-parser-algorithms": "^3.0.5",
-        "@csstools/css-tokenizer": "^3.0.4"
-      }
-    },
-    "node_modules/@csstools/css-parser-algorithms": {
-      "version": "3.0.5",
-      "resolved": "https://registry.npmjs.org/@csstools/css-parser-algorithms/-/css-parser-algorithms-3.0.5.tgz",
-      "integrity": "sha512-DaDeUkXZKjdGhgYaHNJTV9pV7Y9B3b644jCLs9Upc3VeNGg6LWARAT6O+Q+/COo+2gg/bM5rhpMAtf70WqfBdQ==",
-      "dev": true,
-      "funding": [
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/csstools"
-        },
-        {
-          "type": "opencollective",
-          "url": "https://opencollective.com/csstools"
-        }
-      ],
-      "engines": {
-        "node": ">=18"
-      },
-      "peerDependencies": {
-        "@csstools/css-tokenizer": "^3.0.4"
-      }
-    },
-    "node_modules/@csstools/css-tokenizer": {
-      "version": "3.0.4",
-      "resolved": "https://registry.npmjs.org/@csstools/css-tokenizer/-/css-tokenizer-3.0.4.tgz",
-      "integrity": "sha512-Vd/9EVDiu6PPJt9yAh6roZP6El1xHrdvIVGjyBsHR0RYwNHgL7FJPyIIW4fANJNG6FtyZfvlRPpFI4ZM/lubvw==",
-      "dev": true,
-      "funding": [
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/csstools"
-        },
-        {
-          "type": "opencollective",
-          "url": "https://opencollective.com/csstools"
-        }
-      ],
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@emnapi/core": {
-      "version": "1.5.0",
-      "resolved": "https://registry.npmjs.org/@emnapi/core/-/core-1.5.0.tgz",
-      "integrity": "sha512-sbP8GzB1WDzacS8fgNPpHlp6C9VZe+SJP3F90W9rLemaQj2PzIuTEl1qDOYQf58YIpyjViI24y9aPWCjEzY2cg==",
-      "dev": true,
-      "optional": true,
-      "dependencies": {
-        "@emnapi/wasi-threads": "1.1.0",
-        "tslib": "^2.4.0"
-      }
-    },
-    "node_modules/@emnapi/runtime": {
-      "version": "1.5.0",
-      "resolved": "https://registry.npmjs.org/@emnapi/runtime/-/runtime-1.5.0.tgz",
-      "integrity": "sha512-97/BJ3iXHww3djw6hYIfErCZFee7qCtrneuLa20UXFCOTCfBM2cvQHjWJ2EG0s0MtdNwInarqCTz35i4wWXHsQ==",
-      "dev": true,
-      "optional": true,
-      "dependencies": {
-        "tslib": "^2.4.0"
-      }
-    },
-    "node_modules/@emnapi/wasi-threads": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/@emnapi/wasi-threads/-/wasi-threads-1.1.0.tgz",
-      "integrity": "sha512-WI0DdZ8xFSbgMjR1sFsKABJ/C5OnRrjT06JXbZKexJGrDuPTzZdDYfFlsgcCXCyf+suG5QU2e/y1Wo2V/OapLQ==",
-      "dev": true,
-      "optional": true,
-      "dependencies": {
-        "tslib": "^2.4.0"
-      }
-    },
-    "node_modules/@isaacs/cliui": {
-      "version": "8.0.2",
-      "resolved": "https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz",
-      "integrity": "sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==",
-      "dev": true,
-      "dependencies": {
-        "string-width": "^5.1.2",
-        "string-width-cjs": "npm:string-width@^4.2.0",
-        "strip-ansi": "^7.0.1",
-        "strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
-        "wrap-ansi": "^8.1.0",
-        "wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0"
-      },
-      "engines": {
-        "node": ">=12"
-      }
-    },
-    "node_modules/@istanbuljs/load-nyc-config": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/@istanbuljs/load-nyc-config/-/load-nyc-config-1.1.0.tgz",
-      "integrity": "sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==",
-      "dev": true,
-      "dependencies": {
-        "camelcase": "^5.3.1",
-        "find-up": "^4.1.0",
-        "get-package-type": "^0.1.0",
-        "js-yaml": "^3.13.1",
-        "resolve-from": "^5.0.0"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/@istanbuljs/schema": {
-      "version": "0.1.3",
-      "resolved": "https://registry.npmjs.org/@istanbuljs/schema/-/schema-0.1.3.tgz",
-      "integrity": "sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==",
-      "dev": true,
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/@jest/console": {
-      "version": "30.1.2",
-      "resolved": "https://registry.npmjs.org/@jest/console/-/console-30.1.2.tgz",
-      "integrity": "sha512-BGMAxj8VRmoD0MoA/jo9alMXSRoqW8KPeqOfEo1ncxnRLatTBCpRoOwlwlEMdudp68Q6WSGwYrrLtTGOh8fLzw==",
-      "dev": true,
-      "dependencies": {
-        "@jest/types": "30.0.5",
-        "@types/node": "*",
-        "chalk": "^4.1.2",
-        "jest-message-util": "30.1.0",
-        "jest-util": "30.0.5",
-        "slash": "^3.0.0"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/@jest/core": {
-      "version": "30.1.3",
-      "resolved": "https://registry.npmjs.org/@jest/core/-/core-30.1.3.tgz",
-      "integrity": "sha512-LIQz7NEDDO1+eyOA2ZmkiAyYvZuo6s1UxD/e2IHldR6D7UYogVq3arTmli07MkENLq6/3JEQjp0mA8rrHHJ8KQ==",
-      "dev": true,
-      "dependencies": {
-        "@jest/console": "30.1.2",
-        "@jest/pattern": "30.0.1",
-        "@jest/reporters": "30.1.3",
-        "@jest/test-result": "30.1.3",
-        "@jest/transform": "30.1.2",
-        "@jest/types": "30.0.5",
-        "@types/node": "*",
-        "ansi-escapes": "^4.3.2",
-        "chalk": "^4.1.2",
-        "ci-info": "^4.2.0",
-        "exit-x": "^0.2.2",
-        "graceful-fs": "^4.2.11",
-        "jest-changed-files": "30.0.5",
-        "jest-config": "30.1.3",
-        "jest-haste-map": "30.1.0",
-        "jest-message-util": "30.1.0",
-        "jest-regex-util": "30.0.1",
-        "jest-resolve": "30.1.3",
-        "jest-resolve-dependencies": "30.1.3",
-        "jest-runner": "30.1.3",
-        "jest-runtime": "30.1.3",
-        "jest-snapshot": "30.1.2",
-        "jest-util": "30.0.5",
-        "jest-validate": "30.1.0",
-        "jest-watcher": "30.1.3",
-        "micromatch": "^4.0.8",
-        "pretty-format": "30.0.5",
-        "slash": "^3.0.0"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      },
-      "peerDependencies": {
-        "node-notifier": "^8.0.1 || ^9.0.0 || ^10.0.0"
-      },
-      "peerDependenciesMeta": {
-        "node-notifier": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/@jest/core/node_modules/ansi-styles": {
-      "version": "5.2.0",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
-      "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
-      "dev": true,
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
-      }
-    },
-    "node_modules/@jest/core/node_modules/pretty-format": {
-      "version": "30.0.5",
-      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-30.0.5.tgz",
-      "integrity": "sha512-D1tKtYvByrBkFLe2wHJl2bwMJIiT8rW+XA+TiataH79/FszLQMrpGEvzUVkzPau7OCO0Qnrhpe87PqtOAIB8Yw==",
-      "dev": true,
-      "dependencies": {
-        "@jest/schemas": "30.0.5",
-        "ansi-styles": "^5.2.0",
-        "react-is": "^18.3.1"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/@jest/core/node_modules/react-is": {
-      "version": "18.3.1",
-      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz",
-      "integrity": "sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==",
-      "dev": true
-    },
-    "node_modules/@jest/diff-sequences": {
-      "version": "30.0.1",
-      "resolved": "https://registry.npmjs.org/@jest/diff-sequences/-/diff-sequences-30.0.1.tgz",
-      "integrity": "sha512-n5H8QLDJ47QqbCNn5SuFjCRDrOLEZ0h8vAHCK5RL9Ls7Xa8AQLa/YxAc9UjFqoEDM48muwtBGjtMY5cr0PLDCw==",
-      "dev": true,
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/@jest/environment": {
-      "version": "30.1.2",
-      "resolved": "https://registry.npmjs.org/@jest/environment/-/environment-30.1.2.tgz",
-      "integrity": "sha512-N8t1Ytw4/mr9uN28OnVf0SYE2dGhaIxOVYcwsf9IInBKjvofAjbFRvedvBBlyTYk2knbJTiEjEJ2PyyDIBnd9w==",
-      "dev": true,
-      "dependencies": {
-        "@jest/fake-timers": "30.1.2",
-        "@jest/types": "30.0.5",
-        "@types/node": "*",
-        "jest-mock": "30.0.5"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/@jest/environment-jsdom-abstract": {
-      "version": "30.1.2",
-      "resolved": "https://registry.npmjs.org/@jest/environment-jsdom-abstract/-/environment-jsdom-abstract-30.1.2.tgz",
-      "integrity": "sha512-u8kTh/ZBl97GOmnGJLYK/1GuwAruMC4hoP6xuk/kwltmVWsA9u/6fH1/CsPVGt2O+Wn2yEjs8n1B1zZJ62Cx0w==",
-      "dev": true,
-      "dependencies": {
-        "@jest/environment": "30.1.2",
-        "@jest/fake-timers": "30.1.2",
-        "@jest/types": "30.0.5",
-        "@types/jsdom": "^21.1.7",
-        "@types/node": "*",
-        "jest-mock": "30.0.5",
-        "jest-util": "30.0.5"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      },
-      "peerDependencies": {
-        "canvas": "^3.0.0",
-        "jsdom": "*"
-      },
-      "peerDependenciesMeta": {
-        "canvas": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/@jest/expect": {
-      "version": "30.1.2",
-      "resolved": "https://registry.npmjs.org/@jest/expect/-/expect-30.1.2.tgz",
-      "integrity": "sha512-tyaIExOwQRCxPCGNC05lIjWJztDwk2gPDNSDGg1zitXJJ8dC3++G/CRjE5mb2wQsf89+lsgAgqxxNpDLiCViTA==",
-      "dev": true,
-      "dependencies": {
-        "expect": "30.1.2",
-        "jest-snapshot": "30.1.2"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/@jest/expect-utils": {
-      "version": "30.1.2",
-      "resolved": "https://registry.npmjs.org/@jest/expect-utils/-/expect-utils-30.1.2.tgz",
-      "integrity": "sha512-HXy1qT/bfdjCv7iC336ExbqqYtZvljrV8odNdso7dWK9bSeHtLlvwWWC3YSybSPL03Gg5rug6WLCZAZFH72m0A==",
-      "dev": true,
-      "dependencies": {
-        "@jest/get-type": "30.1.0"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/@jest/fake-timers": {
-      "version": "30.1.2",
-      "resolved": "https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-30.1.2.tgz",
-      "integrity": "sha512-Beljfv9AYkr9K+ETX9tvV61rJTY706BhBUtiaepQHeEGfe0DbpvUA5Z3fomwc5Xkhns6NWrcFDZn+72fLieUnA==",
-      "dev": true,
-      "dependencies": {
-        "@jest/types": "30.0.5",
-        "@sinonjs/fake-timers": "^13.0.0",
-        "@types/node": "*",
-        "jest-message-util": "30.1.0",
-        "jest-mock": "30.0.5",
-        "jest-util": "30.0.5"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/@jest/get-type": {
-      "version": "30.1.0",
-      "resolved": "https://registry.npmjs.org/@jest/get-type/-/get-type-30.1.0.tgz",
-      "integrity": "sha512-eMbZE2hUnx1WV0pmURZY9XoXPkUYjpc55mb0CrhtdWLtzMQPFvu/rZkTLZFTsdaVQa+Tr4eWAteqcUzoawq/uA==",
-      "dev": true,
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/@jest/globals": {
-      "version": "30.1.2",
-      "resolved": "https://registry.npmjs.org/@jest/globals/-/globals-30.1.2.tgz",
-      "integrity": "sha512-teNTPZ8yZe3ahbYnvnVRDeOjr+3pu2uiAtNtrEsiMjVPPj+cXd5E/fr8BL7v/T7F31vYdEHrI5cC/2OoO/vM9A==",
-      "dev": true,
-      "dependencies": {
-        "@jest/environment": "30.1.2",
-        "@jest/expect": "30.1.2",
-        "@jest/types": "30.0.5",
-        "jest-mock": "30.0.5"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/@jest/pattern": {
-      "version": "30.0.1",
-      "resolved": "https://registry.npmjs.org/@jest/pattern/-/pattern-30.0.1.tgz",
-      "integrity": "sha512-gWp7NfQW27LaBQz3TITS8L7ZCQ0TLvtmI//4OwlQRx4rnWxcPNIYjxZpDcN4+UlGxgm3jS5QPz8IPTCkb59wZA==",
-      "dev": true,
-      "dependencies": {
-        "@types/node": "*",
-        "jest-regex-util": "30.0.1"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/@jest/reporters": {
-      "version": "30.1.3",
-      "resolved": "https://registry.npmjs.org/@jest/reporters/-/reporters-30.1.3.tgz",
-      "integrity": "sha512-VWEQmJWfXMOrzdFEOyGjUEOuVXllgZsoPtEHZzfdNz18RmzJ5nlR6kp8hDdY8dDS1yGOXAY7DHT+AOHIPSBV0w==",
-      "dev": true,
-      "dependencies": {
-        "@bcoe/v8-coverage": "^0.2.3",
-        "@jest/console": "30.1.2",
-        "@jest/test-result": "30.1.3",
-        "@jest/transform": "30.1.2",
-        "@jest/types": "30.0.5",
-        "@jridgewell/trace-mapping": "^0.3.25",
-        "@types/node": "*",
-        "chalk": "^4.1.2",
-        "collect-v8-coverage": "^1.0.2",
-        "exit-x": "^0.2.2",
-        "glob": "^10.3.10",
-        "graceful-fs": "^4.2.11",
-        "istanbul-lib-coverage": "^3.0.0",
-        "istanbul-lib-instrument": "^6.0.0",
-        "istanbul-lib-report": "^3.0.0",
-        "istanbul-lib-source-maps": "^5.0.0",
-        "istanbul-reports": "^3.1.3",
-        "jest-message-util": "30.1.0",
-        "jest-util": "30.0.5",
-        "jest-worker": "30.1.0",
-        "slash": "^3.0.0",
-        "string-length": "^4.0.2",
-        "v8-to-istanbul": "^9.0.1"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      },
-      "peerDependencies": {
-        "node-notifier": "^8.0.1 || ^9.0.0 || ^10.0.0"
-      },
-      "peerDependenciesMeta": {
-        "node-notifier": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/@jest/schemas": {
-      "version": "30.0.5",
-      "resolved": "https://registry.npmjs.org/@jest/schemas/-/schemas-30.0.5.tgz",
-      "integrity": "sha512-DmdYgtezMkh3cpU8/1uyXakv3tJRcmcXxBOcO0tbaozPwpmh4YMsnWrQm9ZmZMfa5ocbxzbFk6O4bDPEc/iAnA==",
-      "dev": true,
-      "dependencies": {
-        "@sinclair/typebox": "^0.34.0"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/@jest/snapshot-utils": {
-      "version": "30.1.2",
-      "resolved": "https://registry.npmjs.org/@jest/snapshot-utils/-/snapshot-utils-30.1.2.tgz",
-      "integrity": "sha512-vHoMTpimcPSR7OxS2S0V1Cpg8eKDRxucHjoWl5u4RQcnxqQrV3avETiFpl8etn4dqxEGarBeHbIBety/f8mLXw==",
-      "dev": true,
-      "dependencies": {
-        "@jest/types": "30.0.5",
-        "chalk": "^4.1.2",
-        "graceful-fs": "^4.2.11",
-        "natural-compare": "^1.4.0"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/@jest/source-map": {
-      "version": "30.0.1",
-      "resolved": "https://registry.npmjs.org/@jest/source-map/-/source-map-30.0.1.tgz",
-      "integrity": "sha512-MIRWMUUR3sdbP36oyNyhbThLHyJ2eEDClPCiHVbrYAe5g3CHRArIVpBw7cdSB5fr+ofSfIb2Tnsw8iEHL0PYQg==",
-      "dev": true,
-      "dependencies": {
-        "@jridgewell/trace-mapping": "^0.3.25",
-        "callsites": "^3.1.0",
-        "graceful-fs": "^4.2.11"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/@jest/test-result": {
-      "version": "30.1.3",
-      "resolved": "https://registry.npmjs.org/@jest/test-result/-/test-result-30.1.3.tgz",
-      "integrity": "sha512-P9IV8T24D43cNRANPPokn7tZh0FAFnYS2HIfi5vK18CjRkTDR9Y3e1BoEcAJnl4ghZZF4Ecda4M/k41QkvurEQ==",
-      "dev": true,
-      "dependencies": {
-        "@jest/console": "30.1.2",
-        "@jest/types": "30.0.5",
-        "@types/istanbul-lib-coverage": "^2.0.6",
-        "collect-v8-coverage": "^1.0.2"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/@jest/test-sequencer": {
-      "version": "30.1.3",
-      "resolved": "https://registry.npmjs.org/@jest/test-sequencer/-/test-sequencer-30.1.3.tgz",
-      "integrity": "sha512-82J+hzC0qeQIiiZDThh+YUadvshdBswi5nuyXlEmXzrhw5ZQSRHeQ5LpVMD/xc8B3wPePvs6VMzHnntxL+4E3w==",
-      "dev": true,
-      "dependencies": {
-        "@jest/test-result": "30.1.3",
-        "graceful-fs": "^4.2.11",
-        "jest-haste-map": "30.1.0",
-        "slash": "^3.0.0"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/@jest/transform": {
-      "version": "30.1.2",
-      "resolved": "https://registry.npmjs.org/@jest/transform/-/transform-30.1.2.tgz",
-      "integrity": "sha512-UYYFGifSgfjujf1Cbd3iU/IQoSd6uwsj8XHj5DSDf5ERDcWMdJOPTkHWXj4U+Z/uMagyOQZ6Vne8C4nRIrCxqA==",
-      "dev": true,
-      "dependencies": {
-        "@babel/core": "^7.27.4",
-        "@jest/types": "30.0.5",
-        "@jridgewell/trace-mapping": "^0.3.25",
-        "babel-plugin-istanbul": "^7.0.0",
-        "chalk": "^4.1.2",
-        "convert-source-map": "^2.0.0",
-        "fast-json-stable-stringify": "^2.1.0",
-        "graceful-fs": "^4.2.11",
-        "jest-haste-map": "30.1.0",
-        "jest-regex-util": "30.0.1",
-        "jest-util": "30.0.5",
-        "micromatch": "^4.0.8",
-        "pirates": "^4.0.7",
-        "slash": "^3.0.0",
-        "write-file-atomic": "^5.0.1"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/@jest/types": {
-      "version": "30.0.5",
-      "resolved": "https://registry.npmjs.org/@jest/types/-/types-30.0.5.tgz",
-      "integrity": "sha512-aREYa3aku9SSnea4aX6bhKn4bgv3AXkgijoQgbYV3yvbiGt6z+MQ85+6mIhx9DsKW2BuB/cLR/A+tcMThx+KLQ==",
-      "dev": true,
-      "dependencies": {
-        "@jest/pattern": "30.0.1",
-        "@jest/schemas": "30.0.5",
-        "@types/istanbul-lib-coverage": "^2.0.6",
-        "@types/istanbul-reports": "^3.0.4",
-        "@types/node": "*",
-        "@types/yargs": "^17.0.33",
-        "chalk": "^4.1.2"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/@jridgewell/gen-mapping": {
-      "version": "0.3.13",
-      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.13.tgz",
-      "integrity": "sha512-2kkt/7niJ6MgEPxF0bYdQ6etZaA+fQvDcLKckhy1yIQOzaoKjBBjSj63/aLVjYE3qhRt5dvM+uUyfCg6UKCBbA==",
-      "dev": true,
-      "dependencies": {
-        "@jridgewell/sourcemap-codec": "^1.5.0",
-        "@jridgewell/trace-mapping": "^0.3.24"
-      }
-    },
-    "node_modules/@jridgewell/remapping": {
-      "version": "2.3.5",
-      "resolved": "https://registry.npmjs.org/@jridgewell/remapping/-/remapping-2.3.5.tgz",
-      "integrity": "sha512-LI9u/+laYG4Ds1TDKSJW2YPrIlcVYOwi2fUC6xB43lueCjgxV4lffOCZCtYFiH6TNOX+tQKXx97T4IKHbhyHEQ==",
-      "dev": true,
-      "dependencies": {
-        "@jridgewell/gen-mapping": "^0.3.5",
-        "@jridgewell/trace-mapping": "^0.3.24"
-      }
-    },
-    "node_modules/@jridgewell/resolve-uri": {
-      "version": "3.1.2",
-      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
-      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
-      "dev": true,
-      "engines": {
-        "node": ">=6.0.0"
-      }
-    },
-    "node_modules/@jridgewell/sourcemap-codec": {
-      "version": "1.5.5",
-      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.5.tgz",
-      "integrity": "sha512-cYQ9310grqxueWbl+WuIUIaiUaDcj7WOq5fVhEljNVgRfOUhY9fy2zTvfoqWsnebh8Sl70VScFbICvJnLKB0Og==",
-      "dev": true
-    },
-    "node_modules/@jridgewell/trace-mapping": {
-      "version": "0.3.31",
-      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.31.tgz",
-      "integrity": "sha512-zzNR+SdQSDJzc8joaeP8QQoCQr8NuYx2dIIytl1QeBEZHJ9uW6hebsrYgbz8hJwUQao3TWCMtmfV8Nu1twOLAw==",
-      "dev": true,
-      "dependencies": {
-        "@jridgewell/resolve-uri": "^3.1.0",
-        "@jridgewell/sourcemap-codec": "^1.4.14"
-      }
-    },
-    "node_modules/@napi-rs/wasm-runtime": {
-      "version": "0.2.12",
-      "resolved": "https://registry.npmjs.org/@napi-rs/wasm-runtime/-/wasm-runtime-0.2.12.tgz",
-      "integrity": "sha512-ZVWUcfwY4E/yPitQJl481FjFo3K22D6qF0DuFH6Y/nbnE11GY5uguDxZMGXPQ8WQ0128MXQD7TnfHyK4oWoIJQ==",
-      "dev": true,
-      "optional": true,
-      "dependencies": {
-        "@emnapi/core": "^1.4.3",
-        "@emnapi/runtime": "^1.4.3",
-        "@tybys/wasm-util": "^0.10.0"
-      }
-    },
-    "node_modules/@pkgjs/parseargs": {
-      "version": "0.11.0",
-      "resolved": "https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz",
-      "integrity": "sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==",
-      "dev": true,
-      "optional": true,
-      "engines": {
-        "node": ">=14"
-      }
-    },
-    "node_modules/@pkgr/core": {
-      "version": "0.2.9",
-      "resolved": "https://registry.npmjs.org/@pkgr/core/-/core-0.2.9.tgz",
-      "integrity": "sha512-QNqXyfVS2wm9hweSYD2O7F0G06uurj9kZ96TRQE5Y9hU7+tgdZwIkbAKc5Ocy1HxEY2kuDQa6cQ1WRs/O5LFKA==",
-      "dev": true,
-      "engines": {
-        "node": "^12.20.0 || ^14.18.0 || >=16.0.0"
-      },
-      "funding": {
-        "url": "https://opencollective.com/pkgr"
-      }
-    },
-    "node_modules/@sinclair/typebox": {
-      "version": "0.34.41",
-      "resolved": "https://registry.npmjs.org/@sinclair/typebox/-/typebox-0.34.41.tgz",
-      "integrity": "sha512-6gS8pZzSXdyRHTIqoqSVknxolr1kzfy4/CeDnrzsVz8TTIWUbOBr6gnzOmTYJ3eXQNh4IYHIGi5aIL7sOZ2G/g==",
-      "dev": true
-    },
-    "node_modules/@sinonjs/commons": {
-      "version": "3.0.1",
-      "resolved": "https://registry.npmjs.org/@sinonjs/commons/-/commons-3.0.1.tgz",
-      "integrity": "sha512-K3mCHKQ9sVh8o1C9cxkwxaOmXoAMlDxC1mYyHrjqOWEcBjYr76t96zL2zlj5dUGZ3HSw240X1qgH3Mjf1yJWpQ==",
-      "dev": true,
-      "dependencies": {
-        "type-detect": "4.0.8"
-      }
-    },
-    "node_modules/@sinonjs/fake-timers": {
-      "version": "13.0.5",
-      "resolved": "https://registry.npmjs.org/@sinonjs/fake-timers/-/fake-timers-13.0.5.tgz",
-      "integrity": "sha512-36/hTbH2uaWuGVERyC6da9YwGWnzUZXuPro/F2LfsdOsLnCojz/iSH8MxUt/FD2S5XBSVPhmArFUXcpCQ2Hkiw==",
-      "dev": true,
-      "dependencies": {
-        "@sinonjs/commons": "^3.0.1"
-      }
-    },
-    "node_modules/@testing-library/dom": {
-      "version": "10.4.1",
-      "resolved": "https://registry.npmjs.org/@testing-library/dom/-/dom-10.4.1.tgz",
-      "integrity": "sha512-o4PXJQidqJl82ckFaXUeoAW+XysPLauYI43Abki5hABd853iMhitooc6znOnczgbTYmEP6U6/y1ZyKAIsvMKGg==",
-      "dev": true,
-      "peer": true,
-      "dependencies": {
-        "@babel/code-frame": "^7.10.4",
-        "@babel/runtime": "^7.12.5",
-        "@types/aria-query": "^5.0.1",
-        "aria-query": "5.3.0",
-        "dom-accessibility-api": "^0.5.9",
-        "lz-string": "^1.5.0",
-        "picocolors": "1.1.1",
-        "pretty-format": "^27.0.2"
-      },
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/@testing-library/jest-dom": {
-      "version": "6.8.0",
-      "resolved": "https://registry.npmjs.org/@testing-library/jest-dom/-/jest-dom-6.8.0.tgz",
-      "integrity": "sha512-WgXcWzVM6idy5JaftTVC8Vs83NKRmGJz4Hqs4oyOuO2J4r/y79vvKZsb+CaGyCSEbUPI6OsewfPd0G1A0/TUZQ==",
-      "dev": true,
-      "dependencies": {
-        "@adobe/css-tools": "^4.4.0",
-        "aria-query": "^5.0.0",
-        "css.escape": "^1.5.1",
-        "dom-accessibility-api": "^0.6.3",
-        "picocolors": "^1.1.1",
-        "redent": "^3.0.0"
-      },
-      "engines": {
-        "node": ">=14",
-        "npm": ">=6",
-        "yarn": ">=1"
-      }
-    },
-    "node_modules/@testing-library/jest-dom/node_modules/dom-accessibility-api": {
-      "version": "0.6.3",
-      "resolved": "https://registry.npmjs.org/dom-accessibility-api/-/dom-accessibility-api-0.6.3.tgz",
-      "integrity": "sha512-7ZgogeTnjuHbo+ct10G9Ffp0mif17idi0IyWNVA/wcwcm7NPOD/WEHVP3n7n3MhXqxoIYm8d6MuZohYWIZ4T3w==",
-      "dev": true
-    },
-    "node_modules/@testing-library/react": {
-      "version": "16.3.0",
-      "resolved": "https://registry.npmjs.org/@testing-library/react/-/react-16.3.0.tgz",
-      "integrity": "sha512-kFSyxiEDwv1WLl2fgsq6pPBbw5aWKrsY2/noi1Id0TK0UParSF62oFQFGHXIyaG4pp2tEub/Zlel+fjjZILDsw==",
-      "dev": true,
-      "dependencies": {
-        "@babel/runtime": "^7.12.5"
-      },
-      "engines": {
-        "node": ">=18"
-      },
-      "peerDependencies": {
-        "@testing-library/dom": "^10.0.0",
-        "@types/react": "^18.0.0 || ^19.0.0",
-        "@types/react-dom": "^18.0.0 || ^19.0.0",
-        "react": "^18.0.0 || ^19.0.0",
-        "react-dom": "^18.0.0 || ^19.0.0"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        },
-        "@types/react-dom": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/@testing-library/user-event": {
-      "version": "14.6.1",
-      "resolved": "https://registry.npmjs.org/@testing-library/user-event/-/user-event-14.6.1.tgz",
-      "integrity": "sha512-vq7fv0rnt+QTXgPxr5Hjc210p6YKq2kmdziLgnsZGgLJ9e6VAShx1pACLuRjd/AS/sr7phAR58OIIpf0LlmQNw==",
-      "dev": true,
-      "engines": {
-        "node": ">=12",
-        "npm": ">=6"
-      },
-      "peerDependencies": {
-        "@testing-library/dom": ">=7.21.4"
-      }
-    },
-    "node_modules/@tybys/wasm-util": {
-      "version": "0.10.1",
-      "resolved": "https://registry.npmjs.org/@tybys/wasm-util/-/wasm-util-0.10.1.tgz",
-      "integrity": "sha512-9tTaPJLSiejZKx+Bmog4uSubteqTvFrVrURwkmHixBo0G4seD0zUxp98E1DzUBJxLQ3NPwXrGKDiVjwx/DpPsg==",
-      "dev": true,
-      "optional": true,
-      "dependencies": {
-        "tslib": "^2.4.0"
-      }
-    },
-    "node_modules/@types/aria-query": {
-      "version": "5.0.4",
-      "resolved": "https://registry.npmjs.org/@types/aria-query/-/aria-query-5.0.4.tgz",
-      "integrity": "sha512-rfT93uj5s0PRL7EzccGMs3brplhcrghnDoV26NqKhCAS1hVo+WdNsPvE/yb6ilfr5hi2MEk6d5EWJTKdxg8jVw==",
-      "dev": true,
-      "peer": true
-    },
-    "node_modules/@types/babel__core": {
-      "version": "7.20.5",
-      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz",
-      "integrity": "sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==",
-      "dev": true,
-      "dependencies": {
-        "@babel/parser": "^7.20.7",
-        "@babel/types": "^7.20.7",
-        "@types/babel__generator": "*",
-        "@types/babel__template": "*",
-        "@types/babel__traverse": "*"
-      }
-    },
-    "node_modules/@types/babel__generator": {
-      "version": "7.27.0",
-      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.27.0.tgz",
-      "integrity": "sha512-ufFd2Xi92OAVPYsy+P4n7/U7e68fex0+Ee8gSG9KX7eo084CWiQ4sdxktvdl0bOPupXtVJPY19zk6EwWqUQ8lg==",
-      "dev": true,
-      "dependencies": {
-        "@babel/types": "^7.0.0"
-      }
-    },
-    "node_modules/@types/babel__template": {
-      "version": "7.4.4",
-      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.4.tgz",
-      "integrity": "sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==",
-      "dev": true,
-      "dependencies": {
-        "@babel/parser": "^7.1.0",
-        "@babel/types": "^7.0.0"
-      }
-    },
-    "node_modules/@types/babel__traverse": {
-      "version": "7.28.0",
-      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.28.0.tgz",
-      "integrity": "sha512-8PvcXf70gTDZBgt9ptxJ8elBeBjcLOAcOtoO/mPJjtji1+CdGbHgm77om1GrsPxsiE+uXIpNSK64UYaIwQXd4Q==",
-      "dev": true,
-      "dependencies": {
-        "@babel/types": "^7.28.2"
-      }
-    },
-    "node_modules/@types/istanbul-lib-coverage": {
-      "version": "2.0.6",
-      "resolved": "https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.6.tgz",
-      "integrity": "sha512-2QF/t/auWm0lsy8XtKVPG19v3sSOQlJe/YHZgfjb/KBBHOGSV+J2q/S671rcq9uTBrLAXmZpqJiaQbMT+zNU1w==",
-      "dev": true
-    },
-    "node_modules/@types/istanbul-lib-report": {
-      "version": "3.0.3",
-      "resolved": "https://registry.npmjs.org/@types/istanbul-lib-report/-/istanbul-lib-report-3.0.3.tgz",
-      "integrity": "sha512-NQn7AHQnk/RSLOxrBbGyJM/aVQ+pjj5HCgasFxc0K/KhoATfQ/47AyUl15I2yBUpihjmas+a+VJBOqecrFH+uA==",
-      "dev": true,
-      "dependencies": {
-        "@types/istanbul-lib-coverage": "*"
-      }
-    },
-    "node_modules/@types/istanbul-reports": {
-      "version": "3.0.4",
-      "resolved": "https://registry.npmjs.org/@types/istanbul-reports/-/istanbul-reports-3.0.4.tgz",
-      "integrity": "sha512-pk2B1NWalF9toCRu6gjBzR69syFjP4Od8WRAX+0mmf9lAjCRicLOWc+ZrxZHx/0XRjotgkF9t6iaMJ+aXcOdZQ==",
-      "dev": true,
-      "dependencies": {
-        "@types/istanbul-lib-report": "*"
-      }
-    },
-    "node_modules/@types/jest": {
-      "version": "30.0.0",
-      "resolved": "https://registry.npmjs.org/@types/jest/-/jest-30.0.0.tgz",
-      "integrity": "sha512-XTYugzhuwqWjws0CVz8QpM36+T+Dz5mTEBKhNs/esGLnCIlGdRy+Dq78NRjd7ls7r8BC8ZRMOrKlkO1hU0JOwA==",
-      "dev": true,
-      "dependencies": {
-        "expect": "^30.0.0",
-        "pretty-format": "^30.0.0"
-      }
-    },
-    "node_modules/@types/jest/node_modules/ansi-styles": {
-      "version": "5.2.0",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
-      "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
-      "dev": true,
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
-      }
-    },
-    "node_modules/@types/jest/node_modules/pretty-format": {
-      "version": "30.0.5",
-      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-30.0.5.tgz",
-      "integrity": "sha512-D1tKtYvByrBkFLe2wHJl2bwMJIiT8rW+XA+TiataH79/FszLQMrpGEvzUVkzPau7OCO0Qnrhpe87PqtOAIB8Yw==",
-      "dev": true,
-      "dependencies": {
-        "@jest/schemas": "30.0.5",
-        "ansi-styles": "^5.2.0",
-        "react-is": "^18.3.1"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/@types/jest/node_modules/react-is": {
-      "version": "18.3.1",
-      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz",
-      "integrity": "sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==",
-      "dev": true
-    },
-    "node_modules/@types/jsdom": {
-      "version": "21.1.7",
-      "resolved": "https://registry.npmjs.org/@types/jsdom/-/jsdom-21.1.7.tgz",
-      "integrity": "sha512-yOriVnggzrnQ3a9OKOCxaVuSug3w3/SbOj5i7VwXWZEyUNl3bLF9V3MfxGbZKuwqJOQyRfqXyROBB1CoZLFWzA==",
-      "dev": true,
-      "dependencies": {
-        "@types/node": "*",
-        "@types/tough-cookie": "*",
-        "parse5": "^7.0.0"
-      }
-    },
-    "node_modules/@types/node": {
-      "version": "24.3.1",
-      "resolved": "https://registry.npmjs.org/@types/node/-/node-24.3.1.tgz",
-      "integrity": "sha512-3vXmQDXy+woz+gnrTvuvNrPzekOi+Ds0ReMxw0LzBiK3a+1k0kQn9f2NWk+lgD4rJehFUmYy2gMhJ2ZI+7YP9g==",
-      "dev": true,
-      "dependencies": {
-        "undici-types": "~7.10.0"
-      }
-    },
-    "node_modules/@types/react": {
-      "version": "19.1.12",
-      "resolved": "https://registry.npmjs.org/@types/react/-/react-19.1.12.tgz",
-      "integrity": "sha512-cMoR+FoAf/Jyq6+Df2/Z41jISvGZZ2eTlnsaJRptmZ76Caldwy1odD4xTr/gNV9VLj0AWgg/nmkevIyUfIIq5w==",
-      "dev": true,
-      "dependencies": {
-        "csstype": "^3.0.2"
-      }
-    },
-    "node_modules/@types/stack-utils": {
-      "version": "2.0.3",
-      "resolved": "https://registry.npmjs.org/@types/stack-utils/-/stack-utils-2.0.3.tgz",
-      "integrity": "sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==",
-      "dev": true
-    },
-    "node_modules/@types/tough-cookie": {
-      "version": "4.0.5",
-      "resolved": "https://registry.npmjs.org/@types/tough-cookie/-/tough-cookie-4.0.5.tgz",
-      "integrity": "sha512-/Ad8+nIOV7Rl++6f1BdKxFSMgmoqEoYbHRpPcx3JEfv8VRsQe9Z4mCXeJBzxs7mbHY/XOZZuXlRNfhpVPbs6ZA==",
-      "dev": true
-    },
-    "node_modules/@types/yargs": {
-      "version": "17.0.33",
-      "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-17.0.33.tgz",
-      "integrity": "sha512-WpxBCKWPLr4xSsHgz511rFJAM+wS28w2zEO1QDNY5zM/S8ok70NNfztH0xwhqKyaK0OHCbN98LDAZuy1ctxDkA==",
-      "dev": true,
-      "dependencies": {
-        "@types/yargs-parser": "*"
-      }
-    },
-    "node_modules/@types/yargs-parser": {
-      "version": "21.0.3",
-      "resolved": "https://registry.npmjs.org/@types/yargs-parser/-/yargs-parser-21.0.3.tgz",
-      "integrity": "sha512-I4q9QU9MQv4oEOz4tAHJtNz1cwuLxn2F3xcc2iV5WdqLPpUnj30aUuxt1mAxYTG+oe8CZMV/+6rU4S4gRDzqtQ==",
-      "dev": true
-    },
-    "node_modules/@ungap/structured-clone": {
-      "version": "1.3.0",
-      "resolved": "https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.3.0.tgz",
-      "integrity": "sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==",
-      "dev": true
-    },
-    "node_modules/@unrs/resolver-binding-android-arm-eabi": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-android-arm-eabi/-/resolver-binding-android-arm-eabi-1.11.1.tgz",
-      "integrity": "sha512-ppLRUgHVaGRWUx0R0Ut06Mjo9gBaBkg3v/8AxusGLhsIotbBLuRk51rAzqLC8gq6NyyAojEXglNjzf6R948DNw==",
-      "cpu": [
-        "arm"
-      ],
-      "dev": true,
-      "optional": true,
-      "os": [
-        "android"
-      ]
-    },
-    "node_modules/@unrs/resolver-binding-android-arm64": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-android-arm64/-/resolver-binding-android-arm64-1.11.1.tgz",
-      "integrity": "sha512-lCxkVtb4wp1v+EoN+HjIG9cIIzPkX5OtM03pQYkG+U5O/wL53LC4QbIeazgiKqluGeVEeBlZahHalCaBvU1a2g==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "optional": true,
-      "os": [
-        "android"
-      ]
-    },
-    "node_modules/@unrs/resolver-binding-darwin-arm64": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-darwin-arm64/-/resolver-binding-darwin-arm64-1.11.1.tgz",
-      "integrity": "sha512-gPVA1UjRu1Y/IsB/dQEsp2V1pm44Of6+LWvbLc9SDk1c2KhhDRDBUkQCYVWe6f26uJb3fOK8saWMgtX8IrMk3g==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "optional": true,
-      "os": [
-        "darwin"
-      ]
-    },
-    "node_modules/@unrs/resolver-binding-darwin-x64": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-darwin-x64/-/resolver-binding-darwin-x64-1.11.1.tgz",
-      "integrity": "sha512-cFzP7rWKd3lZaCsDze07QX1SC24lO8mPty9vdP+YVa3MGdVgPmFc59317b2ioXtgCMKGiCLxJ4HQs62oz6GfRQ==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "optional": true,
-      "os": [
-        "darwin"
-      ]
-    },
-    "node_modules/@unrs/resolver-binding-freebsd-x64": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-freebsd-x64/-/resolver-binding-freebsd-x64-1.11.1.tgz",
-      "integrity": "sha512-fqtGgak3zX4DCB6PFpsH5+Kmt/8CIi4Bry4rb1ho6Av2QHTREM+47y282Uqiu3ZRF5IQioJQ5qWRV6jduA+iGw==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "optional": true,
-      "os": [
-        "freebsd"
-      ]
-    },
-    "node_modules/@unrs/resolver-binding-linux-arm-gnueabihf": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm-gnueabihf/-/resolver-binding-linux-arm-gnueabihf-1.11.1.tgz",
-      "integrity": "sha512-u92mvlcYtp9MRKmP+ZvMmtPN34+/3lMHlyMj7wXJDeXxuM0Vgzz0+PPJNsro1m3IZPYChIkn944wW8TYgGKFHw==",
-      "cpu": [
-        "arm"
-      ],
-      "dev": true,
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@unrs/resolver-binding-linux-arm-musleabihf": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm-musleabihf/-/resolver-binding-linux-arm-musleabihf-1.11.1.tgz",
-      "integrity": "sha512-cINaoY2z7LVCrfHkIcmvj7osTOtm6VVT16b5oQdS4beibX2SYBwgYLmqhBjA1t51CarSaBuX5YNsWLjsqfW5Cw==",
-      "cpu": [
-        "arm"
-      ],
-      "dev": true,
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@unrs/resolver-binding-linux-arm64-gnu": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm64-gnu/-/resolver-binding-linux-arm64-gnu-1.11.1.tgz",
-      "integrity": "sha512-34gw7PjDGB9JgePJEmhEqBhWvCiiWCuXsL9hYphDF7crW7UgI05gyBAi6MF58uGcMOiOqSJ2ybEeCvHcq0BCmQ==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@unrs/resolver-binding-linux-arm64-musl": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm64-musl/-/resolver-binding-linux-arm64-musl-1.11.1.tgz",
-      "integrity": "sha512-RyMIx6Uf53hhOtJDIamSbTskA99sPHS96wxVE/bJtePJJtpdKGXO1wY90oRdXuYOGOTuqjT8ACccMc4K6QmT3w==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@unrs/resolver-binding-linux-ppc64-gnu": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-ppc64-gnu/-/resolver-binding-linux-ppc64-gnu-1.11.1.tgz",
-      "integrity": "sha512-D8Vae74A4/a+mZH0FbOkFJL9DSK2R6TFPC9M+jCWYia/q2einCubX10pecpDiTmkJVUH+y8K3BZClycD8nCShA==",
-      "cpu": [
-        "ppc64"
-      ],
-      "dev": true,
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@unrs/resolver-binding-linux-riscv64-gnu": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-riscv64-gnu/-/resolver-binding-linux-riscv64-gnu-1.11.1.tgz",
-      "integrity": "sha512-frxL4OrzOWVVsOc96+V3aqTIQl1O2TjgExV4EKgRY09AJ9leZpEg8Ak9phadbuX0BA4k8U5qtvMSQQGGmaJqcQ==",
-      "cpu": [
-        "riscv64"
-      ],
-      "dev": true,
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@unrs/resolver-binding-linux-riscv64-musl": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-riscv64-musl/-/resolver-binding-linux-riscv64-musl-1.11.1.tgz",
-      "integrity": "sha512-mJ5vuDaIZ+l/acv01sHoXfpnyrNKOk/3aDoEdLO/Xtn9HuZlDD6jKxHlkN8ZhWyLJsRBxfv9GYM2utQ1SChKew==",
-      "cpu": [
-        "riscv64"
-      ],
-      "dev": true,
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@unrs/resolver-binding-linux-s390x-gnu": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-s390x-gnu/-/resolver-binding-linux-s390x-gnu-1.11.1.tgz",
-      "integrity": "sha512-kELo8ebBVtb9sA7rMe1Cph4QHreByhaZ2QEADd9NzIQsYNQpt9UkM9iqr2lhGr5afh885d/cB5QeTXSbZHTYPg==",
-      "cpu": [
-        "s390x"
-      ],
-      "dev": true,
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@unrs/resolver-binding-linux-x64-gnu": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-x64-gnu/-/resolver-binding-linux-x64-gnu-1.11.1.tgz",
-      "integrity": "sha512-C3ZAHugKgovV5YvAMsxhq0gtXuwESUKc5MhEtjBpLoHPLYM+iuwSj3lflFwK3DPm68660rZ7G8BMcwSro7hD5w==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@unrs/resolver-binding-linux-x64-musl": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-x64-musl/-/resolver-binding-linux-x64-musl-1.11.1.tgz",
-      "integrity": "sha512-rV0YSoyhK2nZ4vEswT/QwqzqQXw5I6CjoaYMOX0TqBlWhojUf8P94mvI7nuJTeaCkkds3QE4+zS8Ko+GdXuZtA==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "optional": true,
-      "os": [
-        "linux"
-      ]
-    },
-    "node_modules/@unrs/resolver-binding-wasm32-wasi": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-wasm32-wasi/-/resolver-binding-wasm32-wasi-1.11.1.tgz",
-      "integrity": "sha512-5u4RkfxJm+Ng7IWgkzi3qrFOvLvQYnPBmjmZQ8+szTK/b31fQCnleNl1GgEt7nIsZRIf5PLhPwT0WM+q45x/UQ==",
-      "cpu": [
-        "wasm32"
-      ],
-      "dev": true,
-      "optional": true,
-      "dependencies": {
-        "@napi-rs/wasm-runtime": "^0.2.11"
-      },
-      "engines": {
-        "node": ">=14.0.0"
-      }
-    },
-    "node_modules/@unrs/resolver-binding-win32-arm64-msvc": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-win32-arm64-msvc/-/resolver-binding-win32-arm64-msvc-1.11.1.tgz",
-      "integrity": "sha512-nRcz5Il4ln0kMhfL8S3hLkxI85BXs3o8EYoattsJNdsX4YUU89iOkVn7g0VHSRxFuVMdM4Q1jEpIId1Ihim/Uw==",
-      "cpu": [
-        "arm64"
-      ],
-      "dev": true,
-      "optional": true,
-      "os": [
-        "win32"
-      ]
-    },
-    "node_modules/@unrs/resolver-binding-win32-ia32-msvc": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-win32-ia32-msvc/-/resolver-binding-win32-ia32-msvc-1.11.1.tgz",
-      "integrity": "sha512-DCEI6t5i1NmAZp6pFonpD5m7i6aFrpofcp4LA2i8IIq60Jyo28hamKBxNrZcyOwVOZkgsRp9O2sXWBWP8MnvIQ==",
-      "cpu": [
-        "ia32"
-      ],
-      "dev": true,
-      "optional": true,
-      "os": [
-        "win32"
-      ]
-    },
-    "node_modules/@unrs/resolver-binding-win32-x64-msvc": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-win32-x64-msvc/-/resolver-binding-win32-x64-msvc-1.11.1.tgz",
-      "integrity": "sha512-lrW200hZdbfRtztbygyaq/6jP6AKE8qQN2KvPcJ+x7wiD038YtnYtZ82IMNJ69GJibV7bwL3y9FgK+5w/pYt6g==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
-      "optional": true,
-      "os": [
-        "win32"
-      ]
-    },
-    "node_modules/agent-base": {
-      "version": "7.1.4",
-      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-7.1.4.tgz",
-      "integrity": "sha512-MnA+YT8fwfJPgBx3m60MNqakm30XOkyIoH1y6huTQvC0PwZG7ki8NacLBcrPbNoo8vEZy7Jpuk7+jMO+CUovTQ==",
-      "dev": true,
-      "engines": {
-        "node": ">= 14"
-      }
-    },
-    "node_modules/ansi-escapes": {
-      "version": "4.3.2",
-      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz",
-      "integrity": "sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==",
-      "dev": true,
-      "dependencies": {
-        "type-fest": "^0.21.3"
-      },
-      "engines": {
-        "node": ">=8"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/sindresorhus"
-      }
-    },
-    "node_modules/ansi-regex": {
-      "version": "5.0.1",
-      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
-      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
-      "dev": true,
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/ansi-styles": {
-      "version": "4.3.0",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
-      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
-      "dev": true,
-      "dependencies": {
-        "color-convert": "^2.0.1"
-      },
-      "engines": {
-        "node": ">=8"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
-      }
-    },
-    "node_modules/anymatch": {
-      "version": "3.1.3",
-      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
-      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
-      "dev": true,
-      "dependencies": {
-        "normalize-path": "^3.0.0",
-        "picomatch": "^2.0.4"
-      },
-      "engines": {
-        "node": ">= 8"
-      }
-    },
-    "node_modules/argparse": {
-      "version": "1.0.10",
-      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
-      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
-      "dev": true,
-      "dependencies": {
-        "sprintf-js": "~1.0.2"
-      }
-    },
-    "node_modules/aria-query": {
-      "version": "5.3.0",
-      "resolved": "https://registry.npmjs.org/aria-query/-/aria-query-5.3.0.tgz",
-      "integrity": "sha512-b0P0sZPKtyu8HkeRAfCq0IfURZK+SuwMjY1UXGBU27wpAiTwQAIlq56IbIO+ytk/JjS1fMR14ee5WBBfKi5J6A==",
-      "dev": true,
-      "dependencies": {
-        "dequal": "^2.0.3"
-      }
-    },
-    "node_modules/babel-jest": {
-      "version": "30.1.2",
-      "resolved": "https://registry.npmjs.org/babel-jest/-/babel-jest-30.1.2.tgz",
-      "integrity": "sha512-IQCus1rt9kaSh7PQxLYRY5NmkNrNlU2TpabzwV7T2jljnpdHOcmnYYv8QmE04Li4S3a2Lj8/yXyET5pBarPr6g==",
-      "dev": true,
-      "dependencies": {
-        "@jest/transform": "30.1.2",
-        "@types/babel__core": "^7.20.5",
-        "babel-plugin-istanbul": "^7.0.0",
-        "babel-preset-jest": "30.0.1",
-        "chalk": "^4.1.2",
-        "graceful-fs": "^4.2.11",
-        "slash": "^3.0.0"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.11.0"
-      }
-    },
-    "node_modules/babel-plugin-istanbul": {
-      "version": "7.0.1",
-      "resolved": "https://registry.npmjs.org/babel-plugin-istanbul/-/babel-plugin-istanbul-7.0.1.tgz",
-      "integrity": "sha512-D8Z6Qm8jCvVXtIRkBnqNHX0zJ37rQcFJ9u8WOS6tkYOsRdHBzypCstaxWiu5ZIlqQtviRYbgnRLSoCEvjqcqbA==",
-      "dev": true,
-      "dependencies": {
-        "@babel/helper-plugin-utils": "^7.0.0",
-        "@istanbuljs/load-nyc-config": "^1.0.0",
-        "@istanbuljs/schema": "^0.1.3",
-        "istanbul-lib-instrument": "^6.0.2",
-        "test-exclude": "^6.0.0"
-      },
-      "engines": {
-        "node": ">=12"
-      }
-    },
-    "node_modules/babel-plugin-jest-hoist": {
-      "version": "30.0.1",
-      "resolved": "https://registry.npmjs.org/babel-plugin-jest-hoist/-/babel-plugin-jest-hoist-30.0.1.tgz",
-      "integrity": "sha512-zTPME3pI50NsFW8ZBaVIOeAxzEY7XHlmWeXXu9srI+9kNfzCUTy8MFan46xOGZY8NZThMqq+e3qZUKsvXbasnQ==",
-      "dev": true,
-      "dependencies": {
-        "@babel/template": "^7.27.2",
-        "@babel/types": "^7.27.3",
-        "@types/babel__core": "^7.20.5"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/babel-preset-current-node-syntax": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/babel-preset-current-node-syntax/-/babel-preset-current-node-syntax-1.2.0.tgz",
-      "integrity": "sha512-E/VlAEzRrsLEb2+dv8yp3bo4scof3l9nR4lrld+Iy5NyVqgVYUJnDAmunkhPMisRI32Qc4iRiz425d8vM++2fg==",
-      "dev": true,
-      "dependencies": {
-        "@babel/plugin-syntax-async-generators": "^7.8.4",
-        "@babel/plugin-syntax-bigint": "^7.8.3",
-        "@babel/plugin-syntax-class-properties": "^7.12.13",
-        "@babel/plugin-syntax-class-static-block": "^7.14.5",
-        "@babel/plugin-syntax-import-attributes": "^7.24.7",
-        "@babel/plugin-syntax-import-meta": "^7.10.4",
-        "@babel/plugin-syntax-json-strings": "^7.8.3",
-        "@babel/plugin-syntax-logical-assignment-operators": "^7.10.4",
-        "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.3",
-        "@babel/plugin-syntax-numeric-separator": "^7.10.4",
-        "@babel/plugin-syntax-object-rest-spread": "^7.8.3",
-        "@babel/plugin-syntax-optional-catch-binding": "^7.8.3",
-        "@babel/plugin-syntax-optional-chaining": "^7.8.3",
-        "@babel/plugin-syntax-private-property-in-object": "^7.14.5",
-        "@babel/plugin-syntax-top-level-await": "^7.14.5"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.0.0 || ^8.0.0-0"
-      }
-    },
-    "node_modules/babel-preset-jest": {
-      "version": "30.0.1",
-      "resolved": "https://registry.npmjs.org/babel-preset-jest/-/babel-preset-jest-30.0.1.tgz",
-      "integrity": "sha512-+YHejD5iTWI46cZmcc/YtX4gaKBtdqCHCVfuVinizVpbmyjO3zYmeuyFdfA8duRqQZfgCAMlsfmkVbJ+e2MAJw==",
-      "dev": true,
-      "dependencies": {
-        "babel-plugin-jest-hoist": "30.0.1",
-        "babel-preset-current-node-syntax": "^1.1.0"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      },
-      "peerDependencies": {
-        "@babel/core": "^7.11.0"
-      }
-    },
-    "node_modules/balanced-match": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
-      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
-      "dev": true
-    },
-    "node_modules/brace-expansion": {
-      "version": "2.0.2",
-      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
-      "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
-      "dev": true,
-      "dependencies": {
-        "balanced-match": "^1.0.0"
-      }
-    },
-    "node_modules/braces": {
-      "version": "3.0.3",
-      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
-      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
-      "dev": true,
-      "dependencies": {
-        "fill-range": "^7.1.1"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/browser-tabs-lock": {
-      "version": "1.3.0",
-      "resolved": "https://registry.npmjs.org/browser-tabs-lock/-/browser-tabs-lock-1.3.0.tgz",
-      "integrity": "sha512-g6nHaobTiT0eMZ7jh16YpD2kcjAp+PInbiVq3M1x6KKaEIVhT4v9oURNIpZLOZ3LQbQ3XYfNhMAb/9hzNLIWrw==",
-      "hasInstallScript": true,
-      "dependencies": {
-        "lodash": ">=4.17.21"
-      }
-    },
-    "node_modules/browserslist": {
-      "version": "4.25.4",
-      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.25.4.tgz",
-      "integrity": "sha512-4jYpcjabC606xJ3kw2QwGEZKX0Aw7sgQdZCvIK9dhVSPh76BKo+C+btT1RRofH7B+8iNpEbgGNVWiLki5q93yg==",
-      "dev": true,
-      "funding": [
-        {
-          "type": "opencollective",
-          "url": "https://opencollective.com/browserslist"
-        },
-        {
-          "type": "tidelift",
-          "url": "https://tidelift.com/funding/github/npm/browserslist"
-        },
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/ai"
-        }
-      ],
-      "dependencies": {
-        "caniuse-lite": "^1.0.30001737",
-        "electron-to-chromium": "^1.5.211",
-        "node-releases": "^2.0.19",
-        "update-browserslist-db": "^1.1.3"
-      },
-      "bin": {
-        "browserslist": "cli.js"
-      },
-      "engines": {
-        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
-      }
-    },
-    "node_modules/bs-logger": {
-      "version": "0.2.6",
-      "resolved": "https://registry.npmjs.org/bs-logger/-/bs-logger-0.2.6.tgz",
-      "integrity": "sha512-pd8DCoxmbgc7hyPKOvxtqNcjYoOsABPQdcCUjGp3d42VR2CX1ORhk2A87oqqu5R1kk+76nsxZupkmyd+MVtCog==",
-      "dev": true,
-      "dependencies": {
-        "fast-json-stable-stringify": "2.x"
-      },
-      "engines": {
-        "node": ">= 6"
-      }
-    },
-    "node_modules/bser": {
-      "version": "2.1.1",
-      "resolved": "https://registry.npmjs.org/bser/-/bser-2.1.1.tgz",
-      "integrity": "sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==",
-      "dev": true,
-      "dependencies": {
-        "node-int64": "^0.4.0"
-      }
-    },
-    "node_modules/buffer-from": {
-      "version": "1.1.2",
-      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
-      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
-      "dev": true
-    },
-    "node_modules/callsites": {
-      "version": "3.1.0",
-      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
-      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
-      "dev": true,
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/camelcase": {
-      "version": "5.3.1",
-      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
-      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
-      "dev": true,
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/caniuse-lite": {
-      "version": "1.0.30001741",
-      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001741.tgz",
-      "integrity": "sha512-QGUGitqsc8ARjLdgAfxETDhRbJ0REsP6O3I96TAth/mVjh2cYzN2u+3AzPP3aVSm2FehEItaJw1xd+IGBXWeSw==",
-      "dev": true,
-      "funding": [
-        {
-          "type": "opencollective",
-          "url": "https://opencollective.com/browserslist"
-        },
-        {
-          "type": "tidelift",
-          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
-        },
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/ai"
-        }
-      ]
-    },
-    "node_modules/chalk": {
-      "version": "4.1.2",
-      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
-      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
-      "dev": true,
-      "dependencies": {
-        "ansi-styles": "^4.1.0",
-        "supports-color": "^7.1.0"
-      },
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/chalk?sponsor=1"
-      }
-    },
-    "node_modules/char-regex": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/char-regex/-/char-regex-1.0.2.tgz",
-      "integrity": "sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0xyIDU9JMHhyJMZ1jw==",
-      "dev": true,
-      "engines": {
-        "node": ">=10"
-      }
-    },
-    "node_modules/ci-info": {
-      "version": "4.3.0",
-      "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-4.3.0.tgz",
-      "integrity": "sha512-l+2bNRMiQgcfILUi33labAZYIWlH1kWDp+ecNo5iisRKrbm0xcRyCww71/YU0Fkw0mAFpz9bJayXPjey6vkmaQ==",
-      "dev": true,
-      "funding": [
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/sibiraj-s"
-        }
-      ],
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/cjs-module-lexer": {
-      "version": "2.1.0",
-      "resolved": "https://registry.npmjs.org/cjs-module-lexer/-/cjs-module-lexer-2.1.0.tgz",
-      "integrity": "sha512-UX0OwmYRYQQetfrLEZeewIFFI+wSTofC+pMBLNuH3RUuu/xzG1oz84UCEDOSoQlN3fZ4+AzmV50ZYvGqkMh9yA==",
-      "dev": true
-    },
-    "node_modules/cliui": {
-      "version": "8.0.1",
-      "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
-      "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
-      "dev": true,
-      "dependencies": {
-        "string-width": "^4.2.0",
-        "strip-ansi": "^6.0.1",
-        "wrap-ansi": "^7.0.0"
-      },
-      "engines": {
-        "node": ">=12"
-      }
-    },
-    "node_modules/cliui/node_modules/emoji-regex": {
-      "version": "8.0.0",
-      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
-      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
-      "dev": true
-    },
-    "node_modules/cliui/node_modules/string-width": {
-      "version": "4.2.3",
-      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
-      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
-      "dev": true,
-      "dependencies": {
-        "emoji-regex": "^8.0.0",
-        "is-fullwidth-code-point": "^3.0.0",
-        "strip-ansi": "^6.0.1"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/cliui/node_modules/strip-ansi": {
-      "version": "6.0.1",
-      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
-      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
-      "dev": true,
-      "dependencies": {
-        "ansi-regex": "^5.0.1"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/cliui/node_modules/wrap-ansi": {
-      "version": "7.0.0",
-      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
-      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
-      "dev": true,
-      "dependencies": {
-        "ansi-styles": "^4.0.0",
-        "string-width": "^4.1.0",
-        "strip-ansi": "^6.0.0"
-      },
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
-      }
-    },
-    "node_modules/co": {
-      "version": "4.6.0",
-      "resolved": "https://registry.npmjs.org/co/-/co-4.6.0.tgz",
-      "integrity": "sha512-QVb0dM5HvG+uaxitm8wONl7jltx8dqhfU33DcqtOZcLSVIKSDDLDi7+0LbAKiyI8hD9u42m2YxXSkMGWThaecQ==",
-      "dev": true,
-      "engines": {
-        "iojs": ">= 1.0.0",
-        "node": ">= 0.12.0"
-      }
-    },
-    "node_modules/collect-v8-coverage": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/collect-v8-coverage/-/collect-v8-coverage-1.0.2.tgz",
-      "integrity": "sha512-lHl4d5/ONEbLlJvaJNtsF/Lz+WvB07u2ycqTYbdrq7UypDXailES4valYb2eWiJFxZlVmpGekfqoxQhzyFdT4Q==",
-      "dev": true
-    },
-    "node_modules/color-convert": {
-      "version": "2.0.1",
-      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
-      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
-      "dev": true,
-      "dependencies": {
-        "color-name": "~1.1.4"
-      },
-      "engines": {
-        "node": ">=7.0.0"
-      }
-    },
-    "node_modules/color-name": {
-      "version": "1.1.4",
-      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
-      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
-      "dev": true
-    },
-    "node_modules/concat-map": {
-      "version": "0.0.1",
-      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
-      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
-      "dev": true
-    },
-    "node_modules/convert-source-map": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
-      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
-      "dev": true
-    },
-    "node_modules/cross-spawn": {
-      "version": "7.0.6",
-      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
-      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
-      "dev": true,
-      "dependencies": {
-        "path-key": "^3.1.0",
-        "shebang-command": "^2.0.0",
-        "which": "^2.0.1"
-      },
-      "engines": {
-        "node": ">= 8"
-      }
-    },
-    "node_modules/css.escape": {
-      "version": "1.5.1",
-      "resolved": "https://registry.npmjs.org/css.escape/-/css.escape-1.5.1.tgz",
-      "integrity": "sha512-YUifsXXuknHlUsmlgyY0PKzgPOr7/FjCePfHNt0jxm83wHZi44VDMQ7/fGNkjY3/jV1MC+1CmZbaHzugyeRtpg==",
-      "dev": true
-    },
-    "node_modules/cssstyle": {
-      "version": "4.6.0",
-      "resolved": "https://registry.npmjs.org/cssstyle/-/cssstyle-4.6.0.tgz",
-      "integrity": "sha512-2z+rWdzbbSZv6/rhtvzvqeZQHrBaqgogqt85sqFNbabZOuFbCVFb8kPeEtZjiKkbrm395irpNKiYeFeLiQnFPg==",
-      "dev": true,
-      "dependencies": {
-        "@asamuzakjp/css-color": "^3.2.0",
-        "rrweb-cssom": "^0.8.0"
-      },
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/csstype": {
-      "version": "3.1.3",
-      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
-      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
-      "dev": true
-    },
-    "node_modules/data-urls": {
-      "version": "5.0.0",
-      "resolved": "https://registry.npmjs.org/data-urls/-/data-urls-5.0.0.tgz",
-      "integrity": "sha512-ZYP5VBHshaDAiVZxjbRVcFJpc+4xGgT0bK3vzy1HLN8jTO975HEbuYzZJcHoQEY5K1a0z8YayJkyVETa08eNTg==",
-      "dev": true,
-      "dependencies": {
-        "whatwg-mimetype": "^4.0.0",
-        "whatwg-url": "^14.0.0"
-      },
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/debug": {
-      "version": "4.4.1",
-      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
-      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
-      "dev": true,
-      "dependencies": {
-        "ms": "^2.1.3"
-      },
-      "engines": {
-        "node": ">=6.0"
-      },
-      "peerDependenciesMeta": {
-        "supports-color": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/decimal.js": {
-      "version": "10.6.0",
-      "resolved": "https://registry.npmjs.org/decimal.js/-/decimal.js-10.6.0.tgz",
-      "integrity": "sha512-YpgQiITW3JXGntzdUmyUR1V812Hn8T1YVXhCu+wO3OpS4eU9l4YdD3qjyiKdV6mvV29zapkMeD390UVEf2lkUg==",
-      "dev": true
-    },
-    "node_modules/dedent": {
-      "version": "1.7.0",
-      "resolved": "https://registry.npmjs.org/dedent/-/dedent-1.7.0.tgz",
-      "integrity": "sha512-HGFtf8yhuhGhqO07SV79tRp+br4MnbdjeVxotpn1QBl30pcLLCQjX5b2295ll0fv8RKDKsmWYrl05usHM9CewQ==",
-      "dev": true,
-      "peerDependencies": {
-        "babel-plugin-macros": "^3.1.0"
-      },
-      "peerDependenciesMeta": {
-        "babel-plugin-macros": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/deepmerge": {
-      "version": "4.3.1",
-      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz",
-      "integrity": "sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==",
-      "dev": true,
-      "engines": {
-        "node": ">=0.10.0"
-      }
-    },
-    "node_modules/dequal": {
-      "version": "2.0.3",
-      "resolved": "https://registry.npmjs.org/dequal/-/dequal-2.0.3.tgz",
-      "integrity": "sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==",
-      "dev": true,
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/detect-newline": {
-      "version": "3.1.0",
-      "resolved": "https://registry.npmjs.org/detect-newline/-/detect-newline-3.1.0.tgz",
-      "integrity": "sha512-TLz+x/vEXm/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EBD7uFI5LfEgmMOc54DsA==",
-      "dev": true,
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/dom-accessibility-api": {
-      "version": "0.5.16",
-      "resolved": "https://registry.npmjs.org/dom-accessibility-api/-/dom-accessibility-api-0.5.16.tgz",
-      "integrity": "sha512-X7BJ2yElsnOJ30pZF4uIIDfBEVgF4XEBxL9Bxhy6dnrm5hkzqmsWHGTiHqRiITNhMyFLyAiWndIJP7Z1NTteDg==",
-      "dev": true,
-      "peer": true
-    },
-    "node_modules/dpop": {
-      "version": "2.1.1",
-      "resolved": "https://registry.npmjs.org/dpop/-/dpop-2.1.1.tgz",
-      "integrity": "sha512-J0Of2JTiM4h5si0tlbPQ/lkqfZ5wAEVkKYBhkwyyANnPJfWH4VsR5uIkZ+T+OSPIwDYUg1fbd5Mmodd25HjY1w==",
-      "funding": {
-        "url": "https://github.com/sponsors/panva"
-      }
-    },
-    "node_modules/eastasianwidth": {
-      "version": "0.2.0",
-      "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
-      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
-      "dev": true
-    },
-    "node_modules/electron-to-chromium": {
-      "version": "1.5.217",
-      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.217.tgz",
-      "integrity": "sha512-Pludfu5iBxp9XzNl0qq2G87hdD17ZV7h5T4n6rQXDi3nCyloBV3jreE9+8GC6g4X/5yxqVgXEURpcLtM0WS4jA==",
-      "dev": true
-    },
-    "node_modules/emittery": {
-      "version": "0.13.1",
-      "resolved": "https://registry.npmjs.org/emittery/-/emittery-0.13.1.tgz",
-      "integrity": "sha512-DeWwawk6r5yR9jFgnDKYt4sLS0LmHJJi3ZOnb5/JdbYwj3nW+FxQnHIjhBKz8YLC7oRNPVM9NQ47I3CVx34eqQ==",
-      "dev": true,
-      "engines": {
-        "node": ">=12"
-      },
-      "funding": {
-        "url": "https://github.com/sindresorhus/emittery?sponsor=1"
-      }
-    },
-    "node_modules/emoji-regex": {
-      "version": "9.2.2",
-      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
-      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
-      "dev": true
-    },
-    "node_modules/entities": {
-      "version": "6.0.1",
-      "resolved": "https://registry.npmjs.org/entities/-/entities-6.0.1.tgz",
-      "integrity": "sha512-aN97NXWF6AWBTahfVOIrB/NShkzi5H7F9r1s9mD3cDj4Ko5f2qhhVoYMibXF7GlLveb/D2ioWay8lxI97Ven3g==",
-      "dev": true,
-      "engines": {
-        "node": ">=0.12"
-      },
-      "funding": {
-        "url": "https://github.com/fb55/entities?sponsor=1"
-      }
-    },
-    "node_modules/error-ex": {
-      "version": "1.3.2",
-      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
-      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
-      "dev": true,
-      "dependencies": {
-        "is-arrayish": "^0.2.1"
-      }
-    },
-    "node_modules/es-cookie": {
-      "version": "1.3.2",
-      "resolved": "https://registry.npmjs.org/es-cookie/-/es-cookie-1.3.2.tgz",
-      "integrity": "sha512-UTlYYhXGLOy05P/vKVT2Ui7WtC7NiRzGtJyAKKn32g5Gvcjn7KAClLPWlipCtxIus934dFg9o9jXiBL0nP+t9Q=="
-    },
-    "node_modules/escalade": {
-      "version": "3.2.0",
-      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
-      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
-      "dev": true,
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/escape-string-regexp": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz",
-      "integrity": "sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==",
-      "dev": true,
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/esprima": {
-      "version": "4.0.1",
-      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
-      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
-      "dev": true,
-      "bin": {
-        "esparse": "bin/esparse.js",
-        "esvalidate": "bin/esvalidate.js"
-      },
-      "engines": {
-        "node": ">=4"
-      }
-    },
-    "node_modules/execa": {
-      "version": "5.1.1",
-      "resolved": "https://registry.npmjs.org/execa/-/execa-5.1.1.tgz",
-      "integrity": "sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==",
-      "dev": true,
-      "dependencies": {
-        "cross-spawn": "^7.0.3",
-        "get-stream": "^6.0.0",
-        "human-signals": "^2.1.0",
-        "is-stream": "^2.0.0",
-        "merge-stream": "^2.0.0",
-        "npm-run-path": "^4.0.1",
-        "onetime": "^5.1.2",
-        "signal-exit": "^3.0.3",
-        "strip-final-newline": "^2.0.0"
-      },
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/sindresorhus/execa?sponsor=1"
-      }
-    },
-    "node_modules/execa/node_modules/signal-exit": {
-      "version": "3.0.7",
-      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
-      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==",
-      "dev": true
-    },
-    "node_modules/exit-x": {
-      "version": "0.2.2",
-      "resolved": "https://registry.npmjs.org/exit-x/-/exit-x-0.2.2.tgz",
-      "integrity": "sha512-+I6B/IkJc1o/2tiURyz/ivu/O0nKNEArIUB5O7zBrlDVJr22SCLH3xTeEry428LvFhRzIA1g8izguxJ/gbNcVQ==",
-      "dev": true,
-      "engines": {
-        "node": ">= 0.8.0"
-      }
-    },
-    "node_modules/expect": {
-      "version": "30.1.2",
-      "resolved": "https://registry.npmjs.org/expect/-/expect-30.1.2.tgz",
-      "integrity": "sha512-xvHszRavo28ejws8FpemjhwswGj4w/BetHIL8cU49u4sGyXDw2+p3YbeDbj6xzlxi6kWTjIRSTJ+9sNXPnF0Zg==",
-      "dev": true,
-      "dependencies": {
-        "@jest/expect-utils": "30.1.2",
-        "@jest/get-type": "30.1.0",
-        "jest-matcher-utils": "30.1.2",
-        "jest-message-util": "30.1.0",
-        "jest-mock": "30.0.5",
-        "jest-util": "30.0.5"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/fast-json-stable-stringify": {
-      "version": "2.1.0",
-      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
-      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
-      "dev": true
-    },
-    "node_modules/fb-watchman": {
-      "version": "2.0.2",
-      "resolved": "https://registry.npmjs.org/fb-watchman/-/fb-watchman-2.0.2.tgz",
-      "integrity": "sha512-p5161BqbuCaSnB8jIbzQHOlpgsPmK5rJVDfDKO91Axs5NC1uu3HRQm6wt9cd9/+GtQQIO53JdGXXoyDpTAsgYA==",
-      "dev": true,
-      "dependencies": {
-        "bser": "2.1.1"
-      }
-    },
-    "node_modules/fill-range": {
-      "version": "7.1.1",
-      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
-      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
-      "dev": true,
-      "dependencies": {
-        "to-regex-range": "^5.0.1"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/find-up": {
-      "version": "4.1.0",
-      "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
-      "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
-      "dev": true,
-      "dependencies": {
-        "locate-path": "^5.0.0",
-        "path-exists": "^4.0.0"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/foreground-child": {
-      "version": "3.3.1",
-      "resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.1.tgz",
-      "integrity": "sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==",
-      "dev": true,
-      "dependencies": {
-        "cross-spawn": "^7.0.6",
-        "signal-exit": "^4.0.1"
-      },
-      "engines": {
-        "node": ">=14"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/isaacs"
-      }
-    },
-    "node_modules/fs.realpath": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
-      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
-      "dev": true
-    },
-    "node_modules/fsevents": {
-      "version": "2.3.3",
-      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
-      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
-      "dev": true,
-      "hasInstallScript": true,
-      "optional": true,
-      "os": [
-        "darwin"
-      ],
-      "engines": {
-        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
-      }
-    },
-    "node_modules/gensync": {
-      "version": "1.0.0-beta.2",
-      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
-      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
-      "dev": true,
-      "engines": {
-        "node": ">=6.9.0"
-      }
-    },
-    "node_modules/get-caller-file": {
-      "version": "2.0.5",
-      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
-      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
-      "dev": true,
-      "engines": {
-        "node": "6.* || 8.* || >= 10.*"
-      }
-    },
-    "node_modules/get-package-type": {
-      "version": "0.1.0",
-      "resolved": "https://registry.npmjs.org/get-package-type/-/get-package-type-0.1.0.tgz",
-      "integrity": "sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==",
-      "dev": true,
-      "engines": {
-        "node": ">=8.0.0"
-      }
-    },
-    "node_modules/get-stream": {
-      "version": "6.0.1",
-      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz",
-      "integrity": "sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==",
-      "dev": true,
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/sindresorhus"
-      }
-    },
-    "node_modules/glob": {
-      "version": "10.4.5",
-      "resolved": "https://registry.npmjs.org/glob/-/glob-10.4.5.tgz",
-      "integrity": "sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==",
-      "dev": true,
-      "dependencies": {
-        "foreground-child": "^3.1.0",
-        "jackspeak": "^3.1.2",
-        "minimatch": "^9.0.4",
-        "minipass": "^7.1.2",
-        "package-json-from-dist": "^1.0.0",
-        "path-scurry": "^1.11.1"
-      },
-      "bin": {
-        "glob": "dist/esm/bin.mjs"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/isaacs"
-      }
-    },
-    "node_modules/graceful-fs": {
-      "version": "4.2.11",
-      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
-      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
-      "dev": true
-    },
-    "node_modules/handlebars": {
-      "version": "4.7.8",
-      "resolved": "https://registry.npmjs.org/handlebars/-/handlebars-4.7.8.tgz",
-      "integrity": "sha512-vafaFqs8MZkRrSX7sFVUdo3ap/eNiLnb4IakshzvP56X5Nr1iGKAIqdX6tMlm6HcNRIkr6AxO5jFEoJzzpT8aQ==",
-      "dev": true,
-      "dependencies": {
-        "minimist": "^1.2.5",
-        "neo-async": "^2.6.2",
-        "source-map": "^0.6.1",
-        "wordwrap": "^1.0.0"
-      },
-      "bin": {
-        "handlebars": "bin/handlebars"
-      },
-      "engines": {
-        "node": ">=0.4.7"
-      },
-      "optionalDependencies": {
-        "uglify-js": "^3.1.4"
-      }
-    },
-    "node_modules/has-flag": {
-      "version": "4.0.0",
-      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
-      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
-      "dev": true,
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/html-encoding-sniffer": {
-      "version": "4.0.0",
-      "resolved": "https://registry.npmjs.org/html-encoding-sniffer/-/html-encoding-sniffer-4.0.0.tgz",
-      "integrity": "sha512-Y22oTqIU4uuPgEemfz7NDJz6OeKf12Lsu+QC+s3BVpda64lTiMYCyGwg5ki4vFxkMwQdeZDl2adZoqUgdFuTgQ==",
-      "dev": true,
-      "dependencies": {
-        "whatwg-encoding": "^3.1.1"
-      },
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/html-escaper": {
-      "version": "2.0.2",
-      "resolved": "https://registry.npmjs.org/html-escaper/-/html-escaper-2.0.2.tgz",
-      "integrity": "sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==",
-      "dev": true
-    },
-    "node_modules/http-proxy-agent": {
-      "version": "7.0.2",
-      "resolved": "https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-7.0.2.tgz",
-      "integrity": "sha512-T1gkAiYYDWYx3V5Bmyu7HcfcvL7mUrTWiM6yOfa3PIphViJ/gFPbvidQ+veqSOHci/PxBcDabeUNCzpOODJZig==",
-      "dev": true,
-      "dependencies": {
-        "agent-base": "^7.1.0",
-        "debug": "^4.3.4"
-      },
-      "engines": {
-        "node": ">= 14"
-      }
-    },
-    "node_modules/https-proxy-agent": {
-      "version": "7.0.6",
-      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-7.0.6.tgz",
-      "integrity": "sha512-vK9P5/iUfdl95AI+JVyUuIcVtd4ofvtrOr3HNtM2yxC9bnMbEdp3x01OhQNnjb8IJYi38VlTE3mBXwcfvywuSw==",
-      "dev": true,
-      "dependencies": {
-        "agent-base": "^7.1.2",
-        "debug": "4"
-      },
-      "engines": {
-        "node": ">= 14"
-      }
-    },
-    "node_modules/human-signals": {
-      "version": "2.1.0",
-      "resolved": "https://registry.npmjs.org/human-signals/-/human-signals-2.1.0.tgz",
-      "integrity": "sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==",
-      "dev": true,
-      "engines": {
-        "node": ">=10.17.0"
-      }
-    },
-    "node_modules/iconv-lite": {
-      "version": "0.6.3",
-      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
-      "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
-      "dev": true,
-      "dependencies": {
-        "safer-buffer": ">= 2.1.2 < 3.0.0"
-      },
-      "engines": {
-        "node": ">=0.10.0"
-      }
-    },
-    "node_modules/import-local": {
-      "version": "3.2.0",
-      "resolved": "https://registry.npmjs.org/import-local/-/import-local-3.2.0.tgz",
-      "integrity": "sha512-2SPlun1JUPWoM6t3F0dw0FkCF/jWY8kttcY4f599GLTSjh2OCuuhdTkJQsEcZzBqbXZGKMK2OqW1oZsjtf/gQA==",
-      "dev": true,
-      "dependencies": {
-        "pkg-dir": "^4.2.0",
-        "resolve-cwd": "^3.0.0"
-      },
-      "bin": {
-        "import-local-fixture": "fixtures/cli.js"
-      },
-      "engines": {
-        "node": ">=8"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/sindresorhus"
-      }
-    },
-    "node_modules/imurmurhash": {
-      "version": "0.1.4",
-      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
-      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
-      "dev": true,
-      "engines": {
-        "node": ">=0.8.19"
-      }
-    },
-    "node_modules/indent-string": {
-      "version": "4.0.0",
-      "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz",
-      "integrity": "sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==",
-      "dev": true,
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/inflight": {
-      "version": "1.0.6",
-      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
-      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
-      "deprecated": "This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.",
-      "dev": true,
-      "dependencies": {
-        "once": "^1.3.0",
-        "wrappy": "1"
-      }
-    },
-    "node_modules/inherits": {
-      "version": "2.0.4",
-      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
-      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
-      "dev": true
-    },
-    "node_modules/is-arrayish": {
-      "version": "0.2.1",
-      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
-      "integrity": "sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==",
-      "dev": true
-    },
-    "node_modules/is-fullwidth-code-point": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
-      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
-      "dev": true,
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/is-generator-fn": {
-      "version": "2.1.0",
-      "resolved": "https://registry.npmjs.org/is-generator-fn/-/is-generator-fn-2.1.0.tgz",
-      "integrity": "sha512-cTIB4yPYL/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs8uEgHPGuHSe1XsOLSQ==",
-      "dev": true,
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/is-number": {
-      "version": "7.0.0",
-      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
-      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
-      "dev": true,
-      "engines": {
-        "node": ">=0.12.0"
-      }
-    },
-    "node_modules/is-potential-custom-element-name": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/is-potential-custom-element-name/-/is-potential-custom-element-name-1.0.1.tgz",
-      "integrity": "sha512-bCYeRA2rVibKZd+s2625gGnGF/t7DSqDs4dP7CrLA1m7jKWz6pps0LpYLJN8Q64HtmPKJ1hrN3nzPNKFEKOUiQ==",
-      "dev": true
-    },
-    "node_modules/is-stream": {
-      "version": "2.0.1",
-      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz",
-      "integrity": "sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==",
-      "dev": true,
-      "engines": {
-        "node": ">=8"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/sindresorhus"
-      }
-    },
-    "node_modules/isexe": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
-      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
-      "dev": true
-    },
-    "node_modules/istanbul-lib-coverage": {
-      "version": "3.2.2",
-      "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.2.2.tgz",
-      "integrity": "sha512-O8dpsF+r0WV/8MNRKfnmrtCWhuKjxrq2w+jpzBL5UZKTi2LeVWnWOmWRxFlesJONmc+wLAGvKQZEOanko0LFTg==",
-      "dev": true,
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/istanbul-lib-instrument": {
-      "version": "6.0.3",
-      "resolved": "https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-6.0.3.tgz",
-      "integrity": "sha512-Vtgk7L/R2JHyyGW07spoFlB8/lpjiOLTjMdms6AFMraYt3BaJauod/NGrfnVG/y4Ix1JEuMRPDPEj2ua+zz1/Q==",
-      "dev": true,
-      "dependencies": {
-        "@babel/core": "^7.23.9",
-        "@babel/parser": "^7.23.9",
-        "@istanbuljs/schema": "^0.1.3",
-        "istanbul-lib-coverage": "^3.2.0",
-        "semver": "^7.5.4"
-      },
-      "engines": {
-        "node": ">=10"
-      }
-    },
-    "node_modules/istanbul-lib-instrument/node_modules/semver": {
-      "version": "7.7.2",
-      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
-      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
-      "dev": true,
-      "bin": {
-        "semver": "bin/semver.js"
-      },
-      "engines": {
-        "node": ">=10"
-      }
-    },
-    "node_modules/istanbul-lib-report": {
-      "version": "3.0.1",
-      "resolved": "https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-3.0.1.tgz",
-      "integrity": "sha512-GCfE1mtsHGOELCU8e/Z7YWzpmybrx/+dSTfLrvY8qRmaY6zXTKWn6WQIjaAFw069icm6GVMNkgu0NzI4iPZUNw==",
-      "dev": true,
-      "dependencies": {
-        "istanbul-lib-coverage": "^3.0.0",
-        "make-dir": "^4.0.0",
-        "supports-color": "^7.1.0"
-      },
-      "engines": {
-        "node": ">=10"
-      }
-    },
-    "node_modules/istanbul-lib-source-maps": {
-      "version": "5.0.6",
-      "resolved": "https://registry.npmjs.org/istanbul-lib-source-maps/-/istanbul-lib-source-maps-5.0.6.tgz",
-      "integrity": "sha512-yg2d+Em4KizZC5niWhQaIomgf5WlL4vOOjZ5xGCmF8SnPE/mDWWXgvRExdcpCgh9lLRRa1/fSYp2ymmbJ1pI+A==",
-      "dev": true,
-      "dependencies": {
-        "@jridgewell/trace-mapping": "^0.3.23",
-        "debug": "^4.1.1",
-        "istanbul-lib-coverage": "^3.0.0"
-      },
-      "engines": {
-        "node": ">=10"
-      }
-    },
-    "node_modules/istanbul-reports": {
-      "version": "3.2.0",
-      "resolved": "https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-3.2.0.tgz",
-      "integrity": "sha512-HGYWWS/ehqTV3xN10i23tkPkpH46MLCIMFNCaaKNavAXTF1RkqxawEPtnjnGZ6XKSInBKkiOA5BKS+aZiY3AvA==",
-      "dev": true,
-      "dependencies": {
-        "html-escaper": "^2.0.0",
-        "istanbul-lib-report": "^3.0.0"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/jackspeak": {
-      "version": "3.4.3",
-      "resolved": "https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz",
-      "integrity": "sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==",
-      "dev": true,
-      "dependencies": {
-        "@isaacs/cliui": "^8.0.2"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/isaacs"
-      },
-      "optionalDependencies": {
-        "@pkgjs/parseargs": "^0.11.0"
-      }
-    },
-    "node_modules/jest": {
-      "version": "30.1.3",
-      "resolved": "https://registry.npmjs.org/jest/-/jest-30.1.3.tgz",
-      "integrity": "sha512-Ry+p2+NLk6u8Agh5yVqELfUJvRfV51hhVBRIB5yZPY7mU0DGBmOuFG5GebZbMbm86cdQNK0fhJuDX8/1YorISQ==",
-      "dev": true,
-      "dependencies": {
-        "@jest/core": "30.1.3",
-        "@jest/types": "30.0.5",
-        "import-local": "^3.2.0",
-        "jest-cli": "30.1.3"
-      },
-      "bin": {
-        "jest": "bin/jest.js"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      },
-      "peerDependencies": {
-        "node-notifier": "^8.0.1 || ^9.0.0 || ^10.0.0"
-      },
-      "peerDependenciesMeta": {
-        "node-notifier": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/jest-changed-files": {
-      "version": "30.0.5",
-      "resolved": "https://registry.npmjs.org/jest-changed-files/-/jest-changed-files-30.0.5.tgz",
-      "integrity": "sha512-bGl2Ntdx0eAwXuGpdLdVYVr5YQHnSZlQ0y9HVDu565lCUAe9sj6JOtBbMmBBikGIegne9piDDIOeiLVoqTkz4A==",
-      "dev": true,
-      "dependencies": {
-        "execa": "^5.1.1",
-        "jest-util": "30.0.5",
-        "p-limit": "^3.1.0"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-circus": {
-      "version": "30.1.3",
-      "resolved": "https://registry.npmjs.org/jest-circus/-/jest-circus-30.1.3.tgz",
-      "integrity": "sha512-Yf3dnhRON2GJT4RYzM89t/EXIWNxKTpWTL9BfF3+geFetWP4XSvJjiU1vrWplOiUkmq8cHLiwuhz+XuUp9DscA==",
-      "dev": true,
-      "dependencies": {
-        "@jest/environment": "30.1.2",
-        "@jest/expect": "30.1.2",
-        "@jest/test-result": "30.1.3",
-        "@jest/types": "30.0.5",
-        "@types/node": "*",
-        "chalk": "^4.1.2",
-        "co": "^4.6.0",
-        "dedent": "^1.6.0",
-        "is-generator-fn": "^2.1.0",
-        "jest-each": "30.1.0",
-        "jest-matcher-utils": "30.1.2",
-        "jest-message-util": "30.1.0",
-        "jest-runtime": "30.1.3",
-        "jest-snapshot": "30.1.2",
-        "jest-util": "30.0.5",
-        "p-limit": "^3.1.0",
-        "pretty-format": "30.0.5",
-        "pure-rand": "^7.0.0",
-        "slash": "^3.0.0",
-        "stack-utils": "^2.0.6"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-circus/node_modules/ansi-styles": {
-      "version": "5.2.0",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
-      "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
-      "dev": true,
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
-      }
-    },
-    "node_modules/jest-circus/node_modules/pretty-format": {
-      "version": "30.0.5",
-      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-30.0.5.tgz",
-      "integrity": "sha512-D1tKtYvByrBkFLe2wHJl2bwMJIiT8rW+XA+TiataH79/FszLQMrpGEvzUVkzPau7OCO0Qnrhpe87PqtOAIB8Yw==",
-      "dev": true,
-      "dependencies": {
-        "@jest/schemas": "30.0.5",
-        "ansi-styles": "^5.2.0",
-        "react-is": "^18.3.1"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-circus/node_modules/react-is": {
-      "version": "18.3.1",
-      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz",
-      "integrity": "sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==",
-      "dev": true
-    },
-    "node_modules/jest-cli": {
-      "version": "30.1.3",
-      "resolved": "https://registry.npmjs.org/jest-cli/-/jest-cli-30.1.3.tgz",
-      "integrity": "sha512-G8E2Ol3OKch1DEeIBl41NP7OiC6LBhfg25Btv+idcusmoUSpqUkbrneMqbW9lVpI/rCKb/uETidb7DNteheuAQ==",
-      "dev": true,
-      "dependencies": {
-        "@jest/core": "30.1.3",
-        "@jest/test-result": "30.1.3",
-        "@jest/types": "30.0.5",
-        "chalk": "^4.1.2",
-        "exit-x": "^0.2.2",
-        "import-local": "^3.2.0",
-        "jest-config": "30.1.3",
-        "jest-util": "30.0.5",
-        "jest-validate": "30.1.0",
-        "yargs": "^17.7.2"
-      },
-      "bin": {
-        "jest": "bin/jest.js"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      },
-      "peerDependencies": {
-        "node-notifier": "^8.0.1 || ^9.0.0 || ^10.0.0"
-      },
-      "peerDependenciesMeta": {
-        "node-notifier": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/jest-config": {
-      "version": "30.1.3",
-      "resolved": "https://registry.npmjs.org/jest-config/-/jest-config-30.1.3.tgz",
-      "integrity": "sha512-M/f7gqdQEPgZNA181Myz+GXCe8jXcJsGjCMXUzRj22FIXsZOyHNte84e0exntOvdPaeh9tA0w+B8qlP2fAezfw==",
-      "dev": true,
-      "dependencies": {
-        "@babel/core": "^7.27.4",
-        "@jest/get-type": "30.1.0",
-        "@jest/pattern": "30.0.1",
-        "@jest/test-sequencer": "30.1.3",
-        "@jest/types": "30.0.5",
-        "babel-jest": "30.1.2",
-        "chalk": "^4.1.2",
-        "ci-info": "^4.2.0",
-        "deepmerge": "^4.3.1",
-        "glob": "^10.3.10",
-        "graceful-fs": "^4.2.11",
-        "jest-circus": "30.1.3",
-        "jest-docblock": "30.0.1",
-        "jest-environment-node": "30.1.2",
-        "jest-regex-util": "30.0.1",
-        "jest-resolve": "30.1.3",
-        "jest-runner": "30.1.3",
-        "jest-util": "30.0.5",
-        "jest-validate": "30.1.0",
-        "micromatch": "^4.0.8",
-        "parse-json": "^5.2.0",
-        "pretty-format": "30.0.5",
-        "slash": "^3.0.0",
-        "strip-json-comments": "^3.1.1"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      },
-      "peerDependencies": {
-        "@types/node": "*",
-        "esbuild-register": ">=3.4.0",
-        "ts-node": ">=9.0.0"
-      },
-      "peerDependenciesMeta": {
-        "@types/node": {
-          "optional": true
-        },
-        "esbuild-register": {
-          "optional": true
-        },
-        "ts-node": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/jest-config/node_modules/ansi-styles": {
-      "version": "5.2.0",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
-      "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
-      "dev": true,
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
-      }
-    },
-    "node_modules/jest-config/node_modules/pretty-format": {
-      "version": "30.0.5",
-      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-30.0.5.tgz",
-      "integrity": "sha512-D1tKtYvByrBkFLe2wHJl2bwMJIiT8rW+XA+TiataH79/FszLQMrpGEvzUVkzPau7OCO0Qnrhpe87PqtOAIB8Yw==",
-      "dev": true,
-      "dependencies": {
-        "@jest/schemas": "30.0.5",
-        "ansi-styles": "^5.2.0",
-        "react-is": "^18.3.1"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-config/node_modules/react-is": {
-      "version": "18.3.1",
-      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz",
-      "integrity": "sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==",
-      "dev": true
-    },
-    "node_modules/jest-diff": {
-      "version": "30.1.2",
-      "resolved": "https://registry.npmjs.org/jest-diff/-/jest-diff-30.1.2.tgz",
-      "integrity": "sha512-4+prq+9J61mOVXCa4Qp8ZjavdxzrWQXrI80GNxP8f4tkI2syPuPrJgdRPZRrfUTRvIoUwcmNLbqEJy9W800+NQ==",
-      "dev": true,
-      "dependencies": {
-        "@jest/diff-sequences": "30.0.1",
-        "@jest/get-type": "30.1.0",
-        "chalk": "^4.1.2",
-        "pretty-format": "30.0.5"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-diff/node_modules/ansi-styles": {
-      "version": "5.2.0",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
-      "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
-      "dev": true,
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
-      }
-    },
-    "node_modules/jest-diff/node_modules/pretty-format": {
-      "version": "30.0.5",
-      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-30.0.5.tgz",
-      "integrity": "sha512-D1tKtYvByrBkFLe2wHJl2bwMJIiT8rW+XA+TiataH79/FszLQMrpGEvzUVkzPau7OCO0Qnrhpe87PqtOAIB8Yw==",
-      "dev": true,
-      "dependencies": {
-        "@jest/schemas": "30.0.5",
-        "ansi-styles": "^5.2.0",
-        "react-is": "^18.3.1"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-diff/node_modules/react-is": {
-      "version": "18.3.1",
-      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz",
-      "integrity": "sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==",
-      "dev": true
-    },
-    "node_modules/jest-docblock": {
-      "version": "30.0.1",
-      "resolved": "https://registry.npmjs.org/jest-docblock/-/jest-docblock-30.0.1.tgz",
-      "integrity": "sha512-/vF78qn3DYphAaIc3jy4gA7XSAz167n9Bm/wn/1XhTLW7tTBIzXtCJpb/vcmc73NIIeeohCbdL94JasyXUZsGA==",
-      "dev": true,
-      "dependencies": {
-        "detect-newline": "^3.1.0"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-each": {
-      "version": "30.1.0",
-      "resolved": "https://registry.npmjs.org/jest-each/-/jest-each-30.1.0.tgz",
-      "integrity": "sha512-A+9FKzxPluqogNahpCv04UJvcZ9B3HamqpDNWNKDjtxVRYB8xbZLFuCr8JAJFpNp83CA0anGQFlpQna9Me+/tQ==",
-      "dev": true,
-      "dependencies": {
-        "@jest/get-type": "30.1.0",
-        "@jest/types": "30.0.5",
-        "chalk": "^4.1.2",
-        "jest-util": "30.0.5",
-        "pretty-format": "30.0.5"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-each/node_modules/ansi-styles": {
-      "version": "5.2.0",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
-      "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
-      "dev": true,
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
-      }
-    },
-    "node_modules/jest-each/node_modules/pretty-format": {
-      "version": "30.0.5",
-      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-30.0.5.tgz",
-      "integrity": "sha512-D1tKtYvByrBkFLe2wHJl2bwMJIiT8rW+XA+TiataH79/FszLQMrpGEvzUVkzPau7OCO0Qnrhpe87PqtOAIB8Yw==",
-      "dev": true,
-      "dependencies": {
-        "@jest/schemas": "30.0.5",
-        "ansi-styles": "^5.2.0",
-        "react-is": "^18.3.1"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-each/node_modules/react-is": {
-      "version": "18.3.1",
-      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz",
-      "integrity": "sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==",
-      "dev": true
-    },
-    "node_modules/jest-environment-jsdom": {
-      "version": "30.1.2",
-      "resolved": "https://registry.npmjs.org/jest-environment-jsdom/-/jest-environment-jsdom-30.1.2.tgz",
-      "integrity": "sha512-LXsfAh5+mDTuXDONGl1ZLYxtJEaS06GOoxJb2arcJTjIfh1adYg8zLD8f6P0df8VmjvCaMrLmc1PgHUI/YUTbg==",
-      "dev": true,
-      "dependencies": {
-        "@jest/environment": "30.1.2",
-        "@jest/environment-jsdom-abstract": "30.1.2",
-        "@types/jsdom": "^21.1.7",
-        "@types/node": "*",
-        "jsdom": "^26.1.0"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      },
-      "peerDependencies": {
-        "canvas": "^3.0.0"
-      },
-      "peerDependenciesMeta": {
-        "canvas": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/jest-environment-node": {
-      "version": "30.1.2",
-      "resolved": "https://registry.npmjs.org/jest-environment-node/-/jest-environment-node-30.1.2.tgz",
-      "integrity": "sha512-w8qBiXtqGWJ9xpJIA98M0EIoq079GOQRQUyse5qg1plShUCQ0Ek1VTTcczqKrn3f24TFAgFtT+4q3aOXvjbsuA==",
-      "dev": true,
-      "dependencies": {
-        "@jest/environment": "30.1.2",
-        "@jest/fake-timers": "30.1.2",
-        "@jest/types": "30.0.5",
-        "@types/node": "*",
-        "jest-mock": "30.0.5",
-        "jest-util": "30.0.5",
-        "jest-validate": "30.1.0"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-haste-map": {
-      "version": "30.1.0",
-      "resolved": "https://registry.npmjs.org/jest-haste-map/-/jest-haste-map-30.1.0.tgz",
-      "integrity": "sha512-JLeM84kNjpRkggcGpQLsV7B8W4LNUWz7oDNVnY1Vjj22b5/fAb3kk3htiD+4Na8bmJmjJR7rBtS2Rmq/NEcADg==",
-      "dev": true,
-      "dependencies": {
-        "@jest/types": "30.0.5",
-        "@types/node": "*",
-        "anymatch": "^3.1.3",
-        "fb-watchman": "^2.0.2",
-        "graceful-fs": "^4.2.11",
-        "jest-regex-util": "30.0.1",
-        "jest-util": "30.0.5",
-        "jest-worker": "30.1.0",
-        "micromatch": "^4.0.8",
-        "walker": "^1.0.8"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      },
-      "optionalDependencies": {
-        "fsevents": "^2.3.3"
-      }
-    },
-    "node_modules/jest-leak-detector": {
-      "version": "30.1.0",
-      "resolved": "https://registry.npmjs.org/jest-leak-detector/-/jest-leak-detector-30.1.0.tgz",
-      "integrity": "sha512-AoFvJzwxK+4KohH60vRuHaqXfWmeBATFZpzpmzNmYTtmRMiyGPVhkXpBqxUQunw+dQB48bDf4NpUs6ivVbRv1g==",
-      "dev": true,
-      "dependencies": {
-        "@jest/get-type": "30.1.0",
-        "pretty-format": "30.0.5"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-leak-detector/node_modules/ansi-styles": {
-      "version": "5.2.0",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
-      "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
-      "dev": true,
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
-      }
-    },
-    "node_modules/jest-leak-detector/node_modules/pretty-format": {
-      "version": "30.0.5",
-      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-30.0.5.tgz",
-      "integrity": "sha512-D1tKtYvByrBkFLe2wHJl2bwMJIiT8rW+XA+TiataH79/FszLQMrpGEvzUVkzPau7OCO0Qnrhpe87PqtOAIB8Yw==",
-      "dev": true,
-      "dependencies": {
-        "@jest/schemas": "30.0.5",
-        "ansi-styles": "^5.2.0",
-        "react-is": "^18.3.1"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-leak-detector/node_modules/react-is": {
-      "version": "18.3.1",
-      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz",
-      "integrity": "sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==",
-      "dev": true
-    },
-    "node_modules/jest-matcher-utils": {
-      "version": "30.1.2",
-      "resolved": "https://registry.npmjs.org/jest-matcher-utils/-/jest-matcher-utils-30.1.2.tgz",
-      "integrity": "sha512-7ai16hy4rSbDjvPTuUhuV8nyPBd6EX34HkBsBcBX2lENCuAQ0qKCPb/+lt8OSWUa9WWmGYLy41PrEzkwRwoGZQ==",
-      "dev": true,
-      "dependencies": {
-        "@jest/get-type": "30.1.0",
-        "chalk": "^4.1.2",
-        "jest-diff": "30.1.2",
-        "pretty-format": "30.0.5"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-matcher-utils/node_modules/ansi-styles": {
-      "version": "5.2.0",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
-      "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
-      "dev": true,
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
-      }
-    },
-    "node_modules/jest-matcher-utils/node_modules/pretty-format": {
-      "version": "30.0.5",
-      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-30.0.5.tgz",
-      "integrity": "sha512-D1tKtYvByrBkFLe2wHJl2bwMJIiT8rW+XA+TiataH79/FszLQMrpGEvzUVkzPau7OCO0Qnrhpe87PqtOAIB8Yw==",
-      "dev": true,
-      "dependencies": {
-        "@jest/schemas": "30.0.5",
-        "ansi-styles": "^5.2.0",
-        "react-is": "^18.3.1"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-matcher-utils/node_modules/react-is": {
-      "version": "18.3.1",
-      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz",
-      "integrity": "sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==",
-      "dev": true
-    },
-    "node_modules/jest-message-util": {
-      "version": "30.1.0",
-      "resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-30.1.0.tgz",
-      "integrity": "sha512-HizKDGG98cYkWmaLUHChq4iN+oCENohQLb7Z5guBPumYs+/etonmNFlg1Ps6yN9LTPyZn+M+b/9BbnHx3WTMDg==",
-      "dev": true,
-      "dependencies": {
-        "@babel/code-frame": "^7.27.1",
-        "@jest/types": "30.0.5",
-        "@types/stack-utils": "^2.0.3",
-        "chalk": "^4.1.2",
-        "graceful-fs": "^4.2.11",
-        "micromatch": "^4.0.8",
-        "pretty-format": "30.0.5",
-        "slash": "^3.0.0",
-        "stack-utils": "^2.0.6"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-message-util/node_modules/ansi-styles": {
-      "version": "5.2.0",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
-      "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
-      "dev": true,
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
-      }
-    },
-    "node_modules/jest-message-util/node_modules/pretty-format": {
-      "version": "30.0.5",
-      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-30.0.5.tgz",
-      "integrity": "sha512-D1tKtYvByrBkFLe2wHJl2bwMJIiT8rW+XA+TiataH79/FszLQMrpGEvzUVkzPau7OCO0Qnrhpe87PqtOAIB8Yw==",
-      "dev": true,
-      "dependencies": {
-        "@jest/schemas": "30.0.5",
-        "ansi-styles": "^5.2.0",
-        "react-is": "^18.3.1"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-message-util/node_modules/react-is": {
-      "version": "18.3.1",
-      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz",
-      "integrity": "sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==",
-      "dev": true
-    },
-    "node_modules/jest-mock": {
-      "version": "30.0.5",
-      "resolved": "https://registry.npmjs.org/jest-mock/-/jest-mock-30.0.5.tgz",
-      "integrity": "sha512-Od7TyasAAQX/6S+QCbN6vZoWOMwlTtzzGuxJku1GhGanAjz9y+QsQkpScDmETvdc9aSXyJ/Op4rhpMYBWW91wQ==",
-      "dev": true,
-      "dependencies": {
-        "@jest/types": "30.0.5",
-        "@types/node": "*",
-        "jest-util": "30.0.5"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-pnp-resolver": {
-      "version": "1.2.3",
-      "resolved": "https://registry.npmjs.org/jest-pnp-resolver/-/jest-pnp-resolver-1.2.3.tgz",
-      "integrity": "sha512-+3NpwQEnRoIBtx4fyhblQDPgJI0H1IEIkX7ShLUjPGA7TtUTvI1oiKi3SR4oBR0hQhQR80l4WAe5RrXBwWMA8w==",
-      "dev": true,
-      "engines": {
-        "node": ">=6"
-      },
-      "peerDependencies": {
-        "jest-resolve": "*"
-      },
-      "peerDependenciesMeta": {
-        "jest-resolve": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/jest-regex-util": {
-      "version": "30.0.1",
-      "resolved": "https://registry.npmjs.org/jest-regex-util/-/jest-regex-util-30.0.1.tgz",
-      "integrity": "sha512-jHEQgBXAgc+Gh4g0p3bCevgRCVRkB4VB70zhoAE48gxeSr1hfUOsM/C2WoJgVL7Eyg//hudYENbm3Ne+/dRVVA==",
-      "dev": true,
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-resolve": {
-      "version": "30.1.3",
-      "resolved": "https://registry.npmjs.org/jest-resolve/-/jest-resolve-30.1.3.tgz",
-      "integrity": "sha512-DI4PtTqzw9GwELFS41sdMK32Ajp3XZQ8iygeDMWkxlRhm7uUTOFSZFVZABFuxr0jvspn8MAYy54NxZCsuCTSOw==",
-      "dev": true,
-      "dependencies": {
-        "chalk": "^4.1.2",
-        "graceful-fs": "^4.2.11",
-        "jest-haste-map": "30.1.0",
-        "jest-pnp-resolver": "^1.2.3",
-        "jest-util": "30.0.5",
-        "jest-validate": "30.1.0",
-        "slash": "^3.0.0",
-        "unrs-resolver": "^1.7.11"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-resolve-dependencies": {
-      "version": "30.1.3",
-      "resolved": "https://registry.npmjs.org/jest-resolve-dependencies/-/jest-resolve-dependencies-30.1.3.tgz",
-      "integrity": "sha512-DNfq3WGmuRyHRHfEet+Zm3QOmVFtIarUOQHHryKPc0YL9ROfgWZxl4+aZq/VAzok2SS3gZdniP+dO4zgo59hBg==",
-      "dev": true,
-      "dependencies": {
-        "jest-regex-util": "30.0.1",
-        "jest-snapshot": "30.1.2"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-runner": {
-      "version": "30.1.3",
-      "resolved": "https://registry.npmjs.org/jest-runner/-/jest-runner-30.1.3.tgz",
-      "integrity": "sha512-dd1ORcxQraW44Uz029TtXj85W11yvLpDuIzNOlofrC8GN+SgDlgY4BvyxJiVeuabA1t6idjNbX59jLd2oplOGQ==",
-      "dev": true,
-      "dependencies": {
-        "@jest/console": "30.1.2",
-        "@jest/environment": "30.1.2",
-        "@jest/test-result": "30.1.3",
-        "@jest/transform": "30.1.2",
-        "@jest/types": "30.0.5",
-        "@types/node": "*",
-        "chalk": "^4.1.2",
-        "emittery": "^0.13.1",
-        "exit-x": "^0.2.2",
-        "graceful-fs": "^4.2.11",
-        "jest-docblock": "30.0.1",
-        "jest-environment-node": "30.1.2",
-        "jest-haste-map": "30.1.0",
-        "jest-leak-detector": "30.1.0",
-        "jest-message-util": "30.1.0",
-        "jest-resolve": "30.1.3",
-        "jest-runtime": "30.1.3",
-        "jest-util": "30.0.5",
-        "jest-watcher": "30.1.3",
-        "jest-worker": "30.1.0",
-        "p-limit": "^3.1.0",
-        "source-map-support": "0.5.13"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-runtime": {
-      "version": "30.1.3",
-      "resolved": "https://registry.npmjs.org/jest-runtime/-/jest-runtime-30.1.3.tgz",
-      "integrity": "sha512-WS8xgjuNSphdIGnleQcJ3AKE4tBKOVP+tKhCD0u+Tb2sBmsU8DxfbBpZX7//+XOz81zVs4eFpJQwBNji2Y07DA==",
-      "dev": true,
-      "dependencies": {
-        "@jest/environment": "30.1.2",
-        "@jest/fake-timers": "30.1.2",
-        "@jest/globals": "30.1.2",
-        "@jest/source-map": "30.0.1",
-        "@jest/test-result": "30.1.3",
-        "@jest/transform": "30.1.2",
-        "@jest/types": "30.0.5",
-        "@types/node": "*",
-        "chalk": "^4.1.2",
-        "cjs-module-lexer": "^2.1.0",
-        "collect-v8-coverage": "^1.0.2",
-        "glob": "^10.3.10",
-        "graceful-fs": "^4.2.11",
-        "jest-haste-map": "30.1.0",
-        "jest-message-util": "30.1.0",
-        "jest-mock": "30.0.5",
-        "jest-regex-util": "30.0.1",
-        "jest-resolve": "30.1.3",
-        "jest-snapshot": "30.1.2",
-        "jest-util": "30.0.5",
-        "slash": "^3.0.0",
-        "strip-bom": "^4.0.0"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-snapshot": {
-      "version": "30.1.2",
-      "resolved": "https://registry.npmjs.org/jest-snapshot/-/jest-snapshot-30.1.2.tgz",
-      "integrity": "sha512-4q4+6+1c8B6Cy5pGgFvjDy/Pa6VYRiGu0yQafKkJ9u6wQx4G5PqI2QR6nxTl43yy7IWsINwz6oT4o6tD12a8Dg==",
-      "dev": true,
-      "dependencies": {
-        "@babel/core": "^7.27.4",
-        "@babel/generator": "^7.27.5",
-        "@babel/plugin-syntax-jsx": "^7.27.1",
-        "@babel/plugin-syntax-typescript": "^7.27.1",
-        "@babel/types": "^7.27.3",
-        "@jest/expect-utils": "30.1.2",
-        "@jest/get-type": "30.1.0",
-        "@jest/snapshot-utils": "30.1.2",
-        "@jest/transform": "30.1.2",
-        "@jest/types": "30.0.5",
-        "babel-preset-current-node-syntax": "^1.1.0",
-        "chalk": "^4.1.2",
-        "expect": "30.1.2",
-        "graceful-fs": "^4.2.11",
-        "jest-diff": "30.1.2",
-        "jest-matcher-utils": "30.1.2",
-        "jest-message-util": "30.1.0",
-        "jest-util": "30.0.5",
-        "pretty-format": "30.0.5",
-        "semver": "^7.7.2",
-        "synckit": "^0.11.8"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-snapshot/node_modules/ansi-styles": {
-      "version": "5.2.0",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
-      "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
-      "dev": true,
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
-      }
-    },
-    "node_modules/jest-snapshot/node_modules/pretty-format": {
-      "version": "30.0.5",
-      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-30.0.5.tgz",
-      "integrity": "sha512-D1tKtYvByrBkFLe2wHJl2bwMJIiT8rW+XA+TiataH79/FszLQMrpGEvzUVkzPau7OCO0Qnrhpe87PqtOAIB8Yw==",
-      "dev": true,
-      "dependencies": {
-        "@jest/schemas": "30.0.5",
-        "ansi-styles": "^5.2.0",
-        "react-is": "^18.3.1"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-snapshot/node_modules/react-is": {
-      "version": "18.3.1",
-      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz",
-      "integrity": "sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==",
-      "dev": true
-    },
-    "node_modules/jest-snapshot/node_modules/semver": {
-      "version": "7.7.2",
-      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
-      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
-      "dev": true,
-      "bin": {
-        "semver": "bin/semver.js"
-      },
-      "engines": {
-        "node": ">=10"
-      }
-    },
-    "node_modules/jest-util": {
-      "version": "30.0.5",
-      "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-30.0.5.tgz",
-      "integrity": "sha512-pvyPWssDZR0FlfMxCBoc0tvM8iUEskaRFALUtGQYzVEAqisAztmy+R8LnU14KT4XA0H/a5HMVTXat1jLne010g==",
-      "dev": true,
-      "dependencies": {
-        "@jest/types": "30.0.5",
-        "@types/node": "*",
-        "chalk": "^4.1.2",
-        "ci-info": "^4.2.0",
-        "graceful-fs": "^4.2.11",
-        "picomatch": "^4.0.2"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-util/node_modules/picomatch": {
-      "version": "4.0.3",
-      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.3.tgz",
-      "integrity": "sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==",
-      "dev": true,
-      "engines": {
-        "node": ">=12"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/jonschlinkert"
-      }
-    },
-    "node_modules/jest-validate": {
-      "version": "30.1.0",
-      "resolved": "https://registry.npmjs.org/jest-validate/-/jest-validate-30.1.0.tgz",
-      "integrity": "sha512-7P3ZlCFW/vhfQ8pE7zW6Oi4EzvuB4sgR72Q1INfW9m0FGo0GADYlPwIkf4CyPq7wq85g+kPMtPOHNAdWHeBOaA==",
-      "dev": true,
-      "dependencies": {
-        "@jest/get-type": "30.1.0",
-        "@jest/types": "30.0.5",
-        "camelcase": "^6.3.0",
-        "chalk": "^4.1.2",
-        "leven": "^3.1.0",
-        "pretty-format": "30.0.5"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-validate/node_modules/ansi-styles": {
-      "version": "5.2.0",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
-      "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
-      "dev": true,
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
-      }
-    },
-    "node_modules/jest-validate/node_modules/camelcase": {
-      "version": "6.3.0",
-      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-6.3.0.tgz",
-      "integrity": "sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==",
-      "dev": true,
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/sindresorhus"
-      }
-    },
-    "node_modules/jest-validate/node_modules/pretty-format": {
-      "version": "30.0.5",
-      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-30.0.5.tgz",
-      "integrity": "sha512-D1tKtYvByrBkFLe2wHJl2bwMJIiT8rW+XA+TiataH79/FszLQMrpGEvzUVkzPau7OCO0Qnrhpe87PqtOAIB8Yw==",
-      "dev": true,
-      "dependencies": {
-        "@jest/schemas": "30.0.5",
-        "ansi-styles": "^5.2.0",
-        "react-is": "^18.3.1"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-validate/node_modules/react-is": {
-      "version": "18.3.1",
-      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz",
-      "integrity": "sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==",
-      "dev": true
-    },
-    "node_modules/jest-watcher": {
-      "version": "30.1.3",
-      "resolved": "https://registry.npmjs.org/jest-watcher/-/jest-watcher-30.1.3.tgz",
-      "integrity": "sha512-6jQUZCP1BTL2gvG9E4YF06Ytq4yMb4If6YoQGRR6PpjtqOXSP3sKe2kqwB6SQ+H9DezOfZaSLnmka1NtGm3fCQ==",
-      "dev": true,
-      "dependencies": {
-        "@jest/test-result": "30.1.3",
-        "@jest/types": "30.0.5",
-        "@types/node": "*",
-        "ansi-escapes": "^4.3.2",
-        "chalk": "^4.1.2",
-        "emittery": "^0.13.1",
-        "jest-util": "30.0.5",
-        "string-length": "^4.0.2"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-worker": {
-      "version": "30.1.0",
-      "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-30.1.0.tgz",
-      "integrity": "sha512-uvWcSjlwAAgIu133Tt77A05H7RIk3Ho8tZL50bQM2AkvLdluw9NG48lRCl3Dt+MOH719n/0nnb5YxUwcuJiKRA==",
-      "dev": true,
-      "dependencies": {
-        "@types/node": "*",
-        "@ungap/structured-clone": "^1.3.0",
-        "jest-util": "30.0.5",
-        "merge-stream": "^2.0.0",
-        "supports-color": "^8.1.1"
-      },
-      "engines": {
-        "node": "^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0"
-      }
-    },
-    "node_modules/jest-worker/node_modules/supports-color": {
-      "version": "8.1.1",
-      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz",
-      "integrity": "sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==",
-      "dev": true,
-      "dependencies": {
-        "has-flag": "^4.0.0"
-      },
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/supports-color?sponsor=1"
-      }
-    },
-    "node_modules/js-tokens": {
-      "version": "4.0.0",
-      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
-      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
-      "dev": true
-    },
-    "node_modules/js-yaml": {
-      "version": "3.14.1",
-      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz",
-      "integrity": "sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==",
-      "dev": true,
-      "dependencies": {
-        "argparse": "^1.0.7",
-        "esprima": "^4.0.0"
-      },
-      "bin": {
-        "js-yaml": "bin/js-yaml.js"
-      }
-    },
-    "node_modules/jsdom": {
-      "version": "26.1.0",
-      "resolved": "https://registry.npmjs.org/jsdom/-/jsdom-26.1.0.tgz",
-      "integrity": "sha512-Cvc9WUhxSMEo4McES3P7oK3QaXldCfNWp7pl2NNeiIFlCoLr3kfq9kb1fxftiwk1FLV7CvpvDfonxtzUDeSOPg==",
-      "dev": true,
-      "dependencies": {
-        "cssstyle": "^4.2.1",
-        "data-urls": "^5.0.0",
-        "decimal.js": "^10.5.0",
-        "html-encoding-sniffer": "^4.0.0",
-        "http-proxy-agent": "^7.0.2",
-        "https-proxy-agent": "^7.0.6",
-        "is-potential-custom-element-name": "^1.0.1",
-        "nwsapi": "^2.2.16",
-        "parse5": "^7.2.1",
-        "rrweb-cssom": "^0.8.0",
-        "saxes": "^6.0.0",
-        "symbol-tree": "^3.2.4",
-        "tough-cookie": "^5.1.1",
-        "w3c-xmlserializer": "^5.0.0",
-        "webidl-conversions": "^7.0.0",
-        "whatwg-encoding": "^3.1.1",
-        "whatwg-mimetype": "^4.0.0",
-        "whatwg-url": "^14.1.1",
-        "ws": "^8.18.0",
-        "xml-name-validator": "^5.0.0"
-      },
-      "engines": {
-        "node": ">=18"
-      },
-      "peerDependencies": {
-        "canvas": "^3.0.0"
-      },
-      "peerDependenciesMeta": {
-        "canvas": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/jsesc": {
-      "version": "3.1.0",
-      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz",
-      "integrity": "sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==",
-      "dev": true,
-      "bin": {
-        "jsesc": "bin/jsesc"
-      },
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/json-parse-even-better-errors": {
-      "version": "2.3.1",
-      "resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
-      "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==",
-      "dev": true
-    },
-    "node_modules/json5": {
-      "version": "2.2.3",
-      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
-      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
-      "dev": true,
-      "bin": {
-        "json5": "lib/cli.js"
-      },
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/leven": {
-      "version": "3.1.0",
-      "resolved": "https://registry.npmjs.org/leven/-/leven-3.1.0.tgz",
-      "integrity": "sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==",
-      "dev": true,
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/lines-and-columns": {
-      "version": "1.2.4",
-      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
-      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
-      "dev": true
-    },
-    "node_modules/locate-path": {
-      "version": "5.0.0",
-      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
-      "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
-      "dev": true,
-      "dependencies": {
-        "p-locate": "^4.1.0"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/lodash": {
-      "version": "4.17.21",
-      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
-      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg=="
-    },
-    "node_modules/lodash.memoize": {
-      "version": "4.1.2",
-      "resolved": "https://registry.npmjs.org/lodash.memoize/-/lodash.memoize-4.1.2.tgz",
-      "integrity": "sha512-t7j+NzmgnQzTAYXcsHYLgimltOV1MXHtlOWf6GjL9Kj8GK5FInw5JotxvbOs+IvV1/Dzo04/fCGfLVs7aXb4Ag==",
-      "dev": true
-    },
-    "node_modules/lru-cache": {
-      "version": "5.1.1",
-      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
-      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
-      "dev": true,
-      "dependencies": {
-        "yallist": "^3.0.2"
-      }
-    },
-    "node_modules/lz-string": {
-      "version": "1.5.0",
-      "resolved": "https://registry.npmjs.org/lz-string/-/lz-string-1.5.0.tgz",
-      "integrity": "sha512-h5bgJWpxJNswbU7qCrV0tIKQCaS3blPDrqKWx+QxzuzL1zGUzij9XCWLrSLsJPu5t+eWA/ycetzYAO5IOMcWAQ==",
-      "dev": true,
-      "peer": true,
-      "bin": {
-        "lz-string": "bin/bin.js"
-      }
-    },
-    "node_modules/make-dir": {
-      "version": "4.0.0",
-      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-4.0.0.tgz",
-      "integrity": "sha512-hXdUTZYIVOt1Ex//jAQi+wTZZpUpwBj/0QsOzqegb3rGMMeJiSEu5xLHnYfBrRV4RH2+OCSOO95Is/7x1WJ4bw==",
-      "dev": true,
-      "dependencies": {
-        "semver": "^7.5.3"
-      },
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/sindresorhus"
-      }
-    },
-    "node_modules/make-dir/node_modules/semver": {
-      "version": "7.7.2",
-      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
-      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
-      "dev": true,
-      "bin": {
-        "semver": "bin/semver.js"
-      },
-      "engines": {
-        "node": ">=10"
-      }
-    },
-    "node_modules/make-error": {
-      "version": "1.3.6",
-      "resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.6.tgz",
-      "integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==",
-      "dev": true
-    },
-    "node_modules/makeerror": {
-      "version": "1.0.12",
-      "resolved": "https://registry.npmjs.org/makeerror/-/makeerror-1.0.12.tgz",
-      "integrity": "sha512-JmqCvUhmt43madlpFzG4BQzG2Z3m6tvQDNKdClZnO3VbIudJYmxsT0FNJMeiB2+JTSlTQTSbU8QdesVmwJcmLg==",
-      "dev": true,
-      "dependencies": {
-        "tmpl": "1.0.5"
-      }
-    },
-    "node_modules/merge-stream": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz",
-      "integrity": "sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==",
-      "dev": true
-    },
-    "node_modules/micromatch": {
-      "version": "4.0.8",
-      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
-      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
-      "dev": true,
-      "dependencies": {
-        "braces": "^3.0.3",
-        "picomatch": "^2.3.1"
-      },
-      "engines": {
-        "node": ">=8.6"
-      }
-    },
-    "node_modules/mimic-fn": {
-      "version": "2.1.0",
-      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz",
-      "integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==",
-      "dev": true,
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/min-indent": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/min-indent/-/min-indent-1.0.1.tgz",
-      "integrity": "sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg==",
-      "dev": true,
-      "engines": {
-        "node": ">=4"
-      }
-    },
-    "node_modules/minimatch": {
-      "version": "9.0.5",
-      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
-      "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
-      "dev": true,
-      "dependencies": {
-        "brace-expansion": "^2.0.1"
-      },
-      "engines": {
-        "node": ">=16 || 14 >=14.17"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/isaacs"
-      }
-    },
-    "node_modules/minimist": {
-      "version": "1.2.8",
-      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
-      "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
-      "dev": true,
-      "funding": {
-        "url": "https://github.com/sponsors/ljharb"
-      }
-    },
-    "node_modules/minipass": {
-      "version": "7.1.2",
-      "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
-      "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
-      "dev": true,
-      "engines": {
-        "node": ">=16 || 14 >=14.17"
-      }
-    },
-    "node_modules/ms": {
-      "version": "2.1.3",
-      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
-      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
-      "dev": true
-    },
-    "node_modules/napi-postinstall": {
-      "version": "0.3.3",
-      "resolved": "https://registry.npmjs.org/napi-postinstall/-/napi-postinstall-0.3.3.tgz",
-      "integrity": "sha512-uTp172LLXSxuSYHv/kou+f6KW3SMppU9ivthaVTXian9sOt3XM/zHYHpRZiLgQoxeWfYUnslNWQHF1+G71xcow==",
-      "dev": true,
-      "bin": {
-        "napi-postinstall": "lib/cli.js"
-      },
-      "engines": {
-        "node": "^12.20.0 || ^14.18.0 || >=16.0.0"
-      },
-      "funding": {
-        "url": "https://opencollective.com/napi-postinstall"
-      }
-    },
-    "node_modules/natural-compare": {
-      "version": "1.4.0",
-      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
-      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
-      "dev": true
-    },
-    "node_modules/neo-async": {
-      "version": "2.6.2",
-      "resolved": "https://registry.npmjs.org/neo-async/-/neo-async-2.6.2.tgz",
-      "integrity": "sha512-Yd3UES5mWCSqR+qNT93S3UoYUkqAZ9lLg8a7g9rimsWmYGK8cVToA4/sF3RrshdyV3sAGMXVUmpMYOw+dLpOuw==",
-      "dev": true
-    },
-    "node_modules/node-int64": {
-      "version": "0.4.0",
-      "resolved": "https://registry.npmjs.org/node-int64/-/node-int64-0.4.0.tgz",
-      "integrity": "sha512-O5lz91xSOeoXP6DulyHfllpq+Eg00MWitZIbtPfoSEvqIHdl5gfcY6hYzDWnj0qD5tz52PI08u9qUvSVeUBeHw==",
-      "dev": true
-    },
-    "node_modules/node-releases": {
-      "version": "2.0.20",
-      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.20.tgz",
-      "integrity": "sha512-7gK6zSXEH6neM212JgfYFXe+GmZQM+fia5SsusuBIUgnPheLFBmIPhtFoAQRj8/7wASYQnbDlHPVwY0BefoFgA==",
-      "dev": true
-    },
-    "node_modules/normalize-path": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
-      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
-      "dev": true,
-      "engines": {
-        "node": ">=0.10.0"
-      }
-    },
-    "node_modules/npm-run-path": {
-      "version": "4.0.1",
-      "resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz",
-      "integrity": "sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==",
-      "dev": true,
-      "dependencies": {
-        "path-key": "^3.0.0"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/nwsapi": {
-      "version": "2.2.22",
-      "resolved": "https://registry.npmjs.org/nwsapi/-/nwsapi-2.2.22.tgz",
-      "integrity": "sha512-ujSMe1OWVn55euT1ihwCI1ZcAaAU3nxUiDwfDQldc51ZXaB9m2AyOn6/jh1BLe2t/G8xd6uKG1UBF2aZJeg2SQ==",
-      "dev": true
-    },
-    "node_modules/once": {
-      "version": "1.4.0",
-      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
-      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
-      "dev": true,
-      "dependencies": {
-        "wrappy": "1"
-      }
-    },
-    "node_modules/onetime": {
-      "version": "5.1.2",
-      "resolved": "https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz",
-      "integrity": "sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==",
-      "dev": true,
-      "dependencies": {
-        "mimic-fn": "^2.1.0"
-      },
-      "engines": {
-        "node": ">=6"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/sindresorhus"
-      }
-    },
-    "node_modules/p-limit": {
-      "version": "3.1.0",
-      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
-      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
-      "dev": true,
-      "dependencies": {
-        "yocto-queue": "^0.1.0"
-      },
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/sindresorhus"
-      }
-    },
-    "node_modules/p-locate": {
-      "version": "4.1.0",
-      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
-      "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
-      "dev": true,
-      "dependencies": {
-        "p-limit": "^2.2.0"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/p-locate/node_modules/p-limit": {
-      "version": "2.3.0",
-      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
-      "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
-      "dev": true,
-      "dependencies": {
-        "p-try": "^2.0.0"
-      },
-      "engines": {
-        "node": ">=6"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/sindresorhus"
-      }
-    },
-    "node_modules/p-try": {
-      "version": "2.2.0",
-      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
-      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==",
-      "dev": true,
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/package-json-from-dist": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz",
-      "integrity": "sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==",
-      "dev": true
-    },
-    "node_modules/parse-json": {
-      "version": "5.2.0",
-      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz",
-      "integrity": "sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==",
-      "dev": true,
-      "dependencies": {
-        "@babel/code-frame": "^7.0.0",
-        "error-ex": "^1.3.1",
-        "json-parse-even-better-errors": "^2.3.0",
-        "lines-and-columns": "^1.1.6"
-      },
-      "engines": {
-        "node": ">=8"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/sindresorhus"
-      }
-    },
-    "node_modules/parse5": {
-      "version": "7.3.0",
-      "resolved": "https://registry.npmjs.org/parse5/-/parse5-7.3.0.tgz",
-      "integrity": "sha512-IInvU7fabl34qmi9gY8XOVxhYyMyuH2xUNpb2q8/Y+7552KlejkRvqvD19nMoUW/uQGGbqNpA6Tufu5FL5BZgw==",
-      "dev": true,
-      "dependencies": {
-        "entities": "^6.0.0"
-      },
-      "funding": {
-        "url": "https://github.com/inikulin/parse5?sponsor=1"
-      }
-    },
-    "node_modules/path-exists": {
-      "version": "4.0.0",
-      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
-      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
-      "dev": true,
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/path-is-absolute": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
-      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
-      "dev": true,
-      "engines": {
-        "node": ">=0.10.0"
-      }
-    },
-    "node_modules/path-key": {
-      "version": "3.1.1",
-      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
-      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
-      "dev": true,
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/path-scurry": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz",
-      "integrity": "sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==",
-      "dev": true,
-      "dependencies": {
-        "lru-cache": "^10.2.0",
-        "minipass": "^5.0.0 || ^6.0.2 || ^7.0.0"
-      },
-      "engines": {
-        "node": ">=16 || 14 >=14.18"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/isaacs"
-      }
-    },
-    "node_modules/path-scurry/node_modules/lru-cache": {
-      "version": "10.4.3",
-      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
-      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
-      "dev": true
-    },
-    "node_modules/picocolors": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
-      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
-      "dev": true
-    },
-    "node_modules/picomatch": {
-      "version": "2.3.1",
-      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
-      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
-      "dev": true,
-      "engines": {
-        "node": ">=8.6"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/jonschlinkert"
-      }
-    },
-    "node_modules/pirates": {
-      "version": "4.0.7",
-      "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.7.tgz",
-      "integrity": "sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==",
-      "dev": true,
-      "engines": {
-        "node": ">= 6"
-      }
-    },
-    "node_modules/pkg-dir": {
-      "version": "4.2.0",
-      "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz",
-      "integrity": "sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==",
-      "dev": true,
-      "dependencies": {
-        "find-up": "^4.0.0"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/pretty-format": {
-      "version": "27.5.1",
-      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-27.5.1.tgz",
-      "integrity": "sha512-Qb1gy5OrP5+zDf2Bvnzdl3jsTf1qXVMazbvCoKhtKqVs4/YK4ozX4gKQJJVyNe+cajNPn0KoC0MC3FUmaHWEmQ==",
-      "dev": true,
-      "peer": true,
-      "dependencies": {
-        "ansi-regex": "^5.0.1",
-        "ansi-styles": "^5.0.0",
-        "react-is": "^17.0.1"
-      },
-      "engines": {
-        "node": "^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"
-      }
-    },
-    "node_modules/pretty-format/node_modules/ansi-styles": {
-      "version": "5.2.0",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
-      "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
-      "dev": true,
-      "peer": true,
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
-      }
-    },
-    "node_modules/punycode": {
-      "version": "2.3.1",
-      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
-      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
-      "dev": true,
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/pure-rand": {
-      "version": "7.0.1",
-      "resolved": "https://registry.npmjs.org/pure-rand/-/pure-rand-7.0.1.tgz",
-      "integrity": "sha512-oTUZM/NAZS8p7ANR3SHh30kXB+zK2r2BPcEn/awJIbOvq82WoMN4p62AWWp3Hhw50G0xMsw1mhIBLqHw64EcNQ==",
-      "dev": true,
-      "funding": [
-        {
-          "type": "individual",
-          "url": "https://github.com/sponsors/dubzzz"
-        },
-        {
-          "type": "opencollective",
-          "url": "https://opencollective.com/fast-check"
-        }
-      ]
-    },
-    "node_modules/react": {
-      "version": "19.1.1",
-      "resolved": "https://registry.npmjs.org/react/-/react-19.1.1.tgz",
-      "integrity": "sha512-w8nqGImo45dmMIfljjMwOGtbmC/mk4CMYhWIicdSflH91J9TyCyczcPFXJzrZ/ZXcgGRFeP6BU0BEJTw6tZdfQ==",
-      "peer": true,
-      "engines": {
-        "node": ">=0.10.0"
-      }
-    },
-    "node_modules/react-dom": {
-      "version": "19.1.1",
-      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-19.1.1.tgz",
-      "integrity": "sha512-Dlq/5LAZgF0Gaz6yiqZCf6VCcZs1ghAJyrsu84Q/GT0gV+mCxbfmKNoGRKBYMJ8IEdGPqu49YWXD02GCknEDkw==",
-      "peer": true,
-      "dependencies": {
-        "scheduler": "^0.26.0"
-      },
-      "peerDependencies": {
-        "react": "^19.1.1"
-      }
-    },
-    "node_modules/react-is": {
-      "version": "17.0.2",
-      "resolved": "https://registry.npmjs.org/react-is/-/react-is-17.0.2.tgz",
-      "integrity": "sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==",
-      "dev": true,
-      "peer": true
-    },
-    "node_modules/redent": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/redent/-/redent-3.0.0.tgz",
-      "integrity": "sha512-6tDA8g98We0zd0GvVeMT9arEOnTw9qM03L9cJXaCjrip1OO764RDBLBfrB4cwzNGDj5OA5ioymC9GkizgWJDUg==",
-      "dev": true,
-      "dependencies": {
-        "indent-string": "^4.0.0",
-        "strip-indent": "^3.0.0"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/require-directory": {
-      "version": "2.1.1",
-      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
-      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
-      "dev": true,
-      "engines": {
-        "node": ">=0.10.0"
-      }
-    },
-    "node_modules/resolve-cwd": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-3.0.0.tgz",
-      "integrity": "sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==",
-      "dev": true,
-      "dependencies": {
-        "resolve-from": "^5.0.0"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/resolve-from": {
-      "version": "5.0.0",
-      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz",
-      "integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==",
-      "dev": true,
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/rrweb-cssom": {
-      "version": "0.8.0",
-      "resolved": "https://registry.npmjs.org/rrweb-cssom/-/rrweb-cssom-0.8.0.tgz",
-      "integrity": "sha512-guoltQEx+9aMf2gDZ0s62EcV8lsXR+0w8915TC3ITdn2YueuNjdAYh/levpU9nFaoChh9RUS5ZdQMrKfVEN9tw==",
-      "dev": true
-    },
-    "node_modules/safer-buffer": {
-      "version": "2.1.2",
-      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
-      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
-      "dev": true
-    },
-    "node_modules/saxes": {
-      "version": "6.0.0",
-      "resolved": "https://registry.npmjs.org/saxes/-/saxes-6.0.0.tgz",
-      "integrity": "sha512-xAg7SOnEhrm5zI3puOOKyy1OMcMlIJZYNJY7xLBwSze0UjhPLnWfj2GF2EpT0jmzaJKIWKHLsaSSajf35bcYnA==",
-      "dev": true,
-      "dependencies": {
-        "xmlchars": "^2.2.0"
-      },
-      "engines": {
-        "node": ">=v12.22.7"
-      }
-    },
-    "node_modules/scheduler": {
-      "version": "0.26.0",
-      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.26.0.tgz",
-      "integrity": "sha512-NlHwttCI/l5gCPR3D1nNXtWABUmBwvZpEQiD4IXSbIDq8BzLIK/7Ir5gTFSGZDUu37K5cMNp0hFtzO38sC7gWA==",
-      "peer": true
-    },
-    "node_modules/semver": {
-      "version": "6.3.1",
-      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
-      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
-      "dev": true,
-      "bin": {
-        "semver": "bin/semver.js"
-      }
-    },
-    "node_modules/shebang-command": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
-      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
-      "dev": true,
-      "dependencies": {
-        "shebang-regex": "^3.0.0"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/shebang-regex": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
-      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
-      "dev": true,
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/signal-exit": {
-      "version": "4.1.0",
-      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
-      "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
-      "dev": true,
-      "engines": {
-        "node": ">=14"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/isaacs"
-      }
-    },
-    "node_modules/slash": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
-      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
-      "dev": true,
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/source-map": {
-      "version": "0.6.1",
-      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
-      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
-      "dev": true,
-      "engines": {
-        "node": ">=0.10.0"
-      }
-    },
-    "node_modules/source-map-support": {
-      "version": "0.5.13",
-      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.13.tgz",
-      "integrity": "sha512-SHSKFHadjVA5oR4PPqhtAVdcBWwRYVd6g6cAXnIbRiIwc2EhPrTuKUBdSLvlEKyIP3GCf89fltvcZiP9MMFA1w==",
-      "dev": true,
-      "dependencies": {
-        "buffer-from": "^1.0.0",
-        "source-map": "^0.6.0"
-      }
-    },
-    "node_modules/sprintf-js": {
-      "version": "1.0.3",
-      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
-      "integrity": "sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==",
-      "dev": true
-    },
-    "node_modules/stack-utils": {
-      "version": "2.0.6",
-      "resolved": "https://registry.npmjs.org/stack-utils/-/stack-utils-2.0.6.tgz",
-      "integrity": "sha512-XlkWvfIm6RmsWtNJx+uqtKLS8eqFbxUg0ZzLXqY0caEy9l7hruX8IpiDnjsLavoBgqCCR71TqWO8MaXYheJ3RQ==",
-      "dev": true,
-      "dependencies": {
-        "escape-string-regexp": "^2.0.0"
-      },
-      "engines": {
-        "node": ">=10"
-      }
-    },
-    "node_modules/string-length": {
-      "version": "4.0.2",
-      "resolved": "https://registry.npmjs.org/string-length/-/string-length-4.0.2.tgz",
-      "integrity": "sha512-+l6rNN5fYHNhZZy41RXsYptCjA2Igmq4EG7kZAYFQI1E1VTXarr6ZPXBg6eq7Y6eK4FEhY6AJlyuFIb/v/S0VQ==",
-      "dev": true,
-      "dependencies": {
-        "char-regex": "^1.0.2",
-        "strip-ansi": "^6.0.0"
-      },
-      "engines": {
-        "node": ">=10"
-      }
-    },
-    "node_modules/string-length/node_modules/strip-ansi": {
-      "version": "6.0.1",
-      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
-      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
-      "dev": true,
-      "dependencies": {
-        "ansi-regex": "^5.0.1"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/string-width": {
-      "version": "5.1.2",
-      "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
-      "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
-      "dev": true,
-      "dependencies": {
-        "eastasianwidth": "^0.2.0",
-        "emoji-regex": "^9.2.2",
-        "strip-ansi": "^7.0.1"
-      },
-      "engines": {
-        "node": ">=12"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/sindresorhus"
-      }
-    },
-    "node_modules/string-width-cjs": {
-      "name": "string-width",
-      "version": "4.2.3",
-      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
-      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
-      "dev": true,
-      "dependencies": {
-        "emoji-regex": "^8.0.0",
-        "is-fullwidth-code-point": "^3.0.0",
-        "strip-ansi": "^6.0.1"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/string-width-cjs/node_modules/emoji-regex": {
-      "version": "8.0.0",
-      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
-      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
-      "dev": true
-    },
-    "node_modules/string-width-cjs/node_modules/strip-ansi": {
-      "version": "6.0.1",
-      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
-      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
-      "dev": true,
-      "dependencies": {
-        "ansi-regex": "^5.0.1"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/strip-ansi": {
-      "version": "7.1.2",
-      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.2.tgz",
-      "integrity": "sha512-gmBGslpoQJtgnMAvOVqGZpEz9dyoKTCzy2nfz/n8aIFhN/jCE/rCmcxabB6jOOHV+0WNnylOxaxBQPSvcWklhA==",
-      "dev": true,
-      "dependencies": {
-        "ansi-regex": "^6.0.1"
-      },
-      "engines": {
-        "node": ">=12"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
-      }
-    },
-    "node_modules/strip-ansi-cjs": {
-      "name": "strip-ansi",
-      "version": "6.0.1",
-      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
-      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
-      "dev": true,
-      "dependencies": {
-        "ansi-regex": "^5.0.1"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/strip-ansi/node_modules/ansi-regex": {
-      "version": "6.2.2",
-      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.2.2.tgz",
-      "integrity": "sha512-Bq3SmSpyFHaWjPk8If9yc6svM8c56dB5BAtW4Qbw5jHTwwXXcTLoRMkpDJp6VL0XzlWaCHTXrkFURMYmD0sLqg==",
-      "dev": true,
-      "engines": {
-        "node": ">=12"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
-      }
-    },
-    "node_modules/strip-bom": {
-      "version": "4.0.0",
-      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-4.0.0.tgz",
-      "integrity": "sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV/ioewSgQl97JHvgjoRGwPShsWm+IdrxB35d0w==",
-      "dev": true,
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/strip-final-newline": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-2.0.0.tgz",
-      "integrity": "sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==",
-      "dev": true,
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/strip-indent": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/strip-indent/-/strip-indent-3.0.0.tgz",
-      "integrity": "sha512-laJTa3Jb+VQpaC6DseHhF7dXVqHTfJPCRDaEbid/drOhgitgYku/letMUqOXFoWV0zIIUbjpdH2t+tYj4bQMRQ==",
-      "dev": true,
-      "dependencies": {
-        "min-indent": "^1.0.0"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/strip-json-comments": {
-      "version": "3.1.1",
-      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
-      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
-      "dev": true,
-      "engines": {
-        "node": ">=8"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/sindresorhus"
-      }
-    },
-    "node_modules/supports-color": {
-      "version": "7.2.0",
-      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
-      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
-      "dev": true,
-      "dependencies": {
-        "has-flag": "^4.0.0"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/symbol-tree": {
-      "version": "3.2.4",
-      "resolved": "https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.4.tgz",
-      "integrity": "sha512-9QNk5KwDF+Bvz+PyObkmSYjI5ksVUYtjW7AU22r2NKcfLJcXp96hkDWU3+XndOsUb+AQ9QhfzfCT2O+CNWT5Tw==",
-      "dev": true
-    },
-    "node_modules/synckit": {
-      "version": "0.11.11",
-      "resolved": "https://registry.npmjs.org/synckit/-/synckit-0.11.11.tgz",
-      "integrity": "sha512-MeQTA1r0litLUf0Rp/iisCaL8761lKAZHaimlbGK4j0HysC4PLfqygQj9srcs0m2RdtDYnF8UuYyKpbjHYp7Jw==",
-      "dev": true,
-      "dependencies": {
-        "@pkgr/core": "^0.2.9"
-      },
-      "engines": {
-        "node": "^14.18.0 || >=16.0.0"
-      },
-      "funding": {
-        "url": "https://opencollective.com/synckit"
-      }
-    },
-    "node_modules/test-exclude": {
-      "version": "6.0.0",
-      "resolved": "https://registry.npmjs.org/test-exclude/-/test-exclude-6.0.0.tgz",
-      "integrity": "sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==",
-      "dev": true,
-      "dependencies": {
-        "@istanbuljs/schema": "^0.1.2",
-        "glob": "^7.1.4",
-        "minimatch": "^3.0.4"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/test-exclude/node_modules/brace-expansion": {
-      "version": "1.1.12",
-      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
-      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
-      "dev": true,
-      "dependencies": {
-        "balanced-match": "^1.0.0",
-        "concat-map": "0.0.1"
-      }
-    },
-    "node_modules/test-exclude/node_modules/glob": {
-      "version": "7.2.3",
-      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
-      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
-      "deprecated": "Glob versions prior to v9 are no longer supported",
-      "dev": true,
-      "dependencies": {
-        "fs.realpath": "^1.0.0",
-        "inflight": "^1.0.4",
-        "inherits": "2",
-        "minimatch": "^3.1.1",
-        "once": "^1.3.0",
-        "path-is-absolute": "^1.0.0"
-      },
-      "engines": {
-        "node": "*"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/isaacs"
-      }
-    },
-    "node_modules/test-exclude/node_modules/minimatch": {
-      "version": "3.1.2",
-      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
-      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
-      "dev": true,
-      "dependencies": {
-        "brace-expansion": "^1.1.7"
-      },
-      "engines": {
-        "node": "*"
-      }
-    },
-    "node_modules/tldts": {
-      "version": "6.1.86",
-      "resolved": "https://registry.npmjs.org/tldts/-/tldts-6.1.86.tgz",
-      "integrity": "sha512-WMi/OQ2axVTf/ykqCQgXiIct+mSQDFdH2fkwhPwgEwvJ1kSzZRiinb0zF2Xb8u4+OqPChmyI6MEu4EezNJz+FQ==",
-      "dev": true,
-      "dependencies": {
-        "tldts-core": "^6.1.86"
-      },
-      "bin": {
-        "tldts": "bin/cli.js"
-      }
-    },
-    "node_modules/tldts-core": {
-      "version": "6.1.86",
-      "resolved": "https://registry.npmjs.org/tldts-core/-/tldts-core-6.1.86.tgz",
-      "integrity": "sha512-Je6p7pkk+KMzMv2XXKmAE3McmolOQFdxkKw0R8EYNr7sELW46JqnNeTX8ybPiQgvg1ymCoF8LXs5fzFaZvJPTA==",
-      "dev": true
-    },
-    "node_modules/tmpl": {
-      "version": "1.0.5",
-      "resolved": "https://registry.npmjs.org/tmpl/-/tmpl-1.0.5.tgz",
-      "integrity": "sha512-3f0uOEAQwIqGuWW2MVzYg8fV/QNnc/IpuJNG837rLuczAaLVHslWHZQj4IGiEl5Hs3kkbhwL9Ab7Hrsmuj+Smw==",
-      "dev": true
-    },
-    "node_modules/to-regex-range": {
-      "version": "5.0.1",
-      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
-      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
-      "dev": true,
-      "dependencies": {
-        "is-number": "^7.0.0"
-      },
-      "engines": {
-        "node": ">=8.0"
-      }
-    },
-    "node_modules/tough-cookie": {
-      "version": "5.1.2",
-      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-5.1.2.tgz",
-      "integrity": "sha512-FVDYdxtnj0G6Qm/DhNPSb8Ju59ULcup3tuJxkFb5K8Bv2pUXILbf0xZWU8PX8Ov19OXljbUyveOFwRMwkXzO+A==",
-      "dev": true,
-      "dependencies": {
-        "tldts": "^6.1.32"
-      },
-      "engines": {
-        "node": ">=16"
-      }
-    },
-    "node_modules/tr46": {
-      "version": "5.1.1",
-      "resolved": "https://registry.npmjs.org/tr46/-/tr46-5.1.1.tgz",
-      "integrity": "sha512-hdF5ZgjTqgAntKkklYw0R03MG2x/bSzTtkxmIRw/sTNV8YXsCJ1tfLAX23lhxhHJlEf3CRCOCGGWw3vI3GaSPw==",
-      "dev": true,
-      "dependencies": {
-        "punycode": "^2.3.1"
-      },
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/ts-jest": {
-      "version": "29.4.1",
-      "resolved": "https://registry.npmjs.org/ts-jest/-/ts-jest-29.4.1.tgz",
-      "integrity": "sha512-SaeUtjfpg9Uqu8IbeDKtdaS0g8lS6FT6OzM3ezrDfErPJPHNDo/Ey+VFGP1bQIDfagYDLyRpd7O15XpG1Es2Uw==",
-      "dev": true,
-      "dependencies": {
-        "bs-logger": "^0.2.6",
-        "fast-json-stable-stringify": "^2.1.0",
-        "handlebars": "^4.7.8",
-        "json5": "^2.2.3",
-        "lodash.memoize": "^4.1.2",
-        "make-error": "^1.3.6",
-        "semver": "^7.7.2",
-        "type-fest": "^4.41.0",
-        "yargs-parser": "^21.1.1"
-      },
-      "bin": {
-        "ts-jest": "cli.js"
-      },
-      "engines": {
-        "node": "^14.15.0 || ^16.10.0 || ^18.0.0 || >=20.0.0"
-      },
-      "peerDependencies": {
-        "@babel/core": ">=7.0.0-beta.0 <8",
-        "@jest/transform": "^29.0.0 || ^30.0.0",
-        "@jest/types": "^29.0.0 || ^30.0.0",
-        "babel-jest": "^29.0.0 || ^30.0.0",
-        "jest": "^29.0.0 || ^30.0.0",
-        "jest-util": "^29.0.0 || ^30.0.0",
-        "typescript": ">=4.3 <6"
-      },
-      "peerDependenciesMeta": {
-        "@babel/core": {
-          "optional": true
-        },
-        "@jest/transform": {
-          "optional": true
-        },
-        "@jest/types": {
-          "optional": true
-        },
-        "babel-jest": {
-          "optional": true
-        },
-        "esbuild": {
-          "optional": true
-        },
-        "jest-util": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/ts-jest/node_modules/semver": {
-      "version": "7.7.2",
-      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
-      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
-      "dev": true,
-      "bin": {
-        "semver": "bin/semver.js"
-      },
-      "engines": {
-        "node": ">=10"
-      }
-    },
-    "node_modules/ts-jest/node_modules/type-fest": {
-      "version": "4.41.0",
-      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-4.41.0.tgz",
-      "integrity": "sha512-TeTSQ6H5YHvpqVwBRcnLDCBnDOHWYu7IvGbHT6N8AOymcr9PJGjc1GTtiWZTYg0NCgYwvnYWEkVChQAr9bjfwA==",
-      "dev": true,
-      "engines": {
-        "node": ">=16"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/sindresorhus"
-      }
-    },
-    "node_modules/tslib": {
-      "version": "2.8.1",
-      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
-      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
-      "dev": true,
-      "optional": true
-    },
-    "node_modules/type-detect": {
-      "version": "4.0.8",
-      "resolved": "https://registry.npmjs.org/type-detect/-/type-detect-4.0.8.tgz",
-      "integrity": "sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==",
-      "dev": true,
-      "engines": {
-        "node": ">=4"
-      }
-    },
-    "node_modules/type-fest": {
-      "version": "0.21.3",
-      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.21.3.tgz",
-      "integrity": "sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==",
-      "dev": true,
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/sindresorhus"
-      }
-    },
-    "node_modules/typescript": {
-      "version": "5.9.2",
-      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.9.2.tgz",
-      "integrity": "sha512-CWBzXQrc/qOkhidw1OzBTQuYRbfyxDXJMVJ1XNwUHGROVmuaeiEm3OslpZ1RV96d7SKKjZKrSJu3+t/xlw3R9A==",
-      "dev": true,
-      "peer": true,
-      "bin": {
-        "tsc": "bin/tsc",
-        "tsserver": "bin/tsserver"
-      },
-      "engines": {
-        "node": ">=14.17"
-      }
-    },
-    "node_modules/uglify-js": {
-      "version": "3.19.3",
-      "resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-3.19.3.tgz",
-      "integrity": "sha512-v3Xu+yuwBXisp6QYTcH4UbH+xYJXqnq2m/LtQVWKWzYc1iehYnLixoQDN9FH6/j9/oybfd6W9Ghwkl8+UMKTKQ==",
-      "dev": true,
-      "optional": true,
-      "bin": {
-        "uglifyjs": "bin/uglifyjs"
-      },
-      "engines": {
-        "node": ">=0.8.0"
-      }
-    },
-    "node_modules/undici-types": {
-      "version": "7.10.0",
-      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-7.10.0.tgz",
-      "integrity": "sha512-t5Fy/nfn+14LuOc2KNYg75vZqClpAiqscVvMygNnlsHBFpSXdJaYtXMcdNLpl/Qvc3P2cB3s6lOV51nqsFq4ag==",
-      "dev": true
-    },
-    "node_modules/unrs-resolver": {
-      "version": "1.11.1",
-      "resolved": "https://registry.npmjs.org/unrs-resolver/-/unrs-resolver-1.11.1.tgz",
-      "integrity": "sha512-bSjt9pjaEBnNiGgc9rUiHGKv5l4/TGzDmYw3RhnkJGtLhbnnA/5qJj7x3dNDCRx/PJxu774LlH8lCOlB4hEfKg==",
-      "dev": true,
-      "hasInstallScript": true,
-      "dependencies": {
-        "napi-postinstall": "^0.3.0"
-      },
-      "funding": {
-        "url": "https://opencollective.com/unrs-resolver"
-      },
-      "optionalDependencies": {
-        "@unrs/resolver-binding-android-arm-eabi": "1.11.1",
-        "@unrs/resolver-binding-android-arm64": "1.11.1",
-        "@unrs/resolver-binding-darwin-arm64": "1.11.1",
-        "@unrs/resolver-binding-darwin-x64": "1.11.1",
-        "@unrs/resolver-binding-freebsd-x64": "1.11.1",
-        "@unrs/resolver-binding-linux-arm-gnueabihf": "1.11.1",
-        "@unrs/resolver-binding-linux-arm-musleabihf": "1.11.1",
-        "@unrs/resolver-binding-linux-arm64-gnu": "1.11.1",
-        "@unrs/resolver-binding-linux-arm64-musl": "1.11.1",
-        "@unrs/resolver-binding-linux-ppc64-gnu": "1.11.1",
-        "@unrs/resolver-binding-linux-riscv64-gnu": "1.11.1",
-        "@unrs/resolver-binding-linux-riscv64-musl": "1.11.1",
-        "@unrs/resolver-binding-linux-s390x-gnu": "1.11.1",
-        "@unrs/resolver-binding-linux-x64-gnu": "1.11.1",
-        "@unrs/resolver-binding-linux-x64-musl": "1.11.1",
-        "@unrs/resolver-binding-wasm32-wasi": "1.11.1",
-        "@unrs/resolver-binding-win32-arm64-msvc": "1.11.1",
-        "@unrs/resolver-binding-win32-ia32-msvc": "1.11.1",
-        "@unrs/resolver-binding-win32-x64-msvc": "1.11.1"
-      }
-    },
-    "node_modules/update-browserslist-db": {
-      "version": "1.1.3",
-      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
-      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
-      "dev": true,
-      "funding": [
-        {
-          "type": "opencollective",
-          "url": "https://opencollective.com/browserslist"
-        },
-        {
-          "type": "tidelift",
-          "url": "https://tidelift.com/funding/github/npm/browserslist"
-        },
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/ai"
-        }
-      ],
-      "dependencies": {
-        "escalade": "^3.2.0",
-        "picocolors": "^1.1.1"
-      },
-      "bin": {
-        "update-browserslist-db": "cli.js"
-      },
-      "peerDependencies": {
-        "browserslist": ">= 4.21.0"
-      }
-    },
-    "node_modules/v8-to-istanbul": {
-      "version": "9.3.0",
-      "resolved": "https://registry.npmjs.org/v8-to-istanbul/-/v8-to-istanbul-9.3.0.tgz",
-      "integrity": "sha512-kiGUalWN+rgBJ/1OHZsBtU4rXZOfj/7rKQxULKlIzwzQSvMJUUNgPwJEEh7gU6xEVxC0ahoOBvN2YI8GH6FNgA==",
-      "dev": true,
-      "dependencies": {
-        "@jridgewell/trace-mapping": "^0.3.12",
-        "@types/istanbul-lib-coverage": "^2.0.1",
-        "convert-source-map": "^2.0.0"
-      },
-      "engines": {
-        "node": ">=10.12.0"
-      }
-    },
-    "node_modules/w3c-xmlserializer": {
-      "version": "5.0.0",
-      "resolved": "https://registry.npmjs.org/w3c-xmlserializer/-/w3c-xmlserializer-5.0.0.tgz",
-      "integrity": "sha512-o8qghlI8NZHU1lLPrpi2+Uq7abh4GGPpYANlalzWxyWteJOCsr/P+oPBA49TOLu5FTZO4d3F9MnWJfiMo4BkmA==",
-      "dev": true,
-      "dependencies": {
-        "xml-name-validator": "^5.0.0"
-      },
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/walker": {
-      "version": "1.0.8",
-      "resolved": "https://registry.npmjs.org/walker/-/walker-1.0.8.tgz",
-      "integrity": "sha512-ts/8E8l5b7kY0vlWLewOkDXMmPdLcVV4GmOQLyxuSswIJsweeFZtAsMF7k1Nszz+TYBQrlYRmzOnr398y1JemQ==",
-      "dev": true,
-      "dependencies": {
-        "makeerror": "1.0.12"
-      }
-    },
-    "node_modules/webidl-conversions": {
-      "version": "7.0.0",
-      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-7.0.0.tgz",
-      "integrity": "sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==",
-      "dev": true,
-      "engines": {
-        "node": ">=12"
-      }
-    },
-    "node_modules/whatwg-encoding": {
-      "version": "3.1.1",
-      "resolved": "https://registry.npmjs.org/whatwg-encoding/-/whatwg-encoding-3.1.1.tgz",
-      "integrity": "sha512-6qN4hJdMwfYBtE3YBTTHhoeuUrDBPZmbQaxWAqSALV/MeEnR5z1xd8UKud2RAkFoPkmB+hli1TZSnyi84xz1vQ==",
-      "dev": true,
-      "dependencies": {
-        "iconv-lite": "0.6.3"
-      },
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/whatwg-mimetype": {
-      "version": "4.0.0",
-      "resolved": "https://registry.npmjs.org/whatwg-mimetype/-/whatwg-mimetype-4.0.0.tgz",
-      "integrity": "sha512-QaKxh0eNIi2mE9p2vEdzfagOKHCcj1pJ56EEHGQOVxp8r9/iszLUUV7v89x9O1p/T+NlTM5W7jW6+cz4Fq1YVg==",
-      "dev": true,
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/whatwg-url": {
-      "version": "14.2.0",
-      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-14.2.0.tgz",
-      "integrity": "sha512-De72GdQZzNTUBBChsXueQUnPKDkg/5A5zp7pFDuQAj5UFoENpiACU0wlCvzpAGnTkj++ihpKwKyYewn/XNUbKw==",
-      "dev": true,
-      "dependencies": {
-        "tr46": "^5.1.0",
-        "webidl-conversions": "^7.0.0"
-      },
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/which": {
-      "version": "2.0.2",
-      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
-      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
-      "dev": true,
-      "dependencies": {
-        "isexe": "^2.0.0"
-      },
-      "bin": {
-        "node-which": "bin/node-which"
-      },
-      "engines": {
-        "node": ">= 8"
-      }
-    },
-    "node_modules/wordwrap": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-1.0.0.tgz",
-      "integrity": "sha512-gvVzJFlPycKc5dZN4yPkP8w7Dc37BtP1yczEneOb4uq34pXZcvrtRTmWV8W+Ume+XCxKgbjM+nevkyFPMybd4Q==",
-      "dev": true
-    },
-    "node_modules/wrap-ansi": {
-      "version": "8.1.0",
-      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
-      "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
-      "dev": true,
-      "dependencies": {
-        "ansi-styles": "^6.1.0",
-        "string-width": "^5.0.1",
-        "strip-ansi": "^7.0.1"
-      },
-      "engines": {
-        "node": ">=12"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
-      }
-    },
-    "node_modules/wrap-ansi-cjs": {
-      "name": "wrap-ansi",
-      "version": "7.0.0",
-      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
-      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
-      "dev": true,
-      "dependencies": {
-        "ansi-styles": "^4.0.0",
-        "string-width": "^4.1.0",
-        "strip-ansi": "^6.0.0"
-      },
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
-      }
-    },
-    "node_modules/wrap-ansi-cjs/node_modules/emoji-regex": {
-      "version": "8.0.0",
-      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
-      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
-      "dev": true
-    },
-    "node_modules/wrap-ansi-cjs/node_modules/string-width": {
-      "version": "4.2.3",
-      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
-      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
-      "dev": true,
-      "dependencies": {
-        "emoji-regex": "^8.0.0",
-        "is-fullwidth-code-point": "^3.0.0",
-        "strip-ansi": "^6.0.1"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/wrap-ansi-cjs/node_modules/strip-ansi": {
-      "version": "6.0.1",
-      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
-      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
-      "dev": true,
-      "dependencies": {
-        "ansi-regex": "^5.0.1"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/wrap-ansi/node_modules/ansi-styles": {
-      "version": "6.2.3",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.3.tgz",
-      "integrity": "sha512-4Dj6M28JB+oAH8kFkTLUo+a2jwOFkuqb3yucU0CANcRRUbxS0cP0nZYCGjcc3BNXwRIsUVmDGgzawme7zvJHvg==",
-      "dev": true,
-      "engines": {
-        "node": ">=12"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
-      }
-    },
-    "node_modules/wrappy": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
-      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
-      "dev": true
-    },
-    "node_modules/write-file-atomic": {
-      "version": "5.0.1",
-      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-5.0.1.tgz",
-      "integrity": "sha512-+QU2zd6OTD8XWIJCbffaiQeH9U73qIqafo1x6V1snCWYGJf6cVE0cDR4D8xRzcEnfI21IFrUPzPGtcPf8AC+Rw==",
-      "dev": true,
-      "dependencies": {
-        "imurmurhash": "^0.1.4",
-        "signal-exit": "^4.0.1"
-      },
-      "engines": {
-        "node": "^14.17.0 || ^16.13.0 || >=18.0.0"
-      }
-    },
-    "node_modules/ws": {
-      "version": "8.18.3",
-      "resolved": "https://registry.npmjs.org/ws/-/ws-8.18.3.tgz",
-      "integrity": "sha512-PEIGCY5tSlUt50cqyMXfCzX+oOPqN0vuGqWzbcJ2xvnkzkq46oOpz7dQaTDBdfICb4N14+GARUDw2XV2N4tvzg==",
-      "dev": true,
-      "engines": {
-        "node": ">=10.0.0"
-      },
-      "peerDependencies": {
-        "bufferutil": "^4.0.1",
-        "utf-8-validate": ">=5.0.2"
-      },
-      "peerDependenciesMeta": {
-        "bufferutil": {
-          "optional": true
-        },
-        "utf-8-validate": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/xml-name-validator": {
-      "version": "5.0.0",
-      "resolved": "https://registry.npmjs.org/xml-name-validator/-/xml-name-validator-5.0.0.tgz",
-      "integrity": "sha512-EvGK8EJ3DhaHfbRlETOWAS5pO9MZITeauHKJyb8wyajUfQUenkIg2MvLDTZ4T/TgIcm3HU0TFBgWWboAZ30UHg==",
-      "dev": true,
-      "engines": {
-        "node": ">=18"
-      }
-    },
-    "node_modules/xmlchars": {
-      "version": "2.2.0",
-      "resolved": "https://registry.npmjs.org/xmlchars/-/xmlchars-2.2.0.tgz",
-      "integrity": "sha512-JZnDKK8B0RCDw84FNdDAIpZK+JuJw+s7Lz8nksI7SIuU3UXJJslUthsi+uWBUYOwPFwW7W7PRLRfUKpxjtjFCw==",
-      "dev": true
-    },
-    "node_modules/y18n": {
-      "version": "5.0.8",
-      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
-      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
-      "dev": true,
-      "engines": {
-        "node": ">=10"
-      }
-    },
-    "node_modules/yallist": {
-      "version": "3.1.1",
-      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
-      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
-      "dev": true
-    },
-    "node_modules/yargs": {
-      "version": "17.7.2",
-      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz",
-      "integrity": "sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==",
-      "dev": true,
-      "dependencies": {
-        "cliui": "^8.0.1",
-        "escalade": "^3.1.1",
-        "get-caller-file": "^2.0.5",
-        "require-directory": "^2.1.1",
-        "string-width": "^4.2.3",
-        "y18n": "^5.0.5",
-        "yargs-parser": "^21.1.1"
-      },
-      "engines": {
-        "node": ">=12"
-      }
-    },
-    "node_modules/yargs-parser": {
-      "version": "21.1.1",
-      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
-      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
-      "dev": true,
-      "engines": {
-        "node": ">=12"
-      }
-    },
-    "node_modules/yargs/node_modules/emoji-regex": {
-      "version": "8.0.0",
-      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
-      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
-      "dev": true
-    },
-    "node_modules/yargs/node_modules/string-width": {
-      "version": "4.2.3",
-      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
-      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
-      "dev": true,
-      "dependencies": {
-        "emoji-regex": "^8.0.0",
-        "is-fullwidth-code-point": "^3.0.0",
-        "strip-ansi": "^6.0.1"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/yargs/node_modules/strip-ansi": {
-      "version": "6.0.1",
-      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
-      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
-      "dev": true,
-      "dependencies": {
-        "ansi-regex": "^5.0.1"
-      },
-      "engines": {
-        "node": ">=8"
-      }
-    },
-    "node_modules/yocto-queue": {
-      "version": "0.1.0",
-      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
-      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
-      "dev": true,
-      "engines": {
-        "node": ">=10"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/sindresorhus"
-      }
-    }
-  }
-}
diff --git a/package.json b/package.json
deleted file mode 100644
index a2a3e08..0000000
--- a/package.json
+++ /dev/null
@@ -1,15 +0,0 @@
-{
-  "devDependencies": {
-    "@testing-library/jest-dom": "^6.8.0",
-    "@testing-library/react": "^16.3.0",
-    "@testing-library/user-event": "^14.6.1",
-    "@types/jest": "^30.0.0",
-    "@types/react": "^19.1.12",
-    "jest": "^30.1.3",
-    "jest-environment-jsdom": "^30.1.2",
-    "ts-jest": "^29.4.1"
-  },
-  "dependencies": {
-    "@auth0/auth0-react": "^2.4.0"
-  }
-}
diff --git a/test/README_RBAC_FRONTEND.md b/test/README_RBAC_FRONTEND.md
deleted file mode 100644
index 4b2d1ce..0000000
--- a/test/README_RBAC_FRONTEND.md
+++ /dev/null
@@ -1,47 +0,0 @@
-# Pruebas RBAC y Middleware en el Frontend
-
-Este documento describe cómo ejecutar y crear pruebas para la funcionalidad de control de acceso basado en roles (RBAC) y los middleware implementados en el frontend.
-
-## Dependencias necesarias
-- Jest
-- @testing-library/react
-- @testing-library/jest-dom
-- @testing-library/user-event
-- ts-jest
-
-## Estructura sugerida de pruebas
-- Ubicar los archivos de prueba en `test/fase-1-pruebas-unitarias-integracion/frontend/`
-- Usar archivos con extensión `.test.tsx` para componentes y `.test.ts` para lógica de middleware.
-
-## Ejemplo de prueba para RBAC
-```tsx
-import { render, screen } from '@testing-library/react';
-import ProtectedComponent from '../../frontend/src/components/rbac/ProtectedComponent';
-
-test('muestra contenido solo para roles permitidos', () => {
-  render(<ProtectedComponent allowedRoles={['admin']} userRole="admin">Contenido</ProtectedComponent>);
-  expect(screen.getByText('Contenido')).toBeInTheDocument();
-});
-```
-
-## Ejemplo de prueba para Middleware
-```ts
-import { rbacMiddleware } from '../../frontend/src/components/rbac/RBACLayout';
-
-test('permite acceso si el rol es válido', () => {
-  const result = rbacMiddleware('admin', ['admin', 'user']);
-  expect(result).toBe(true);
-});
-```
-
-## Ejecución de pruebas
-```bash
-npm test
-```
-
-## Recomendaciones
-- Crear pruebas unitarias para cada componente y función de middleware.
-- Documentar los casos de prueba en este archivo.
-- Mantener la cobertura de pruebas actualizada.
-
----
diff --git a/test/fase-1-pruebas-unitarias-integracion/frontend/ProtectedComponent.test.tsx b/test/fase-1-pruebas-unitarias-integracion/frontend/ProtectedComponent.test.tsx
deleted file mode 100644
index 2e30dfa..0000000
--- a/test/fase-1-pruebas-unitarias-integracion/frontend/ProtectedComponent.test.tsx
+++ /dev/null
@@ -1,60 +0,0 @@
-import React from 'react';
-import '@testing-library/jest-dom';
-import { render, screen } from '@testing-library/react';
-import { ProtectedComponent } from '../../../frontend/src/components/rbac/ProtectedComponent';
-import { AuthContext } from '../../../frontend/src/auth/AuthContext';
-
-const mockAuthContextValue = {
-  hasPermission: jest.fn(() => true),
-  hasRole: jest.fn((role) => role === 'admin'),
-  isLoading: false,
-  isAuthenticated: true,
-  user: {
-    id: '1',
-    email: 'test@example.com',
-    name: 'Test User',
-    permisos: {
-      gestionar_usuarios: true,
-      consultar_usuarios: true,
-      gestionar_personal: true,
-      consultar_personal: true,
-      gestionar_asistencia: true,
-      consultar_asistencia: true,
-      gestionar_nomina: true,
-      consultar_nomina: true,
-      gestionar_productividad: true,
-      consultar_productividad: true,
-      gestionar_reportes: true,
-      consultar_reportes: true,
-      gestionar_configuracion: true,
-      consultar_configuracion: true,
-    },
-    roles: [],
-  },
-  login: jest.fn(),
-  logout: jest.fn(),
-};
-
-describe('ProtectedComponent', () => {
-  test('muestra contenido solo para roles permitidos', () => {
-    render(
-      <AuthContext.Provider value={mockAuthContextValue}>
-        <ProtectedComponent requiredRole="admin">
-          Contenido permitido
-        </ProtectedComponent>
-      </AuthContext.Provider>
-    );
-    expect(screen.getByText('Contenido permitido')).toBeInTheDocument();
-  });
-
-  test('no muestra contenido para roles no permitidos', () => {
-    render(
-      <AuthContext.Provider value={mockAuthContextValue}>
-        <ProtectedComponent requiredRole="user">
-          Contenido restringido
-        </ProtectedComponent>
-      </AuthContext.Provider>
-    );
-    expect(screen.queryByText('Contenido restringido')).toBeNull();
-  });
-});
diff --git a/tsconfig.json b/tsconfig.json
deleted file mode 100644
index 8d6dfa0..0000000
--- a/tsconfig.json
+++ /dev/null
@@ -1,7 +0,0 @@
-{
-  "compilerOptions": {
-    // ...existing options...
-    "jsx": "react",
-    "esModuleInterop": true
-  }
-}
\ No newline at end of file
